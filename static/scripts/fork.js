/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var ForkJS;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/ForkTree/index.js":
/*!*******************************!*\
  !*** ./src/ForkTree/index.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ForkTree: () => (/* binding */ ForkTree)\n/* harmony export */ });\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar PidController = /*#__PURE__*/function () {\n  function PidController() {\n    _classCallCheck(this, PidController);\n    this.pid = Math.floor(Math.random() * 300 + 300);\n  }\n  return _createClass(PidController, [{\n    key: \"getPid\",\n    value: function getPid() {\n      this.pid += 1;\n      return this.pid;\n    }\n  }]);\n}();\nvar Node = /*#__PURE__*/function () {\n  function Node(pidController, ppid) {\n    _classCallCheck(this, Node);\n    this.pidController = pidController;\n    this.pid = pidController.getPid();\n    this.ppid = ppid;\n    this.children = [];\n    this.color = null;\n  }\n  return _createClass(Node, [{\n    key: \"addChild\",\n    value: function addChild(pidController) {\n      var newNode = new Node(pidController, this.pid);\n      this.children.push(newNode);\n      return newNode;\n    }\n  }]);\n}();\nvar ForkTree = /*#__PURE__*/function () {\n  function ForkTree(pidController, ppid) {\n    _classCallCheck(this, ForkTree);\n    this.pidController = pidController ? pidController : new PidController(1);\n    this.root = new Node(this.pidController, ppid ? ppid : 1);\n    this.count = 0;\n  }\n  return _createClass(ForkTree, [{\n    key: \"printTree\",\n    value: function printTree() {\n      var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.root;\n      var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var indentation = \" \".repeat(depth * 4);\n      console.log(\"\".concat(indentation, \"PID: \").concat(node.pid, \", PPID: \").concat(node.ppid));\n      var _iterator = _createForOfIteratorHelper(node.children),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var child = _step.value;\n          this.printTree(child, depth + 1); // Chamada recursiva para imprimir os filhos\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"addChild\",\n    value: function addChild() {\n      return this.root.addChild(this.pidController);\n    }\n  }, {\n    key: \"bundleTree\",\n    value: function bundleTree() {\n      var bundle = [];\n      var config = {\n        container: \"#output-container\",\n        connectors: {\n          type: \"curve\"\n        },\n        node: {\n          HTMLclass: \"nodeProcess\"\n        },\n        animation: {\n          nodeAnimation: \"easeOutCubic\"\n        }\n      };\n      var bundleNode = {\n        text: {\n          title: \"PPID: \".concat(this.root.ppid),\n          name: \"PID: \".concat(this.root.pid)\n        }\n      };\n      bundle.push(config);\n      bundle.push(bundleNode);\n      var _iterator2 = _createForOfIteratorHelper(this.root.children),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var child = _step2.value;\n          bundle.push.apply(bundle, _toConsumableArray(this._bundleTree(child, bundleNode)));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return bundle;\n    }\n  }, {\n    key: \"_bundleTree\",\n    value: function _bundleTree(node, parent) {\n      var bundle = [];\n      var bundleNode = {\n        text: {\n          title: \"PPID: \".concat(node.ppid),\n          name: \"PID: \".concat(node.pid)\n        },\n        parent: parent,\n        stackChildren: true,\n        HTMLclass: \"node-color-\".concat(node.color)\n      };\n      bundle.push(bundleNode);\n      var _iterator3 = _createForOfIteratorHelper(node.children),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var child = _step3.value;\n          bundle.push.apply(bundle, _toConsumableArray(this._bundleTree(child, bundleNode)));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return bundle;\n    }\n  }]);\n}();\n\n//# sourceURL=webpack://ForkJS/./src/ForkTree/index.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\n/* harmony import */ var antlr4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antlr4 */ \"./node_modules/antlr4/dist/antlr4.web.mjs\");\n/* harmony import */ var _parser_CLexer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser/CLexer */ \"./src/parser/CLexer.js\");\n/* harmony import */ var _parser_CParser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parser/CParser */ \"./src/parser/CParser.js\");\n/* harmony import */ var _parser_CVisitorImplemented__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./parser/CVisitorImplemented */ \"./src/parser/CVisitorImplemented.js\");\n\n\n\n\nvar parse = function parse(input) {\n  var stream = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].InputStream(input);\n  var lexer = new _parser_CLexer__WEBPACK_IMPORTED_MODULE_1__[\"default\"](stream);\n  var tokens = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].CommonTokenStream(lexer);\n  var parser = new _parser_CParser__WEBPACK_IMPORTED_MODULE_2__[\"default\"](tokens);\n  parser.buildParseTrees = true;\n  var tree = parser.compilationUnit();\n  var visitor = new _parser_CVisitorImplemented__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n  visitor.visit(tree);\n  return visitor.tree;\n};\n\n//# sourceURL=webpack://ForkJS/./src/index.js?");

/***/ }),

/***/ "./src/parser/CLexer.js":
/*!******************************!*\
  !*** ./src/parser/CLexer.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CLexer)\n/* harmony export */ });\n/* harmony import */ var antlr4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antlr4 */ \"./node_modules/antlr4/dist/antlr4.web.mjs\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// Generated from C.g4 by ANTLR 4.12.0\n// jshint ignore: start\n\nvar serializedATN = [4, 0, 123, 1417, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2, 73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78, 7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7, 83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 2, 87, 7, 87, 2, 88, 7, 88, 2, 89, 7, 89, 2, 90, 7, 90, 2, 91, 7, 91, 2, 92, 7, 92, 2, 93, 7, 93, 2, 94, 7, 94, 2, 95, 7, 95, 2, 96, 7, 96, 2, 97, 7, 97, 2, 98, 7, 98, 2, 99, 7, 99, 2, 100, 7, 100, 2, 101, 7, 101, 2, 102, 7, 102, 2, 103, 7, 103, 2, 104, 7, 104, 2, 105, 7, 105, 2, 106, 7, 106, 2, 107, 7, 107, 2, 108, 7, 108, 2, 109, 7, 109, 2, 110, 7, 110, 2, 111, 7, 111, 2, 112, 7, 112, 2, 113, 7, 113, 2, 114, 7, 114, 2, 115, 7, 115, 2, 116, 7, 116, 2, 117, 7, 117, 2, 118, 7, 118, 2, 119, 7, 119, 2, 120, 7, 120, 2, 121, 7, 121, 2, 122, 7, 122, 2, 123, 7, 123, 2, 124, 7, 124, 2, 125, 7, 125, 2, 126, 7, 126, 2, 127, 7, 127, 2, 128, 7, 128, 2, 129, 7, 129, 2, 130, 7, 130, 2, 131, 7, 131, 2, 132, 7, 132, 2, 133, 7, 133, 2, 134, 7, 134, 2, 135, 7, 135, 2, 136, 7, 136, 2, 137, 7, 137, 2, 138, 7, 138, 2, 139, 7, 139, 2, 140, 7, 140, 2, 141, 7, 141, 2, 142, 7, 142, 2, 143, 7, 143, 2, 144, 7, 144, 2, 145, 7, 145, 2, 146, 7, 146, 2, 147, 7, 147, 2, 148, 7, 148, 2, 149, 7, 149, 2, 150, 7, 150, 2, 151, 7, 151, 2, 152, 7, 152, 2, 153, 7, 153, 2, 154, 7, 154, 2, 155, 7, 155, 2, 156, 7, 156, 2, 157, 7, 157, 2, 158, 7, 158, 2, 159, 7, 159, 2, 160, 7, 160, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 50, 1, 50, 1, 50, 1, 50, 1, 50, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 63, 1, 63, 1, 64, 1, 64, 1, 65, 1, 65, 1, 66, 1, 66, 1, 67, 1, 67, 1, 68, 1, 68, 1, 69, 1, 69, 1, 70, 1, 70, 1, 70, 1, 71, 1, 71, 1, 72, 1, 72, 1, 72, 1, 73, 1, 73, 1, 73, 1, 74, 1, 74, 1, 74, 1, 75, 1, 75, 1, 76, 1, 76, 1, 76, 1, 77, 1, 77, 1, 78, 1, 78, 1, 78, 1, 79, 1, 79, 1, 80, 1, 80, 1, 81, 1, 81, 1, 82, 1, 82, 1, 83, 1, 83, 1, 84, 1, 84, 1, 84, 1, 85, 1, 85, 1, 85, 1, 86, 1, 86, 1, 87, 1, 87, 1, 88, 1, 88, 1, 89, 1, 89, 1, 90, 1, 90, 1, 91, 1, 91, 1, 92, 1, 92, 1, 93, 1, 93, 1, 94, 1, 94, 1, 94, 1, 95, 1, 95, 1, 95, 1, 96, 1, 96, 1, 96, 1, 97, 1, 97, 1, 97, 1, 98, 1, 98, 1, 98, 1, 99, 1, 99, 1, 99, 1, 99, 1, 100, 1, 100, 1, 100, 1, 100, 1, 101, 1, 101, 1, 101, 1, 102, 1, 102, 1, 102, 1, 103, 1, 103, 1, 103, 1, 104, 1, 104, 1, 104, 1, 105, 1, 105, 1, 105, 1, 106, 1, 106, 1, 106, 1, 107, 1, 107, 1, 108, 1, 108, 1, 108, 1, 108, 1, 109, 1, 109, 1, 109, 5, 109, 968, 8, 109, 10, 109, 12, 109, 971, 9, 109, 1, 110, 1, 110, 3, 110, 975, 8, 110, 1, 111, 1, 111, 1, 112, 1, 112, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113, 3, 113, 991, 8, 113, 1, 114, 1, 114, 1, 114, 1, 114, 1, 114, 1, 115, 1, 115, 1, 115, 3, 115, 1001, 8, 115, 1, 116, 1, 116, 3, 116, 1005, 8, 116, 1, 116, 1, 116, 3, 116, 1009, 8, 116, 1, 116, 1, 116, 3, 116, 1013, 8, 116, 1, 116, 3, 116, 1016, 8, 116, 1, 117, 1, 117, 1, 117, 4, 117, 1021, 8, 117, 11, 117, 12, 117, 1022, 1, 118, 1, 118, 5, 118, 1027, 8, 118, 10, 118, 12, 118, 1030, 9, 118, 1, 119, 1, 119, 5, 119, 1034, 8, 119, 10, 119, 12, 119, 1037, 9, 119, 1, 120, 1, 120, 4, 120, 1041, 8, 120, 11, 120, 12, 120, 1042, 1, 121, 1, 121, 1, 121, 1, 122, 1, 122, 1, 123, 1, 123, 1, 124, 1, 124, 1, 125, 1, 125, 3, 125, 1056, 8, 125, 1, 125, 1, 125, 1, 125, 1, 125, 1, 125, 3, 125, 1063, 8, 125, 1, 125, 1, 125, 3, 125, 1067, 8, 125, 3, 125, 1069, 8, 125, 1, 126, 1, 126, 1, 127, 1, 127, 1, 128, 1, 128, 1, 128, 1, 128, 3, 128, 1079, 8, 128, 1, 129, 1, 129, 3, 129, 1083, 8, 129, 1, 130, 1, 130, 3, 130, 1087, 8, 130, 1, 130, 3, 130, 1090, 8, 130, 1, 130, 1, 130, 1, 130, 3, 130, 1095, 8, 130, 3, 130, 1097, 8, 130, 1, 131, 1, 131, 1, 131, 3, 131, 1102, 8, 131, 1, 131, 1, 131, 3, 131, 1106, 8, 131, 1, 132, 3, 132, 1109, 8, 132, 1, 132, 1, 132, 1, 132, 1, 132, 1, 132, 3, 132, 1116, 8, 132, 1, 133, 1, 133, 3, 133, 1120, 8, 133, 1, 133, 1, 133, 1, 134, 1, 134, 1, 135, 4, 135, 1127, 8, 135, 11, 135, 12, 135, 1128, 1, 136, 3, 136, 1132, 8, 136, 1, 136, 1, 136, 1, 136, 1, 136, 1, 136, 3, 136, 1139, 8, 136, 1, 137, 1, 137, 3, 137, 1143, 8, 137, 1, 137, 1, 137, 1, 138, 4, 138, 1148, 8, 138, 11, 138, 12, 138, 1149, 1, 139, 1, 139, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 1, 140, 3, 140, 1176, 8, 140, 1, 141, 4, 141, 1179, 8, 141, 11, 141, 12, 141, 1180, 1, 142, 1, 142, 3, 142, 1185, 8, 142, 1, 143, 1, 143, 1, 143, 1, 143, 3, 143, 1191, 8, 143, 1, 144, 1, 144, 1, 144, 1, 145, 1, 145, 1, 145, 3, 145, 1199, 8, 145, 1, 145, 3, 145, 1202, 8, 145, 1, 146, 1, 146, 1, 146, 1, 146, 4, 146, 1208, 8, 146, 11, 146, 12, 146, 1209, 1, 147, 3, 147, 1213, 8, 147, 1, 147, 1, 147, 3, 147, 1217, 8, 147, 1, 147, 1, 147, 1, 148, 1, 148, 1, 148, 3, 148, 1224, 8, 148, 1, 149, 4, 149, 1227, 8, 149, 11, 149, 12, 149, 1228, 1, 150, 1, 150, 1, 150, 1, 150, 1, 150, 1, 150, 1, 150, 3, 150, 1238, 8, 150, 1, 151, 1, 151, 3, 151, 1242, 8, 151, 1, 151, 1, 151, 1, 151, 1, 151, 1, 151, 1, 151, 1, 151, 1, 151, 5, 151, 1252, 8, 151, 10, 151, 12, 151, 1255, 9, 151, 1, 151, 1, 151, 1, 152, 1, 152, 3, 152, 1261, 8, 152, 1, 152, 1, 152, 1, 152, 1, 152, 1, 152, 1, 152, 1, 152, 1, 152, 1, 152, 3, 152, 1272, 8, 152, 1, 152, 1, 152, 5, 152, 1276, 8, 152, 10, 152, 12, 152, 1279, 9, 152, 1, 152, 1, 152, 1, 152, 5, 152, 1284, 8, 152, 10, 152, 12, 152, 1287, 9, 152, 1, 152, 3, 152, 1290, 8, 152, 1, 152, 3, 152, 1293, 8, 152, 1, 152, 1, 152, 1, 152, 1, 152, 1, 153, 1, 153, 1, 153, 1, 153, 1, 153, 5, 153, 1304, 8, 153, 10, 153, 12, 153, 1307, 9, 153, 1, 153, 1, 153, 5, 153, 1311, 8, 153, 10, 153, 12, 153, 1314, 9, 153, 1, 153, 1, 153, 1, 153, 1, 153, 1, 154, 1, 154, 1, 154, 1, 154, 1, 154, 1, 154, 1, 154, 5, 154, 1327, 8, 154, 10, 154, 12, 154, 1330, 9, 154, 1, 154, 5, 154, 1333, 8, 154, 10, 154, 12, 154, 1336, 9, 154, 1, 154, 1, 154, 1, 155, 1, 155, 3, 155, 1342, 8, 155, 1, 155, 1, 155, 3, 155, 1346, 8, 155, 1, 155, 1, 155, 5, 155, 1350, 8, 155, 10, 155, 12, 155, 1353, 9, 155, 1, 155, 1, 155, 1, 156, 1, 156, 3, 156, 1359, 8, 156, 1, 156, 1, 156, 1, 156, 1, 156, 1, 156, 1, 156, 1, 156, 1, 156, 1, 156, 5, 156, 1370, 8, 156, 10, 156, 12, 156, 1373, 9, 156, 1, 156, 1, 156, 1, 157, 4, 157, 1378, 8, 157, 11, 157, 12, 157, 1379, 1, 157, 1, 157, 1, 158, 1, 158, 3, 158, 1386, 8, 158, 1, 158, 3, 158, 1389, 8, 158, 1, 158, 1, 158, 1, 159, 1, 159, 1, 159, 1, 159, 5, 159, 1397, 8, 159, 10, 159, 12, 159, 1400, 9, 159, 1, 159, 1, 159, 1, 159, 1, 159, 1, 159, 1, 160, 1, 160, 1, 160, 1, 160, 5, 160, 1411, 8, 160, 10, 160, 12, 160, 1414, 9, 160, 1, 160, 1, 160, 1, 1398, 0, 161, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 103, 52, 105, 53, 107, 54, 109, 55, 111, 56, 113, 57, 115, 58, 117, 59, 119, 60, 121, 61, 123, 62, 125, 63, 127, 64, 129, 65, 131, 66, 133, 67, 135, 68, 137, 69, 139, 70, 141, 71, 143, 72, 145, 73, 147, 74, 149, 75, 151, 76, 153, 77, 155, 78, 157, 79, 159, 80, 161, 81, 163, 82, 165, 83, 167, 84, 169, 85, 171, 86, 173, 87, 175, 88, 177, 89, 179, 90, 181, 91, 183, 92, 185, 93, 187, 94, 189, 95, 191, 96, 193, 97, 195, 98, 197, 99, 199, 100, 201, 101, 203, 102, 205, 103, 207, 104, 209, 105, 211, 106, 213, 107, 215, 108, 217, 109, 219, 110, 221, 0, 223, 0, 225, 0, 227, 0, 229, 0, 231, 111, 233, 0, 235, 0, 237, 0, 239, 0, 241, 0, 243, 0, 245, 0, 247, 0, 249, 0, 251, 0, 253, 0, 255, 0, 257, 0, 259, 0, 261, 0, 263, 0, 265, 0, 267, 0, 269, 0, 271, 112, 273, 0, 275, 0, 277, 0, 279, 0, 281, 0, 283, 0, 285, 0, 287, 0, 289, 0, 291, 0, 293, 0, 295, 113, 297, 0, 299, 0, 301, 0, 303, 114, 305, 115, 307, 116, 309, 117, 311, 118, 313, 119, 315, 120, 317, 121, 319, 122, 321, 123, 1, 0, 23, 3, 0, 65, 90, 95, 95, 97, 122, 1, 0, 48, 57, 2, 0, 66, 66, 98, 98, 1, 0, 48, 49, 2, 0, 88, 88, 120, 120, 1, 0, 49, 57, 1, 0, 48, 55, 3, 0, 48, 57, 65, 70, 97, 102, 2, 0, 85, 85, 117, 117, 2, 0, 76, 76, 108, 108, 2, 0, 69, 69, 101, 101, 2, 0, 43, 43, 45, 45, 2, 0, 80, 80, 112, 112, 4, 0, 70, 70, 76, 76, 102, 102, 108, 108, 4, 0, 10, 10, 13, 13, 39, 39, 92, 92, 10, 0, 34, 34, 39, 39, 63, 63, 92, 92, 97, 98, 102, 102, 110, 110, 114, 114, 116, 116, 118, 118, 3, 0, 76, 76, 85, 85, 117, 117, 4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 3, 0, 10, 10, 13, 13, 35, 35, 2, 0, 10, 10, 13, 13, 1, 0, 123, 123, 1, 0, 125, 125, 2, 0, 9, 9, 32, 32, 1456, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1, 0, 0, 0, 0, 135, 1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0, 139, 1, 0, 0, 0, 0, 141, 1, 0, 0, 0, 0, 143, 1, 0, 0, 0, 0, 145, 1, 0, 0, 0, 0, 147, 1, 0, 0, 0, 0, 149, 1, 0, 0, 0, 0, 151, 1, 0, 0, 0, 0, 153, 1, 0, 0, 0, 0, 155, 1, 0, 0, 0, 0, 157, 1, 0, 0, 0, 0, 159, 1, 0, 0, 0, 0, 161, 1, 0, 0, 0, 0, 163, 1, 0, 0, 0, 0, 165, 1, 0, 0, 0, 0, 167, 1, 0, 0, 0, 0, 169, 1, 0, 0, 0, 0, 171, 1, 0, 0, 0, 0, 173, 1, 0, 0, 0, 0, 175, 1, 0, 0, 0, 0, 177, 1, 0, 0, 0, 0, 179, 1, 0, 0, 0, 0, 181, 1, 0, 0, 0, 0, 183, 1, 0, 0, 0, 0, 185, 1, 0, 0, 0, 0, 187, 1, 0, 0, 0, 0, 189, 1, 0, 0, 0, 0, 191, 1, 0, 0, 0, 0, 193, 1, 0, 0, 0, 0, 195, 1, 0, 0, 0, 0, 197, 1, 0, 0, 0, 0, 199, 1, 0, 0, 0, 0, 201, 1, 0, 0, 0, 0, 203, 1, 0, 0, 0, 0, 205, 1, 0, 0, 0, 0, 207, 1, 0, 0, 0, 0, 209, 1, 0, 0, 0, 0, 211, 1, 0, 0, 0, 0, 213, 1, 0, 0, 0, 0, 215, 1, 0, 0, 0, 0, 217, 1, 0, 0, 0, 0, 219, 1, 0, 0, 0, 0, 231, 1, 0, 0, 0, 0, 271, 1, 0, 0, 0, 0, 295, 1, 0, 0, 0, 0, 303, 1, 0, 0, 0, 0, 305, 1, 0, 0, 0, 0, 307, 1, 0, 0, 0, 0, 309, 1, 0, 0, 0, 0, 311, 1, 0, 0, 0, 0, 313, 1, 0, 0, 0, 0, 315, 1, 0, 0, 0, 0, 317, 1, 0, 0, 0, 0, 319, 1, 0, 0, 0, 0, 321, 1, 0, 0, 0, 1, 323, 1, 0, 0, 0, 3, 337, 1, 0, 0, 0, 5, 354, 1, 0, 0, 0, 7, 373, 1, 0, 0, 0, 9, 380, 1, 0, 0, 0, 11, 388, 1, 0, 0, 0, 13, 396, 1, 0, 0, 0, 15, 407, 1, 0, 0, 0, 17, 418, 1, 0, 0, 0, 19, 428, 1, 0, 0, 0, 21, 439, 1, 0, 0, 0, 23, 447, 1, 0, 0, 0, 25, 457, 1, 0, 0, 0, 27, 468, 1, 0, 0, 0, 29, 479, 1, 0, 0, 0, 31, 492, 1, 0, 0, 0, 33, 498, 1, 0, 0, 0, 35, 512, 1, 0, 0, 0, 37, 520, 1, 0, 0, 0, 39, 533, 1, 0, 0, 0, 41, 538, 1, 0, 0, 0, 43, 544, 1, 0, 0, 0, 45, 549, 1, 0, 0, 0, 47, 554, 1, 0, 0, 0, 49, 560, 1, 0, 0, 0, 51, 569, 1, 0, 0, 0, 53, 577, 1, 0, 0, 0, 55, 580, 1, 0, 0, 0, 57, 587, 1, 0, 0, 0, 59, 592, 1, 0, 0, 0, 61, 597, 1, 0, 0, 0, 63, 604, 1, 0, 0, 0, 65, 610, 1, 0, 0, 0, 67, 614, 1, 0, 0, 0, 69, 619, 1, 0, 0, 0, 71, 622, 1, 0, 0, 0, 73, 629, 1, 0, 0, 0, 75, 633, 1, 0, 0, 0, 77, 638, 1, 0, 0, 0, 79, 647, 1, 0, 0, 0, 81, 656, 1, 0, 0, 0, 83, 663, 1, 0, 0, 0, 85, 669, 1, 0, 0, 0, 87, 676, 1, 0, 0, 0, 89, 683, 1, 0, 0, 0, 91, 690, 1, 0, 0, 0, 93, 697, 1, 0, 0, 0, 95, 704, 1, 0, 0, 0, 97, 712, 1, 0, 0, 0, 99, 718, 1, 0, 0, 0, 101, 727, 1, 0, 0, 0, 103, 732, 1, 0, 0, 0, 105, 741, 1, 0, 0, 0, 107, 747, 1, 0, 0, 0, 109, 756, 1, 0, 0, 0, 111, 765, 1, 0, 0, 0, 113, 773, 1, 0, 0, 0, 115, 779, 1, 0, 0, 0, 117, 788, 1, 0, 0, 0, 119, 797, 1, 0, 0, 0, 121, 808, 1, 0, 0, 0, 123, 818, 1, 0, 0, 0, 125, 833, 1, 0, 0, 0, 127, 847, 1, 0, 0, 0, 129, 849, 1, 0, 0, 0, 131, 851, 1, 0, 0, 0, 133, 853, 1, 0, 0, 0, 135, 855, 1, 0, 0, 0, 137, 857, 1, 0, 0, 0, 139, 859, 1, 0, 0, 0, 141, 861, 1, 0, 0, 0, 143, 864, 1, 0, 0, 0, 145, 866, 1, 0, 0, 0, 147, 869, 1, 0, 0, 0, 149, 872, 1, 0, 0, 0, 151, 875, 1, 0, 0, 0, 153, 877, 1, 0, 0, 0, 155, 880, 1, 0, 0, 0, 157, 882, 1, 0, 0, 0, 159, 885, 1, 0, 0, 0, 161, 887, 1, 0, 0, 0, 163, 889, 1, 0, 0, 0, 165, 891, 1, 0, 0, 0, 167, 893, 1, 0, 0, 0, 169, 895, 1, 0, 0, 0, 171, 898, 1, 0, 0, 0, 173, 901, 1, 0, 0, 0, 175, 903, 1, 0, 0, 0, 177, 905, 1, 0, 0, 0, 179, 907, 1, 0, 0, 0, 181, 909, 1, 0, 0, 0, 183, 911, 1, 0, 0, 0, 185, 913, 1, 0, 0, 0, 187, 915, 1, 0, 0, 0, 189, 917, 1, 0, 0, 0, 191, 920, 1, 0, 0, 0, 193, 923, 1, 0, 0, 0, 195, 926, 1, 0, 0, 0, 197, 929, 1, 0, 0, 0, 199, 932, 1, 0, 0, 0, 201, 936, 1, 0, 0, 0, 203, 940, 1, 0, 0, 0, 205, 943, 1, 0, 0, 0, 207, 946, 1, 0, 0, 0, 209, 949, 1, 0, 0, 0, 211, 952, 1, 0, 0, 0, 213, 955, 1, 0, 0, 0, 215, 958, 1, 0, 0, 0, 217, 960, 1, 0, 0, 0, 219, 964, 1, 0, 0, 0, 221, 974, 1, 0, 0, 0, 223, 976, 1, 0, 0, 0, 225, 978, 1, 0, 0, 0, 227, 990, 1, 0, 0, 0, 229, 992, 1, 0, 0, 0, 231, 1000, 1, 0, 0, 0, 233, 1015, 1, 0, 0, 0, 235, 1017, 1, 0, 0, 0, 237, 1024, 1, 0, 0, 0, 239, 1031, 1, 0, 0, 0, 241, 1038, 1, 0, 0, 0, 243, 1044, 1, 0, 0, 0, 245, 1047, 1, 0, 0, 0, 247, 1049, 1, 0, 0, 0, 249, 1051, 1, 0, 0, 0, 251, 1068, 1, 0, 0, 0, 253, 1070, 1, 0, 0, 0, 255, 1072, 1, 0, 0, 0, 257, 1078, 1, 0, 0, 0, 259, 1082, 1, 0, 0, 0, 261, 1096, 1, 0, 0, 0, 263, 1098, 1, 0, 0, 0, 265, 1115, 1, 0, 0, 0, 267, 1117, 1, 0, 0, 0, 269, 1123, 1, 0, 0, 0, 271, 1126, 1, 0, 0, 0, 273, 1138, 1, 0, 0, 0, 275, 1140, 1, 0, 0, 0, 277, 1147, 1, 0, 0, 0, 279, 1151, 1, 0, 0, 0, 281, 1175, 1, 0, 0, 0, 283, 1178, 1, 0, 0, 0, 285, 1184, 1, 0, 0, 0, 287, 1190, 1, 0, 0, 0, 289, 1192, 1, 0, 0, 0, 291, 1195, 1, 0, 0, 0, 293, 1203, 1, 0, 0, 0, 295, 1212, 1, 0, 0, 0, 297, 1223, 1, 0, 0, 0, 299, 1226, 1, 0, 0, 0, 301, 1237, 1, 0, 0, 0, 303, 1239, 1, 0, 0, 0, 305, 1258, 1, 0, 0, 0, 307, 1298, 1, 0, 0, 0, 309, 1319, 1, 0, 0, 0, 311, 1339, 1, 0, 0, 0, 313, 1356, 1, 0, 0, 0, 315, 1377, 1, 0, 0, 0, 317, 1388, 1, 0, 0, 0, 319, 1392, 1, 0, 0, 0, 321, 1406, 1, 0, 0, 0, 323, 324, 5, 95, 0, 0, 324, 325, 5, 95, 0, 0, 325, 326, 5, 101, 0, 0, 326, 327, 5, 120, 0, 0, 327, 328, 5, 116, 0, 0, 328, 329, 5, 101, 0, 0, 329, 330, 5, 110, 0, 0, 330, 331, 5, 115, 0, 0, 331, 332, 5, 105, 0, 0, 332, 333, 5, 111, 0, 0, 333, 334, 5, 110, 0, 0, 334, 335, 5, 95, 0, 0, 335, 336, 5, 95, 0, 0, 336, 2, 1, 0, 0, 0, 337, 338, 5, 95, 0, 0, 338, 339, 5, 95, 0, 0, 339, 340, 5, 98, 0, 0, 340, 341, 5, 117, 0, 0, 341, 342, 5, 105, 0, 0, 342, 343, 5, 108, 0, 0, 343, 344, 5, 116, 0, 0, 344, 345, 5, 105, 0, 0, 345, 346, 5, 110, 0, 0, 346, 347, 5, 95, 0, 0, 347, 348, 5, 118, 0, 0, 348, 349, 5, 97, 0, 0, 349, 350, 5, 95, 0, 0, 350, 351, 5, 97, 0, 0, 351, 352, 5, 114, 0, 0, 352, 353, 5, 103, 0, 0, 353, 4, 1, 0, 0, 0, 354, 355, 5, 95, 0, 0, 355, 356, 5, 95, 0, 0, 356, 357, 5, 98, 0, 0, 357, 358, 5, 117, 0, 0, 358, 359, 5, 105, 0, 0, 359, 360, 5, 108, 0, 0, 360, 361, 5, 116, 0, 0, 361, 362, 5, 105, 0, 0, 362, 363, 5, 110, 0, 0, 363, 364, 5, 95, 0, 0, 364, 365, 5, 111, 0, 0, 365, 366, 5, 102, 0, 0, 366, 367, 5, 102, 0, 0, 367, 368, 5, 115, 0, 0, 368, 369, 5, 101, 0, 0, 369, 370, 5, 116, 0, 0, 370, 371, 5, 111, 0, 0, 371, 372, 5, 102, 0, 0, 372, 6, 1, 0, 0, 0, 373, 374, 5, 95, 0, 0, 374, 375, 5, 95, 0, 0, 375, 376, 5, 109, 0, 0, 376, 377, 5, 49, 0, 0, 377, 378, 5, 50, 0, 0, 378, 379, 5, 56, 0, 0, 379, 8, 1, 0, 0, 0, 380, 381, 5, 95, 0, 0, 381, 382, 5, 95, 0, 0, 382, 383, 5, 109, 0, 0, 383, 384, 5, 49, 0, 0, 384, 385, 5, 50, 0, 0, 385, 386, 5, 56, 0, 0, 386, 387, 5, 100, 0, 0, 387, 10, 1, 0, 0, 0, 388, 389, 5, 95, 0, 0, 389, 390, 5, 95, 0, 0, 390, 391, 5, 109, 0, 0, 391, 392, 5, 49, 0, 0, 392, 393, 5, 50, 0, 0, 393, 394, 5, 56, 0, 0, 394, 395, 5, 105, 0, 0, 395, 12, 1, 0, 0, 0, 396, 397, 5, 95, 0, 0, 397, 398, 5, 95, 0, 0, 398, 399, 5, 116, 0, 0, 399, 400, 5, 121, 0, 0, 400, 401, 5, 112, 0, 0, 401, 402, 5, 101, 0, 0, 402, 403, 5, 111, 0, 0, 403, 404, 5, 102, 0, 0, 404, 405, 5, 95, 0, 0, 405, 406, 5, 95, 0, 0, 406, 14, 1, 0, 0, 0, 407, 408, 5, 95, 0, 0, 408, 409, 5, 95, 0, 0, 409, 410, 5, 105, 0, 0, 410, 411, 5, 110, 0, 0, 411, 412, 5, 108, 0, 0, 412, 413, 5, 105, 0, 0, 413, 414, 5, 110, 0, 0, 414, 415, 5, 101, 0, 0, 415, 416, 5, 95, 0, 0, 416, 417, 5, 95, 0, 0, 417, 16, 1, 0, 0, 0, 418, 419, 5, 95, 0, 0, 419, 420, 5, 95, 0, 0, 420, 421, 5, 115, 0, 0, 421, 422, 5, 116, 0, 0, 422, 423, 5, 100, 0, 0, 423, 424, 5, 99, 0, 0, 424, 425, 5, 97, 0, 0, 425, 426, 5, 108, 0, 0, 426, 427, 5, 108, 0, 0, 427, 18, 1, 0, 0, 0, 428, 429, 5, 95, 0, 0, 429, 430, 5, 95, 0, 0, 430, 431, 5, 100, 0, 0, 431, 432, 5, 101, 0, 0, 432, 433, 5, 99, 0, 0, 433, 434, 5, 108, 0, 0, 434, 435, 5, 115, 0, 0, 435, 436, 5, 112, 0, 0, 436, 437, 5, 101, 0, 0, 437, 438, 5, 99, 0, 0, 438, 20, 1, 0, 0, 0, 439, 440, 5, 95, 0, 0, 440, 441, 5, 95, 0, 0, 441, 442, 5, 99, 0, 0, 442, 443, 5, 100, 0, 0, 443, 444, 5, 101, 0, 0, 444, 445, 5, 99, 0, 0, 445, 446, 5, 108, 0, 0, 446, 22, 1, 0, 0, 0, 447, 448, 5, 95, 0, 0, 448, 449, 5, 95, 0, 0, 449, 450, 5, 99, 0, 0, 450, 451, 5, 108, 0, 0, 451, 452, 5, 114, 0, 0, 452, 453, 5, 99, 0, 0, 453, 454, 5, 97, 0, 0, 454, 455, 5, 108, 0, 0, 455, 456, 5, 108, 0, 0, 456, 24, 1, 0, 0, 0, 457, 458, 5, 95, 0, 0, 458, 459, 5, 95, 0, 0, 459, 460, 5, 102, 0, 0, 460, 461, 5, 97, 0, 0, 461, 462, 5, 115, 0, 0, 462, 463, 5, 116, 0, 0, 463, 464, 5, 99, 0, 0, 464, 465, 5, 97, 0, 0, 465, 466, 5, 108, 0, 0, 466, 467, 5, 108, 0, 0, 467, 26, 1, 0, 0, 0, 468, 469, 5, 95, 0, 0, 469, 470, 5, 95, 0, 0, 470, 471, 5, 116, 0, 0, 471, 472, 5, 104, 0, 0, 472, 473, 5, 105, 0, 0, 473, 474, 5, 115, 0, 0, 474, 475, 5, 99, 0, 0, 475, 476, 5, 97, 0, 0, 476, 477, 5, 108, 0, 0, 477, 478, 5, 108, 0, 0, 478, 28, 1, 0, 0, 0, 479, 480, 5, 95, 0, 0, 480, 481, 5, 95, 0, 0, 481, 482, 5, 118, 0, 0, 482, 483, 5, 101, 0, 0, 483, 484, 5, 99, 0, 0, 484, 485, 5, 116, 0, 0, 485, 486, 5, 111, 0, 0, 486, 487, 5, 114, 0, 0, 487, 488, 5, 99, 0, 0, 488, 489, 5, 97, 0, 0, 489, 490, 5, 108, 0, 0, 490, 491, 5, 108, 0, 0, 491, 30, 1, 0, 0, 0, 492, 493, 5, 95, 0, 0, 493, 494, 5, 95, 0, 0, 494, 495, 5, 97, 0, 0, 495, 496, 5, 115, 0, 0, 496, 497, 5, 109, 0, 0, 497, 32, 1, 0, 0, 0, 498, 499, 5, 95, 0, 0, 499, 500, 5, 95, 0, 0, 500, 501, 5, 97, 0, 0, 501, 502, 5, 116, 0, 0, 502, 503, 5, 116, 0, 0, 503, 504, 5, 114, 0, 0, 504, 505, 5, 105, 0, 0, 505, 506, 5, 98, 0, 0, 506, 507, 5, 117, 0, 0, 507, 508, 5, 116, 0, 0, 508, 509, 5, 101, 0, 0, 509, 510, 5, 95, 0, 0, 510, 511, 5, 95, 0, 0, 511, 34, 1, 0, 0, 0, 512, 513, 5, 95, 0, 0, 513, 514, 5, 95, 0, 0, 514, 515, 5, 97, 0, 0, 515, 516, 5, 115, 0, 0, 516, 517, 5, 109, 0, 0, 517, 518, 5, 95, 0, 0, 518, 519, 5, 95, 0, 0, 519, 36, 1, 0, 0, 0, 520, 521, 5, 95, 0, 0, 521, 522, 5, 95, 0, 0, 522, 523, 5, 118, 0, 0, 523, 524, 5, 111, 0, 0, 524, 525, 5, 108, 0, 0, 525, 526, 5, 97, 0, 0, 526, 527, 5, 116, 0, 0, 527, 528, 5, 105, 0, 0, 528, 529, 5, 108, 0, 0, 529, 530, 5, 101, 0, 0, 530, 531, 5, 95, 0, 0, 531, 532, 5, 95, 0, 0, 532, 38, 1, 0, 0, 0, 533, 534, 5, 97, 0, 0, 534, 535, 5, 117, 0, 0, 535, 536, 5, 116, 0, 0, 536, 537, 5, 111, 0, 0, 537, 40, 1, 0, 0, 0, 538, 539, 5, 98, 0, 0, 539, 540, 5, 114, 0, 0, 540, 541, 5, 101, 0, 0, 541, 542, 5, 97, 0, 0, 542, 543, 5, 107, 0, 0, 543, 42, 1, 0, 0, 0, 544, 545, 5, 99, 0, 0, 545, 546, 5, 97, 0, 0, 546, 547, 5, 115, 0, 0, 547, 548, 5, 101, 0, 0, 548, 44, 1, 0, 0, 0, 549, 550, 5, 99, 0, 0, 550, 551, 5, 104, 0, 0, 551, 552, 5, 97, 0, 0, 552, 553, 5, 114, 0, 0, 553, 46, 1, 0, 0, 0, 554, 555, 5, 99, 0, 0, 555, 556, 5, 111, 0, 0, 556, 557, 5, 110, 0, 0, 557, 558, 5, 115, 0, 0, 558, 559, 5, 116, 0, 0, 559, 48, 1, 0, 0, 0, 560, 561, 5, 99, 0, 0, 561, 562, 5, 111, 0, 0, 562, 563, 5, 110, 0, 0, 563, 564, 5, 116, 0, 0, 564, 565, 5, 105, 0, 0, 565, 566, 5, 110, 0, 0, 566, 567, 5, 117, 0, 0, 567, 568, 5, 101, 0, 0, 568, 50, 1, 0, 0, 0, 569, 570, 5, 100, 0, 0, 570, 571, 5, 101, 0, 0, 571, 572, 5, 102, 0, 0, 572, 573, 5, 97, 0, 0, 573, 574, 5, 117, 0, 0, 574, 575, 5, 108, 0, 0, 575, 576, 5, 116, 0, 0, 576, 52, 1, 0, 0, 0, 577, 578, 5, 100, 0, 0, 578, 579, 5, 111, 0, 0, 579, 54, 1, 0, 0, 0, 580, 581, 5, 100, 0, 0, 581, 582, 5, 111, 0, 0, 582, 583, 5, 117, 0, 0, 583, 584, 5, 98, 0, 0, 584, 585, 5, 108, 0, 0, 585, 586, 5, 101, 0, 0, 586, 56, 1, 0, 0, 0, 587, 588, 5, 101, 0, 0, 588, 589, 5, 108, 0, 0, 589, 590, 5, 115, 0, 0, 590, 591, 5, 101, 0, 0, 591, 58, 1, 0, 0, 0, 592, 593, 5, 101, 0, 0, 593, 594, 5, 110, 0, 0, 594, 595, 5, 117, 0, 0, 595, 596, 5, 109, 0, 0, 596, 60, 1, 0, 0, 0, 597, 598, 5, 101, 0, 0, 598, 599, 5, 120, 0, 0, 599, 600, 5, 116, 0, 0, 600, 601, 5, 101, 0, 0, 601, 602, 5, 114, 0, 0, 602, 603, 5, 110, 0, 0, 603, 62, 1, 0, 0, 0, 604, 605, 5, 102, 0, 0, 605, 606, 5, 108, 0, 0, 606, 607, 5, 111, 0, 0, 607, 608, 5, 97, 0, 0, 608, 609, 5, 116, 0, 0, 609, 64, 1, 0, 0, 0, 610, 611, 5, 102, 0, 0, 611, 612, 5, 111, 0, 0, 612, 613, 5, 114, 0, 0, 613, 66, 1, 0, 0, 0, 614, 615, 5, 103, 0, 0, 615, 616, 5, 111, 0, 0, 616, 617, 5, 116, 0, 0, 617, 618, 5, 111, 0, 0, 618, 68, 1, 0, 0, 0, 619, 620, 5, 105, 0, 0, 620, 621, 5, 102, 0, 0, 621, 70, 1, 0, 0, 0, 622, 623, 5, 105, 0, 0, 623, 624, 5, 110, 0, 0, 624, 625, 5, 108, 0, 0, 625, 626, 5, 105, 0, 0, 626, 627, 5, 110, 0, 0, 627, 628, 5, 101, 0, 0, 628, 72, 1, 0, 0, 0, 629, 630, 5, 105, 0, 0, 630, 631, 5, 110, 0, 0, 631, 632, 5, 116, 0, 0, 632, 74, 1, 0, 0, 0, 633, 634, 5, 108, 0, 0, 634, 635, 5, 111, 0, 0, 635, 636, 5, 110, 0, 0, 636, 637, 5, 103, 0, 0, 637, 76, 1, 0, 0, 0, 638, 639, 5, 114, 0, 0, 639, 640, 5, 101, 0, 0, 640, 641, 5, 103, 0, 0, 641, 642, 5, 105, 0, 0, 642, 643, 5, 115, 0, 0, 643, 644, 5, 116, 0, 0, 644, 645, 5, 101, 0, 0, 645, 646, 5, 114, 0, 0, 646, 78, 1, 0, 0, 0, 647, 648, 5, 114, 0, 0, 648, 649, 5, 101, 0, 0, 649, 650, 5, 115, 0, 0, 650, 651, 5, 116, 0, 0, 651, 652, 5, 114, 0, 0, 652, 653, 5, 105, 0, 0, 653, 654, 5, 99, 0, 0, 654, 655, 5, 116, 0, 0, 655, 80, 1, 0, 0, 0, 656, 657, 5, 114, 0, 0, 657, 658, 5, 101, 0, 0, 658, 659, 5, 116, 0, 0, 659, 660, 5, 117, 0, 0, 660, 661, 5, 114, 0, 0, 661, 662, 5, 110, 0, 0, 662, 82, 1, 0, 0, 0, 663, 664, 5, 115, 0, 0, 664, 665, 5, 104, 0, 0, 665, 666, 5, 111, 0, 0, 666, 667, 5, 114, 0, 0, 667, 668, 5, 116, 0, 0, 668, 84, 1, 0, 0, 0, 669, 670, 5, 115, 0, 0, 670, 671, 5, 105, 0, 0, 671, 672, 5, 103, 0, 0, 672, 673, 5, 110, 0, 0, 673, 674, 5, 101, 0, 0, 674, 675, 5, 100, 0, 0, 675, 86, 1, 0, 0, 0, 676, 677, 5, 115, 0, 0, 677, 678, 5, 105, 0, 0, 678, 679, 5, 122, 0, 0, 679, 680, 5, 101, 0, 0, 680, 681, 5, 111, 0, 0, 681, 682, 5, 102, 0, 0, 682, 88, 1, 0, 0, 0, 683, 684, 5, 115, 0, 0, 684, 685, 5, 116, 0, 0, 685, 686, 5, 97, 0, 0, 686, 687, 5, 116, 0, 0, 687, 688, 5, 105, 0, 0, 688, 689, 5, 99, 0, 0, 689, 90, 1, 0, 0, 0, 690, 691, 5, 115, 0, 0, 691, 692, 5, 116, 0, 0, 692, 693, 5, 114, 0, 0, 693, 694, 5, 117, 0, 0, 694, 695, 5, 99, 0, 0, 695, 696, 5, 116, 0, 0, 696, 92, 1, 0, 0, 0, 697, 698, 5, 115, 0, 0, 698, 699, 5, 119, 0, 0, 699, 700, 5, 105, 0, 0, 700, 701, 5, 116, 0, 0, 701, 702, 5, 99, 0, 0, 702, 703, 5, 104, 0, 0, 703, 94, 1, 0, 0, 0, 704, 705, 5, 116, 0, 0, 705, 706, 5, 121, 0, 0, 706, 707, 5, 112, 0, 0, 707, 708, 5, 101, 0, 0, 708, 709, 5, 100, 0, 0, 709, 710, 5, 101, 0, 0, 710, 711, 5, 102, 0, 0, 711, 96, 1, 0, 0, 0, 712, 713, 5, 117, 0, 0, 713, 714, 5, 110, 0, 0, 714, 715, 5, 105, 0, 0, 715, 716, 5, 111, 0, 0, 716, 717, 5, 110, 0, 0, 717, 98, 1, 0, 0, 0, 718, 719, 5, 117, 0, 0, 719, 720, 5, 110, 0, 0, 720, 721, 5, 115, 0, 0, 721, 722, 5, 105, 0, 0, 722, 723, 5, 103, 0, 0, 723, 724, 5, 110, 0, 0, 724, 725, 5, 101, 0, 0, 725, 726, 5, 100, 0, 0, 726, 100, 1, 0, 0, 0, 727, 728, 5, 118, 0, 0, 728, 729, 5, 111, 0, 0, 729, 730, 5, 105, 0, 0, 730, 731, 5, 100, 0, 0, 731, 102, 1, 0, 0, 0, 732, 733, 5, 118, 0, 0, 733, 734, 5, 111, 0, 0, 734, 735, 5, 108, 0, 0, 735, 736, 5, 97, 0, 0, 736, 737, 5, 116, 0, 0, 737, 738, 5, 105, 0, 0, 738, 739, 5, 108, 0, 0, 739, 740, 5, 101, 0, 0, 740, 104, 1, 0, 0, 0, 741, 742, 5, 119, 0, 0, 742, 743, 5, 104, 0, 0, 743, 744, 5, 105, 0, 0, 744, 745, 5, 108, 0, 0, 745, 746, 5, 101, 0, 0, 746, 106, 1, 0, 0, 0, 747, 748, 5, 95, 0, 0, 748, 749, 5, 65, 0, 0, 749, 750, 5, 108, 0, 0, 750, 751, 5, 105, 0, 0, 751, 752, 5, 103, 0, 0, 752, 753, 5, 110, 0, 0, 753, 754, 5, 97, 0, 0, 754, 755, 5, 115, 0, 0, 755, 108, 1, 0, 0, 0, 756, 757, 5, 95, 0, 0, 757, 758, 5, 65, 0, 0, 758, 759, 5, 108, 0, 0, 759, 760, 5, 105, 0, 0, 760, 761, 5, 103, 0, 0, 761, 762, 5, 110, 0, 0, 762, 763, 5, 111, 0, 0, 763, 764, 5, 102, 0, 0, 764, 110, 1, 0, 0, 0, 765, 766, 5, 95, 0, 0, 766, 767, 5, 65, 0, 0, 767, 768, 5, 116, 0, 0, 768, 769, 5, 111, 0, 0, 769, 770, 5, 109, 0, 0, 770, 771, 5, 105, 0, 0, 771, 772, 5, 99, 0, 0, 772, 112, 1, 0, 0, 0, 773, 774, 5, 95, 0, 0, 774, 775, 5, 66, 0, 0, 775, 776, 5, 111, 0, 0, 776, 777, 5, 111, 0, 0, 777, 778, 5, 108, 0, 0, 778, 114, 1, 0, 0, 0, 779, 780, 5, 95, 0, 0, 780, 781, 5, 67, 0, 0, 781, 782, 5, 111, 0, 0, 782, 783, 5, 109, 0, 0, 783, 784, 5, 112, 0, 0, 784, 785, 5, 108, 0, 0, 785, 786, 5, 101, 0, 0, 786, 787, 5, 120, 0, 0, 787, 116, 1, 0, 0, 0, 788, 789, 5, 95, 0, 0, 789, 790, 5, 71, 0, 0, 790, 791, 5, 101, 0, 0, 791, 792, 5, 110, 0, 0, 792, 793, 5, 101, 0, 0, 793, 794, 5, 114, 0, 0, 794, 795, 5, 105, 0, 0, 795, 796, 5, 99, 0, 0, 796, 118, 1, 0, 0, 0, 797, 798, 5, 95, 0, 0, 798, 799, 5, 73, 0, 0, 799, 800, 5, 109, 0, 0, 800, 801, 5, 97, 0, 0, 801, 802, 5, 103, 0, 0, 802, 803, 5, 105, 0, 0, 803, 804, 5, 110, 0, 0, 804, 805, 5, 97, 0, 0, 805, 806, 5, 114, 0, 0, 806, 807, 5, 121, 0, 0, 807, 120, 1, 0, 0, 0, 808, 809, 5, 95, 0, 0, 809, 810, 5, 78, 0, 0, 810, 811, 5, 111, 0, 0, 811, 812, 5, 114, 0, 0, 812, 813, 5, 101, 0, 0, 813, 814, 5, 116, 0, 0, 814, 815, 5, 117, 0, 0, 815, 816, 5, 114, 0, 0, 816, 817, 5, 110, 0, 0, 817, 122, 1, 0, 0, 0, 818, 819, 5, 95, 0, 0, 819, 820, 5, 83, 0, 0, 820, 821, 5, 116, 0, 0, 821, 822, 5, 97, 0, 0, 822, 823, 5, 116, 0, 0, 823, 824, 5, 105, 0, 0, 824, 825, 5, 99, 0, 0, 825, 826, 5, 95, 0, 0, 826, 827, 5, 97, 0, 0, 827, 828, 5, 115, 0, 0, 828, 829, 5, 115, 0, 0, 829, 830, 5, 101, 0, 0, 830, 831, 5, 114, 0, 0, 831, 832, 5, 116, 0, 0, 832, 124, 1, 0, 0, 0, 833, 834, 5, 95, 0, 0, 834, 835, 5, 84, 0, 0, 835, 836, 5, 104, 0, 0, 836, 837, 5, 114, 0, 0, 837, 838, 5, 101, 0, 0, 838, 839, 5, 97, 0, 0, 839, 840, 5, 100, 0, 0, 840, 841, 5, 95, 0, 0, 841, 842, 5, 108, 0, 0, 842, 843, 5, 111, 0, 0, 843, 844, 5, 99, 0, 0, 844, 845, 5, 97, 0, 0, 845, 846, 5, 108, 0, 0, 846, 126, 1, 0, 0, 0, 847, 848, 5, 40, 0, 0, 848, 128, 1, 0, 0, 0, 849, 850, 5, 41, 0, 0, 850, 130, 1, 0, 0, 0, 851, 852, 5, 91, 0, 0, 852, 132, 1, 0, 0, 0, 853, 854, 5, 93, 0, 0, 854, 134, 1, 0, 0, 0, 855, 856, 5, 123, 0, 0, 856, 136, 1, 0, 0, 0, 857, 858, 5, 125, 0, 0, 858, 138, 1, 0, 0, 0, 859, 860, 5, 60, 0, 0, 860, 140, 1, 0, 0, 0, 861, 862, 5, 60, 0, 0, 862, 863, 5, 61, 0, 0, 863, 142, 1, 0, 0, 0, 864, 865, 5, 62, 0, 0, 865, 144, 1, 0, 0, 0, 866, 867, 5, 62, 0, 0, 867, 868, 5, 61, 0, 0, 868, 146, 1, 0, 0, 0, 869, 870, 5, 60, 0, 0, 870, 871, 5, 60, 0, 0, 871, 148, 1, 0, 0, 0, 872, 873, 5, 62, 0, 0, 873, 874, 5, 62, 0, 0, 874, 150, 1, 0, 0, 0, 875, 876, 5, 43, 0, 0, 876, 152, 1, 0, 0, 0, 877, 878, 5, 43, 0, 0, 878, 879, 5, 43, 0, 0, 879, 154, 1, 0, 0, 0, 880, 881, 5, 45, 0, 0, 881, 156, 1, 0, 0, 0, 882, 883, 5, 45, 0, 0, 883, 884, 5, 45, 0, 0, 884, 158, 1, 0, 0, 0, 885, 886, 5, 42, 0, 0, 886, 160, 1, 0, 0, 0, 887, 888, 5, 47, 0, 0, 888, 162, 1, 0, 0, 0, 889, 890, 5, 37, 0, 0, 890, 164, 1, 0, 0, 0, 891, 892, 5, 38, 0, 0, 892, 166, 1, 0, 0, 0, 893, 894, 5, 124, 0, 0, 894, 168, 1, 0, 0, 0, 895, 896, 5, 38, 0, 0, 896, 897, 5, 38, 0, 0, 897, 170, 1, 0, 0, 0, 898, 899, 5, 124, 0, 0, 899, 900, 5, 124, 0, 0, 900, 172, 1, 0, 0, 0, 901, 902, 5, 94, 0, 0, 902, 174, 1, 0, 0, 0, 903, 904, 5, 33, 0, 0, 904, 176, 1, 0, 0, 0, 905, 906, 5, 126, 0, 0, 906, 178, 1, 0, 0, 0, 907, 908, 5, 63, 0, 0, 908, 180, 1, 0, 0, 0, 909, 910, 5, 58, 0, 0, 910, 182, 1, 0, 0, 0, 911, 912, 5, 59, 0, 0, 912, 184, 1, 0, 0, 0, 913, 914, 5, 44, 0, 0, 914, 186, 1, 0, 0, 0, 915, 916, 5, 61, 0, 0, 916, 188, 1, 0, 0, 0, 917, 918, 5, 42, 0, 0, 918, 919, 5, 61, 0, 0, 919, 190, 1, 0, 0, 0, 920, 921, 5, 47, 0, 0, 921, 922, 5, 61, 0, 0, 922, 192, 1, 0, 0, 0, 923, 924, 5, 37, 0, 0, 924, 925, 5, 61, 0, 0, 925, 194, 1, 0, 0, 0, 926, 927, 5, 43, 0, 0, 927, 928, 5, 61, 0, 0, 928, 196, 1, 0, 0, 0, 929, 930, 5, 45, 0, 0, 930, 931, 5, 61, 0, 0, 931, 198, 1, 0, 0, 0, 932, 933, 5, 60, 0, 0, 933, 934, 5, 60, 0, 0, 934, 935, 5, 61, 0, 0, 935, 200, 1, 0, 0, 0, 936, 937, 5, 62, 0, 0, 937, 938, 5, 62, 0, 0, 938, 939, 5, 61, 0, 0, 939, 202, 1, 0, 0, 0, 940, 941, 5, 38, 0, 0, 941, 942, 5, 61, 0, 0, 942, 204, 1, 0, 0, 0, 943, 944, 5, 94, 0, 0, 944, 945, 5, 61, 0, 0, 945, 206, 1, 0, 0, 0, 946, 947, 5, 124, 0, 0, 947, 948, 5, 61, 0, 0, 948, 208, 1, 0, 0, 0, 949, 950, 5, 61, 0, 0, 950, 951, 5, 61, 0, 0, 951, 210, 1, 0, 0, 0, 952, 953, 5, 33, 0, 0, 953, 954, 5, 61, 0, 0, 954, 212, 1, 0, 0, 0, 955, 956, 5, 45, 0, 0, 956, 957, 5, 62, 0, 0, 957, 214, 1, 0, 0, 0, 958, 959, 5, 46, 0, 0, 959, 216, 1, 0, 0, 0, 960, 961, 5, 46, 0, 0, 961, 962, 5, 46, 0, 0, 962, 963, 5, 46, 0, 0, 963, 218, 1, 0, 0, 0, 964, 969, 3, 221, 110, 0, 965, 968, 3, 221, 110, 0, 966, 968, 3, 225, 112, 0, 967, 965, 1, 0, 0, 0, 967, 966, 1, 0, 0, 0, 968, 971, 1, 0, 0, 0, 969, 967, 1, 0, 0, 0, 969, 970, 1, 0, 0, 0, 970, 220, 1, 0, 0, 0, 971, 969, 1, 0, 0, 0, 972, 975, 3, 223, 111, 0, 973, 975, 3, 227, 113, 0, 974, 972, 1, 0, 0, 0, 974, 973, 1, 0, 0, 0, 975, 222, 1, 0, 0, 0, 976, 977, 7, 0, 0, 0, 977, 224, 1, 0, 0, 0, 978, 979, 7, 1, 0, 0, 979, 226, 1, 0, 0, 0, 980, 981, 5, 92, 0, 0, 981, 982, 5, 117, 0, 0, 982, 983, 1, 0, 0, 0, 983, 991, 3, 229, 114, 0, 984, 985, 5, 92, 0, 0, 985, 986, 5, 85, 0, 0, 986, 987, 1, 0, 0, 0, 987, 988, 3, 229, 114, 0, 988, 989, 3, 229, 114, 0, 989, 991, 1, 0, 0, 0, 990, 980, 1, 0, 0, 0, 990, 984, 1, 0, 0, 0, 991, 228, 1, 0, 0, 0, 992, 993, 3, 249, 124, 0, 993, 994, 3, 249, 124, 0, 994, 995, 3, 249, 124, 0, 995, 996, 3, 249, 124, 0, 996, 230, 1, 0, 0, 0, 997, 1001, 3, 233, 116, 0, 998, 1001, 3, 259, 129, 0, 999, 1001, 3, 281, 140, 0, 1000, 997, 1, 0, 0, 0, 1000, 998, 1, 0, 0, 0, 1000, 999, 1, 0, 0, 0, 1001, 232, 1, 0, 0, 0, 1002, 1004, 3, 237, 118, 0, 1003, 1005, 3, 251, 125, 0, 1004, 1003, 1, 0, 0, 0, 1004, 1005, 1, 0, 0, 0, 1005, 1016, 1, 0, 0, 0, 1006, 1008, 3, 239, 119, 0, 1007, 1009, 3, 251, 125, 0, 1008, 1007, 1, 0, 0, 0, 1008, 1009, 1, 0, 0, 0, 1009, 1016, 1, 0, 0, 0, 1010, 1012, 3, 241, 120, 0, 1011, 1013, 3, 251, 125, 0, 1012, 1011, 1, 0, 0, 0, 1012, 1013, 1, 0, 0, 0, 1013, 1016, 1, 0, 0, 0, 1014, 1016, 3, 235, 117, 0, 1015, 1002, 1, 0, 0, 0, 1015, 1006, 1, 0, 0, 0, 1015, 1010, 1, 0, 0, 0, 1015, 1014, 1, 0, 0, 0, 1016, 234, 1, 0, 0, 0, 1017, 1018, 5, 48, 0, 0, 1018, 1020, 7, 2, 0, 0, 1019, 1021, 7, 3, 0, 0, 1020, 1019, 1, 0, 0, 0, 1021, 1022, 1, 0, 0, 0, 1022, 1020, 1, 0, 0, 0, 1022, 1023, 1, 0, 0, 0, 1023, 236, 1, 0, 0, 0, 1024, 1028, 3, 245, 122, 0, 1025, 1027, 3, 225, 112, 0, 1026, 1025, 1, 0, 0, 0, 1027, 1030, 1, 0, 0, 0, 1028, 1026, 1, 0, 0, 0, 1028, 1029, 1, 0, 0, 0, 1029, 238, 1, 0, 0, 0, 1030, 1028, 1, 0, 0, 0, 1031, 1035, 5, 48, 0, 0, 1032, 1034, 3, 247, 123, 0, 1033, 1032, 1, 0, 0, 0, 1034, 1037, 1, 0, 0, 0, 1035, 1033, 1, 0, 0, 0, 1035, 1036, 1, 0, 0, 0, 1036, 240, 1, 0, 0, 0, 1037, 1035, 1, 0, 0, 0, 1038, 1040, 3, 243, 121, 0, 1039, 1041, 3, 249, 124, 0, 1040, 1039, 1, 0, 0, 0, 1041, 1042, 1, 0, 0, 0, 1042, 1040, 1, 0, 0, 0, 1042, 1043, 1, 0, 0, 0, 1043, 242, 1, 0, 0, 0, 1044, 1045, 5, 48, 0, 0, 1045, 1046, 7, 4, 0, 0, 1046, 244, 1, 0, 0, 0, 1047, 1048, 7, 5, 0, 0, 1048, 246, 1, 0, 0, 0, 1049, 1050, 7, 6, 0, 0, 1050, 248, 1, 0, 0, 0, 1051, 1052, 7, 7, 0, 0, 1052, 250, 1, 0, 0, 0, 1053, 1055, 3, 253, 126, 0, 1054, 1056, 3, 255, 127, 0, 1055, 1054, 1, 0, 0, 0, 1055, 1056, 1, 0, 0, 0, 1056, 1069, 1, 0, 0, 0, 1057, 1058, 3, 253, 126, 0, 1058, 1059, 3, 257, 128, 0, 1059, 1069, 1, 0, 0, 0, 1060, 1062, 3, 255, 127, 0, 1061, 1063, 3, 253, 126, 0, 1062, 1061, 1, 0, 0, 0, 1062, 1063, 1, 0, 0, 0, 1063, 1069, 1, 0, 0, 0, 1064, 1066, 3, 257, 128, 0, 1065, 1067, 3, 253, 126, 0, 1066, 1065, 1, 0, 0, 0, 1066, 1067, 1, 0, 0, 0, 1067, 1069, 1, 0, 0, 0, 1068, 1053, 1, 0, 0, 0, 1068, 1057, 1, 0, 0, 0, 1068, 1060, 1, 0, 0, 0, 1068, 1064, 1, 0, 0, 0, 1069, 252, 1, 0, 0, 0, 1070, 1071, 7, 8, 0, 0, 1071, 254, 1, 0, 0, 0, 1072, 1073, 7, 9, 0, 0, 1073, 256, 1, 0, 0, 0, 1074, 1075, 5, 108, 0, 0, 1075, 1079, 5, 108, 0, 0, 1076, 1077, 5, 76, 0, 0, 1077, 1079, 5, 76, 0, 0, 1078, 1074, 1, 0, 0, 0, 1078, 1076, 1, 0, 0, 0, 1079, 258, 1, 0, 0, 0, 1080, 1083, 3, 261, 130, 0, 1081, 1083, 3, 263, 131, 0, 1082, 1080, 1, 0, 0, 0, 1082, 1081, 1, 0, 0, 0, 1083, 260, 1, 0, 0, 0, 1084, 1086, 3, 265, 132, 0, 1085, 1087, 3, 267, 133, 0, 1086, 1085, 1, 0, 0, 0, 1086, 1087, 1, 0, 0, 0, 1087, 1089, 1, 0, 0, 0, 1088, 1090, 3, 279, 139, 0, 1089, 1088, 1, 0, 0, 0, 1089, 1090, 1, 0, 0, 0, 1090, 1097, 1, 0, 0, 0, 1091, 1092, 3, 271, 135, 0, 1092, 1094, 3, 267, 133, 0, 1093, 1095, 3, 279, 139, 0, 1094, 1093, 1, 0, 0, 0, 1094, 1095, 1, 0, 0, 0, 1095, 1097, 1, 0, 0, 0, 1096, 1084, 1, 0, 0, 0, 1096, 1091, 1, 0, 0, 0, 1097, 262, 1, 0, 0, 0, 1098, 1101, 3, 243, 121, 0, 1099, 1102, 3, 273, 136, 0, 1100, 1102, 3, 277, 138, 0, 1101, 1099, 1, 0, 0, 0, 1101, 1100, 1, 0, 0, 0, 1102, 1103, 1, 0, 0, 0, 1103, 1105, 3, 275, 137, 0, 1104, 1106, 3, 279, 139, 0, 1105, 1104, 1, 0, 0, 0, 1105, 1106, 1, 0, 0, 0, 1106, 264, 1, 0, 0, 0, 1107, 1109, 3, 271, 135, 0, 1108, 1107, 1, 0, 0, 0, 1108, 1109, 1, 0, 0, 0, 1109, 1110, 1, 0, 0, 0, 1110, 1111, 5, 46, 0, 0, 1111, 1116, 3, 271, 135, 0, 1112, 1113, 3, 271, 135, 0, 1113, 1114, 5, 46, 0, 0, 1114, 1116, 1, 0, 0, 0, 1115, 1108, 1, 0, 0, 0, 1115, 1112, 1, 0, 0, 0, 1116, 266, 1, 0, 0, 0, 1117, 1119, 7, 10, 0, 0, 1118, 1120, 3, 269, 134, 0, 1119, 1118, 1, 0, 0, 0, 1119, 1120, 1, 0, 0, 0, 1120, 1121, 1, 0, 0, 0, 1121, 1122, 3, 271, 135, 0, 1122, 268, 1, 0, 0, 0, 1123, 1124, 7, 11, 0, 0, 1124, 270, 1, 0, 0, 0, 1125, 1127, 3, 225, 112, 0, 1126, 1125, 1, 0, 0, 0, 1127, 1128, 1, 0, 0, 0, 1128, 1126, 1, 0, 0, 0, 1128, 1129, 1, 0, 0, 0, 1129, 272, 1, 0, 0, 0, 1130, 1132, 3, 277, 138, 0, 1131, 1130, 1, 0, 0, 0, 1131, 1132, 1, 0, 0, 0, 1132, 1133, 1, 0, 0, 0, 1133, 1134, 5, 46, 0, 0, 1134, 1139, 3, 277, 138, 0, 1135, 1136, 3, 277, 138, 0, 1136, 1137, 5, 46, 0, 0, 1137, 1139, 1, 0, 0, 0, 1138, 1131, 1, 0, 0, 0, 1138, 1135, 1, 0, 0, 0, 1139, 274, 1, 0, 0, 0, 1140, 1142, 7, 12, 0, 0, 1141, 1143, 3, 269, 134, 0, 1142, 1141, 1, 0, 0, 0, 1142, 1143, 1, 0, 0, 0, 1143, 1144, 1, 0, 0, 0, 1144, 1145, 3, 271, 135, 0, 1145, 276, 1, 0, 0, 0, 1146, 1148, 3, 249, 124, 0, 1147, 1146, 1, 0, 0, 0, 1148, 1149, 1, 0, 0, 0, 1149, 1147, 1, 0, 0, 0, 1149, 1150, 1, 0, 0, 0, 1150, 278, 1, 0, 0, 0, 1151, 1152, 7, 13, 0, 0, 1152, 280, 1, 0, 0, 0, 1153, 1154, 5, 39, 0, 0, 1154, 1155, 3, 283, 141, 0, 1155, 1156, 5, 39, 0, 0, 1156, 1176, 1, 0, 0, 0, 1157, 1158, 5, 76, 0, 0, 1158, 1159, 5, 39, 0, 0, 1159, 1160, 1, 0, 0, 0, 1160, 1161, 3, 283, 141, 0, 1161, 1162, 5, 39, 0, 0, 1162, 1176, 1, 0, 0, 0, 1163, 1164, 5, 117, 0, 0, 1164, 1165, 5, 39, 0, 0, 1165, 1166, 1, 0, 0, 0, 1166, 1167, 3, 283, 141, 0, 1167, 1168, 5, 39, 0, 0, 1168, 1176, 1, 0, 0, 0, 1169, 1170, 5, 85, 0, 0, 1170, 1171, 5, 39, 0, 0, 1171, 1172, 1, 0, 0, 0, 1172, 1173, 3, 283, 141, 0, 1173, 1174, 5, 39, 0, 0, 1174, 1176, 1, 0, 0, 0, 1175, 1153, 1, 0, 0, 0, 1175, 1157, 1, 0, 0, 0, 1175, 1163, 1, 0, 0, 0, 1175, 1169, 1, 0, 0, 0, 1176, 282, 1, 0, 0, 0, 1177, 1179, 3, 285, 142, 0, 1178, 1177, 1, 0, 0, 0, 1179, 1180, 1, 0, 0, 0, 1180, 1178, 1, 0, 0, 0, 1180, 1181, 1, 0, 0, 0, 1181, 284, 1, 0, 0, 0, 1182, 1185, 8, 14, 0, 0, 1183, 1185, 3, 287, 143, 0, 1184, 1182, 1, 0, 0, 0, 1184, 1183, 1, 0, 0, 0, 1185, 286, 1, 0, 0, 0, 1186, 1191, 3, 289, 144, 0, 1187, 1191, 3, 291, 145, 0, 1188, 1191, 3, 293, 146, 0, 1189, 1191, 3, 227, 113, 0, 1190, 1186, 1, 0, 0, 0, 1190, 1187, 1, 0, 0, 0, 1190, 1188, 1, 0, 0, 0, 1190, 1189, 1, 0, 0, 0, 1191, 288, 1, 0, 0, 0, 1192, 1193, 5, 92, 0, 0, 1193, 1194, 7, 15, 0, 0, 1194, 290, 1, 0, 0, 0, 1195, 1196, 5, 92, 0, 0, 1196, 1198, 3, 247, 123, 0, 1197, 1199, 3, 247, 123, 0, 1198, 1197, 1, 0, 0, 0, 1198, 1199, 1, 0, 0, 0, 1199, 1201, 1, 0, 0, 0, 1200, 1202, 3, 247, 123, 0, 1201, 1200, 1, 0, 0, 0, 1201, 1202, 1, 0, 0, 0, 1202, 292, 1, 0, 0, 0, 1203, 1204, 5, 92, 0, 0, 1204, 1205, 5, 120, 0, 0, 1205, 1207, 1, 0, 0, 0, 1206, 1208, 3, 249, 124, 0, 1207, 1206, 1, 0, 0, 0, 1208, 1209, 1, 0, 0, 0, 1209, 1207, 1, 0, 0, 0, 1209, 1210, 1, 0, 0, 0, 1210, 294, 1, 0, 0, 0, 1211, 1213, 3, 297, 148, 0, 1212, 1211, 1, 0, 0, 0, 1212, 1213, 1, 0, 0, 0, 1213, 1214, 1, 0, 0, 0, 1214, 1216, 5, 34, 0, 0, 1215, 1217, 3, 299, 149, 0, 1216, 1215, 1, 0, 0, 0, 1216, 1217, 1, 0, 0, 0, 1217, 1218, 1, 0, 0, 0, 1218, 1219, 5, 34, 0, 0, 1219, 296, 1, 0, 0, 0, 1220, 1221, 5, 117, 0, 0, 1221, 1224, 5, 56, 0, 0, 1222, 1224, 7, 16, 0, 0, 1223, 1220, 1, 0, 0, 0, 1223, 1222, 1, 0, 0, 0, 1224, 298, 1, 0, 0, 0, 1225, 1227, 3, 301, 150, 0, 1226, 1225, 1, 0, 0, 0, 1227, 1228, 1, 0, 0, 0, 1228, 1226, 1, 0, 0, 0, 1228, 1229, 1, 0, 0, 0, 1229, 300, 1, 0, 0, 0, 1230, 1238, 8, 17, 0, 0, 1231, 1238, 3, 287, 143, 0, 1232, 1233, 5, 92, 0, 0, 1233, 1238, 5, 10, 0, 0, 1234, 1235, 5, 92, 0, 0, 1235, 1236, 5, 13, 0, 0, 1236, 1238, 5, 10, 0, 0, 1237, 1230, 1, 0, 0, 0, 1237, 1231, 1, 0, 0, 0, 1237, 1232, 1, 0, 0, 0, 1237, 1234, 1, 0, 0, 0, 1238, 302, 1, 0, 0, 0, 1239, 1241, 5, 35, 0, 0, 1240, 1242, 3, 315, 157, 0, 1241, 1240, 1, 0, 0, 0, 1241, 1242, 1, 0, 0, 0, 1242, 1243, 1, 0, 0, 0, 1243, 1244, 5, 100, 0, 0, 1244, 1245, 5, 101, 0, 0, 1245, 1246, 5, 102, 0, 0, 1246, 1247, 5, 105, 0, 0, 1247, 1248, 5, 110, 0, 0, 1248, 1249, 5, 101, 0, 0, 1249, 1253, 1, 0, 0, 0, 1250, 1252, 8, 18, 0, 0, 1251, 1250, 1, 0, 0, 0, 1252, 1255, 1, 0, 0, 0, 1253, 1251, 1, 0, 0, 0, 1253, 1254, 1, 0, 0, 0, 1254, 1256, 1, 0, 0, 0, 1255, 1253, 1, 0, 0, 0, 1256, 1257, 6, 151, 0, 0, 1257, 304, 1, 0, 0, 0, 1258, 1260, 5, 35, 0, 0, 1259, 1261, 3, 315, 157, 0, 1260, 1259, 1, 0, 0, 0, 1260, 1261, 1, 0, 0, 0, 1261, 1262, 1, 0, 0, 0, 1262, 1263, 5, 105, 0, 0, 1263, 1264, 5, 110, 0, 0, 1264, 1265, 5, 99, 0, 0, 1265, 1266, 5, 108, 0, 0, 1266, 1267, 5, 117, 0, 0, 1267, 1268, 5, 100, 0, 0, 1268, 1269, 5, 101, 0, 0, 1269, 1271, 1, 0, 0, 0, 1270, 1272, 3, 315, 157, 0, 1271, 1270, 1, 0, 0, 0, 1271, 1272, 1, 0, 0, 0, 1272, 1289, 1, 0, 0, 0, 1273, 1277, 5, 34, 0, 0, 1274, 1276, 8, 19, 0, 0, 1275, 1274, 1, 0, 0, 0, 1276, 1279, 1, 0, 0, 0, 1277, 1275, 1, 0, 0, 0, 1277, 1278, 1, 0, 0, 0, 1278, 1280, 1, 0, 0, 0, 1279, 1277, 1, 0, 0, 0, 1280, 1290, 5, 34, 0, 0, 1281, 1285, 5, 60, 0, 0, 1282, 1284, 8, 19, 0, 0, 1283, 1282, 1, 0, 0, 0, 1284, 1287, 1, 0, 0, 0, 1285, 1283, 1, 0, 0, 0, 1285, 1286, 1, 0, 0, 0, 1286, 1288, 1, 0, 0, 0, 1287, 1285, 1, 0, 0, 0, 1288, 1290, 5, 62, 0, 0, 1289, 1273, 1, 0, 0, 0, 1289, 1281, 1, 0, 0, 0, 1290, 1292, 1, 0, 0, 0, 1291, 1293, 3, 315, 157, 0, 1292, 1291, 1, 0, 0, 0, 1292, 1293, 1, 0, 0, 0, 1293, 1294, 1, 0, 0, 0, 1294, 1295, 3, 317, 158, 0, 1295, 1296, 1, 0, 0, 0, 1296, 1297, 6, 152, 0, 0, 1297, 306, 1, 0, 0, 0, 1298, 1299, 5, 97, 0, 0, 1299, 1300, 5, 115, 0, 0, 1300, 1301, 5, 109, 0, 0, 1301, 1305, 1, 0, 0, 0, 1302, 1304, 8, 20, 0, 0, 1303, 1302, 1, 0, 0, 0, 1304, 1307, 1, 0, 0, 0, 1305, 1303, 1, 0, 0, 0, 1305, 1306, 1, 0, 0, 0, 1306, 1308, 1, 0, 0, 0, 1307, 1305, 1, 0, 0, 0, 1308, 1312, 5, 123, 0, 0, 1309, 1311, 8, 21, 0, 0, 1310, 1309, 1, 0, 0, 0, 1311, 1314, 1, 0, 0, 0, 1312, 1310, 1, 0, 0, 0, 1312, 1313, 1, 0, 0, 0, 1313, 1315, 1, 0, 0, 0, 1314, 1312, 1, 0, 0, 0, 1315, 1316, 5, 125, 0, 0, 1316, 1317, 1, 0, 0, 0, 1317, 1318, 6, 153, 0, 0, 1318, 308, 1, 0, 0, 0, 1319, 1320, 5, 35, 0, 0, 1320, 1321, 5, 108, 0, 0, 1321, 1322, 5, 105, 0, 0, 1322, 1323, 5, 110, 0, 0, 1323, 1324, 5, 101, 0, 0, 1324, 1328, 1, 0, 0, 0, 1325, 1327, 3, 315, 157, 0, 1326, 1325, 1, 0, 0, 0, 1327, 1330, 1, 0, 0, 0, 1328, 1326, 1, 0, 0, 0, 1328, 1329, 1, 0, 0, 0, 1329, 1334, 1, 0, 0, 0, 1330, 1328, 1, 0, 0, 0, 1331, 1333, 8, 19, 0, 0, 1332, 1331, 1, 0, 0, 0, 1333, 1336, 1, 0, 0, 0, 1334, 1332, 1, 0, 0, 0, 1334, 1335, 1, 0, 0, 0, 1335, 1337, 1, 0, 0, 0, 1336, 1334, 1, 0, 0, 0, 1337, 1338, 6, 154, 0, 0, 1338, 310, 1, 0, 0, 0, 1339, 1341, 5, 35, 0, 0, 1340, 1342, 3, 315, 157, 0, 1341, 1340, 1, 0, 0, 0, 1341, 1342, 1, 0, 0, 0, 1342, 1343, 1, 0, 0, 0, 1343, 1345, 3, 237, 118, 0, 1344, 1346, 3, 315, 157, 0, 1345, 1344, 1, 0, 0, 0, 1345, 1346, 1, 0, 0, 0, 1346, 1347, 1, 0, 0, 0, 1347, 1351, 3, 295, 147, 0, 1348, 1350, 8, 19, 0, 0, 1349, 1348, 1, 0, 0, 0, 1350, 1353, 1, 0, 0, 0, 1351, 1349, 1, 0, 0, 0, 1351, 1352, 1, 0, 0, 0, 1352, 1354, 1, 0, 0, 0, 1353, 1351, 1, 0, 0, 0, 1354, 1355, 6, 155, 0, 0, 1355, 312, 1, 0, 0, 0, 1356, 1358, 5, 35, 0, 0, 1357, 1359, 3, 315, 157, 0, 1358, 1357, 1, 0, 0, 0, 1358, 1359, 1, 0, 0, 0, 1359, 1360, 1, 0, 0, 0, 1360, 1361, 5, 112, 0, 0, 1361, 1362, 5, 114, 0, 0, 1362, 1363, 5, 97, 0, 0, 1363, 1364, 5, 103, 0, 0, 1364, 1365, 5, 109, 0, 0, 1365, 1366, 5, 97, 0, 0, 1366, 1367, 1, 0, 0, 0, 1367, 1371, 3, 315, 157, 0, 1368, 1370, 8, 19, 0, 0, 1369, 1368, 1, 0, 0, 0, 1370, 1373, 1, 0, 0, 0, 1371, 1369, 1, 0, 0, 0, 1371, 1372, 1, 0, 0, 0, 1372, 1374, 1, 0, 0, 0, 1373, 1371, 1, 0, 0, 0, 1374, 1375, 6, 156, 0, 0, 1375, 314, 1, 0, 0, 0, 1376, 1378, 7, 22, 0, 0, 1377, 1376, 1, 0, 0, 0, 1378, 1379, 1, 0, 0, 0, 1379, 1377, 1, 0, 0, 0, 1379, 1380, 1, 0, 0, 0, 1380, 1381, 1, 0, 0, 0, 1381, 1382, 6, 157, 0, 0, 1382, 316, 1, 0, 0, 0, 1383, 1385, 5, 13, 0, 0, 1384, 1386, 5, 10, 0, 0, 1385, 1384, 1, 0, 0, 0, 1385, 1386, 1, 0, 0, 0, 1386, 1389, 1, 0, 0, 0, 1387, 1389, 5, 10, 0, 0, 1388, 1383, 1, 0, 0, 0, 1388, 1387, 1, 0, 0, 0, 1389, 1390, 1, 0, 0, 0, 1390, 1391, 6, 158, 0, 0, 1391, 318, 1, 0, 0, 0, 1392, 1393, 5, 47, 0, 0, 1393, 1394, 5, 42, 0, 0, 1394, 1398, 1, 0, 0, 0, 1395, 1397, 9, 0, 0, 0, 1396, 1395, 1, 0, 0, 0, 1397, 1400, 1, 0, 0, 0, 1398, 1399, 1, 0, 0, 0, 1398, 1396, 1, 0, 0, 0, 1399, 1401, 1, 0, 0, 0, 1400, 1398, 1, 0, 0, 0, 1401, 1402, 5, 42, 0, 0, 1402, 1403, 5, 47, 0, 0, 1403, 1404, 1, 0, 0, 0, 1404, 1405, 6, 159, 0, 0, 1405, 320, 1, 0, 0, 0, 1406, 1407, 5, 47, 0, 0, 1407, 1408, 5, 47, 0, 0, 1408, 1412, 1, 0, 0, 0, 1409, 1411, 8, 19, 0, 0, 1410, 1409, 1, 0, 0, 0, 1411, 1414, 1, 0, 0, 0, 1412, 1410, 1, 0, 0, 0, 1412, 1413, 1, 0, 0, 0, 1413, 1415, 1, 0, 0, 0, 1414, 1412, 1, 0, 0, 0, 1415, 1416, 6, 160, 0, 0, 1416, 322, 1, 0, 0, 0, 68, 0, 967, 969, 974, 990, 1000, 1004, 1008, 1012, 1015, 1022, 1028, 1035, 1042, 1055, 1062, 1066, 1068, 1078, 1082, 1086, 1089, 1094, 1096, 1101, 1105, 1108, 1115, 1119, 1128, 1131, 1138, 1142, 1149, 1175, 1180, 1184, 1190, 1198, 1201, 1209, 1212, 1216, 1223, 1228, 1237, 1241, 1253, 1260, 1271, 1277, 1285, 1289, 1292, 1305, 1312, 1328, 1334, 1341, 1345, 1351, 1358, 1371, 1379, 1385, 1388, 1398, 1412, 1, 6, 0, 0];\nvar atn = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATNDeserializer().deserialize(serializedATN);\nvar decisionsToDFA = atn.decisionToState.map(function (ds, index) {\n  return new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dfa.DFA(ds, index);\n});\nvar CLexer = /*#__PURE__*/function (_antlr4$Lexer) {\n  function CLexer(input) {\n    var _this;\n    _classCallCheck(this, CLexer);\n    _this = _callSuper(this, CLexer, [input]);\n    _this._interp = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.LexerATNSimulator(_this, atn, decisionsToDFA, new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.PredictionContextCache());\n    return _this;\n  }\n  _inherits(CLexer, _antlr4$Lexer);\n  return _createClass(CLexer);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Lexer);\n_defineProperty(CLexer, \"grammarFileName\", \"C.g4\");\n_defineProperty(CLexer, \"channelNames\", [\"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\"]);\n_defineProperty(CLexer, \"modeNames\", [\"DEFAULT_MODE\"]);\n_defineProperty(CLexer, \"literalNames\", [null, \"'__extension__'\", \"'__builtin_va_arg'\", \"'__builtin_offsetof'\", \"'__m128'\", \"'__m128d'\", \"'__m128i'\", \"'__typeof__'\", \"'__inline__'\", \"'__stdcall'\", \"'__declspec'\", \"'__cdecl'\", \"'__clrcall'\", \"'__fastcall'\", \"'__thiscall'\", \"'__vectorcall'\", \"'__asm'\", \"'__attribute__'\", \"'__asm__'\", \"'__volatile__'\", \"'auto'\", \"'break'\", \"'case'\", \"'char'\", \"'const'\", \"'continue'\", \"'default'\", \"'do'\", \"'double'\", \"'else'\", \"'enum'\", \"'extern'\", \"'float'\", \"'for'\", \"'goto'\", \"'if'\", \"'inline'\", \"'int'\", \"'long'\", \"'register'\", \"'restrict'\", \"'return'\", \"'short'\", \"'signed'\", \"'sizeof'\", \"'static'\", \"'struct'\", \"'switch'\", \"'typedef'\", \"'union'\", \"'unsigned'\", \"'void'\", \"'volatile'\", \"'while'\", \"'_Alignas'\", \"'_Alignof'\", \"'_Atomic'\", \"'_Bool'\", \"'_Complex'\", \"'_Generic'\", \"'_Imaginary'\", \"'_Noreturn'\", \"'_Static_assert'\", \"'_Thread_local'\", \"'('\", \"')'\", \"'['\", \"']'\", \"'{'\", \"'}'\", \"'<'\", \"'<='\", \"'>'\", \"'>='\", \"'<<'\", \"'>>'\", \"'+'\", \"'++'\", \"'-'\", \"'--'\", \"'*'\", \"'/'\", \"'%'\", \"'&'\", \"'|'\", \"'&&'\", \"'||'\", \"'^'\", \"'!'\", \"'~'\", \"'?'\", \"':'\", \"';'\", \"','\", \"'='\", \"'*='\", \"'/='\", \"'%='\", \"'+='\", \"'-='\", \"'<<='\", \"'>>='\", \"'&='\", \"'^='\", \"'|='\", \"'=='\", \"'!='\", \"'->'\", \"'.'\", \"'...'\"]);\n_defineProperty(CLexer, \"symbolicNames\", [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, \"Auto\", \"Break\", \"Case\", \"Char\", \"Const\", \"Continue\", \"Default\", \"Do\", \"Double\", \"Else\", \"Enum\", \"Extern\", \"Float\", \"For\", \"Goto\", \"If\", \"Inline\", \"Int\", \"Long\", \"Register\", \"Restrict\", \"Return\", \"Short\", \"Signed\", \"Sizeof\", \"Static\", \"Struct\", \"Switch\", \"Typedef\", \"Union\", \"Unsigned\", \"Void\", \"Volatile\", \"While\", \"Alignas\", \"Alignof\", \"Atomic\", \"Bool\", \"Complex\", \"Generic\", \"Imaginary\", \"Noreturn\", \"StaticAssert\", \"ThreadLocal\", \"LeftParen\", \"RightParen\", \"LeftBracket\", \"RightBracket\", \"LeftBrace\", \"RightBrace\", \"Less\", \"LessEqual\", \"Greater\", \"GreaterEqual\", \"LeftShift\", \"RightShift\", \"Plus\", \"PlusPlus\", \"Minus\", \"MinusMinus\", \"Star\", \"Div\", \"Mod\", \"And\", \"Or\", \"AndAnd\", \"OrOr\", \"Caret\", \"Not\", \"Tilde\", \"Question\", \"Colon\", \"Semi\", \"Comma\", \"Assign\", \"StarAssign\", \"DivAssign\", \"ModAssign\", \"PlusAssign\", \"MinusAssign\", \"LeftShiftAssign\", \"RightShiftAssign\", \"AndAssign\", \"XorAssign\", \"OrAssign\", \"Equal\", \"NotEqual\", \"Arrow\", \"Dot\", \"Ellipsis\", \"Identifier\", \"Constant\", \"DigitSequence\", \"StringLiteral\", \"ComplexDefine\", \"IncludeDirective\", \"AsmBlock\", \"LineAfterPreprocessing\", \"LineDirective\", \"PragmaDirective\", \"Whitespace\", \"Newline\", \"BlockComment\", \"LineComment\"]);\n_defineProperty(CLexer, \"ruleNames\", [\"T__0\", \"T__1\", \"T__2\", \"T__3\", \"T__4\", \"T__5\", \"T__6\", \"T__7\", \"T__8\", \"T__9\", \"T__10\", \"T__11\", \"T__12\", \"T__13\", \"T__14\", \"T__15\", \"T__16\", \"T__17\", \"T__18\", \"Auto\", \"Break\", \"Case\", \"Char\", \"Const\", \"Continue\", \"Default\", \"Do\", \"Double\", \"Else\", \"Enum\", \"Extern\", \"Float\", \"For\", \"Goto\", \"If\", \"Inline\", \"Int\", \"Long\", \"Register\", \"Restrict\", \"Return\", \"Short\", \"Signed\", \"Sizeof\", \"Static\", \"Struct\", \"Switch\", \"Typedef\", \"Union\", \"Unsigned\", \"Void\", \"Volatile\", \"While\", \"Alignas\", \"Alignof\", \"Atomic\", \"Bool\", \"Complex\", \"Generic\", \"Imaginary\", \"Noreturn\", \"StaticAssert\", \"ThreadLocal\", \"LeftParen\", \"RightParen\", \"LeftBracket\", \"RightBracket\", \"LeftBrace\", \"RightBrace\", \"Less\", \"LessEqual\", \"Greater\", \"GreaterEqual\", \"LeftShift\", \"RightShift\", \"Plus\", \"PlusPlus\", \"Minus\", \"MinusMinus\", \"Star\", \"Div\", \"Mod\", \"And\", \"Or\", \"AndAnd\", \"OrOr\", \"Caret\", \"Not\", \"Tilde\", \"Question\", \"Colon\", \"Semi\", \"Comma\", \"Assign\", \"StarAssign\", \"DivAssign\", \"ModAssign\", \"PlusAssign\", \"MinusAssign\", \"LeftShiftAssign\", \"RightShiftAssign\", \"AndAssign\", \"XorAssign\", \"OrAssign\", \"Equal\", \"NotEqual\", \"Arrow\", \"Dot\", \"Ellipsis\", \"Identifier\", \"IdentifierNondigit\", \"Nondigit\", \"Digit\", \"UniversalCharacterName\", \"HexQuad\", \"Constant\", \"IntegerConstant\", \"BinaryConstant\", \"DecimalConstant\", \"OctalConstant\", \"HexadecimalConstant\", \"HexadecimalPrefix\", \"NonzeroDigit\", \"OctalDigit\", \"HexadecimalDigit\", \"IntegerSuffix\", \"UnsignedSuffix\", \"LongSuffix\", \"LongLongSuffix\", \"FloatingConstant\", \"DecimalFloatingConstant\", \"HexadecimalFloatingConstant\", \"FractionalConstant\", \"ExponentPart\", \"Sign\", \"DigitSequence\", \"HexadecimalFractionalConstant\", \"BinaryExponentPart\", \"HexadecimalDigitSequence\", \"FloatingSuffix\", \"CharacterConstant\", \"CCharSequence\", \"CChar\", \"EscapeSequence\", \"SimpleEscapeSequence\", \"OctalEscapeSequence\", \"HexadecimalEscapeSequence\", \"StringLiteral\", \"EncodingPrefix\", \"SCharSequence\", \"SChar\", \"ComplexDefine\", \"IncludeDirective\", \"AsmBlock\", \"LineAfterPreprocessing\", \"LineDirective\", \"PragmaDirective\", \"Whitespace\", \"Newline\", \"BlockComment\", \"LineComment\"]);\n\nCLexer.EOF = antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Token.EOF;\nCLexer.T__0 = 1;\nCLexer.T__1 = 2;\nCLexer.T__2 = 3;\nCLexer.T__3 = 4;\nCLexer.T__4 = 5;\nCLexer.T__5 = 6;\nCLexer.T__6 = 7;\nCLexer.T__7 = 8;\nCLexer.T__8 = 9;\nCLexer.T__9 = 10;\nCLexer.T__10 = 11;\nCLexer.T__11 = 12;\nCLexer.T__12 = 13;\nCLexer.T__13 = 14;\nCLexer.T__14 = 15;\nCLexer.T__15 = 16;\nCLexer.T__16 = 17;\nCLexer.T__17 = 18;\nCLexer.T__18 = 19;\nCLexer.Auto = 20;\nCLexer.Break = 21;\nCLexer.Case = 22;\nCLexer.Char = 23;\nCLexer.Const = 24;\nCLexer.Continue = 25;\nCLexer.Default = 26;\nCLexer.Do = 27;\nCLexer.Double = 28;\nCLexer.Else = 29;\nCLexer.Enum = 30;\nCLexer.Extern = 31;\nCLexer.Float = 32;\nCLexer.For = 33;\nCLexer.Goto = 34;\nCLexer.If = 35;\nCLexer.Inline = 36;\nCLexer.Int = 37;\nCLexer.Long = 38;\nCLexer.Register = 39;\nCLexer.Restrict = 40;\nCLexer.Return = 41;\nCLexer.Short = 42;\nCLexer.Signed = 43;\nCLexer.Sizeof = 44;\nCLexer.Static = 45;\nCLexer.Struct = 46;\nCLexer.Switch = 47;\nCLexer.Typedef = 48;\nCLexer.Union = 49;\nCLexer.Unsigned = 50;\nCLexer.Void = 51;\nCLexer.Volatile = 52;\nCLexer.While = 53;\nCLexer.Alignas = 54;\nCLexer.Alignof = 55;\nCLexer.Atomic = 56;\nCLexer.Bool = 57;\nCLexer.Complex = 58;\nCLexer.Generic = 59;\nCLexer.Imaginary = 60;\nCLexer.Noreturn = 61;\nCLexer.StaticAssert = 62;\nCLexer.ThreadLocal = 63;\nCLexer.LeftParen = 64;\nCLexer.RightParen = 65;\nCLexer.LeftBracket = 66;\nCLexer.RightBracket = 67;\nCLexer.LeftBrace = 68;\nCLexer.RightBrace = 69;\nCLexer.Less = 70;\nCLexer.LessEqual = 71;\nCLexer.Greater = 72;\nCLexer.GreaterEqual = 73;\nCLexer.LeftShift = 74;\nCLexer.RightShift = 75;\nCLexer.Plus = 76;\nCLexer.PlusPlus = 77;\nCLexer.Minus = 78;\nCLexer.MinusMinus = 79;\nCLexer.Star = 80;\nCLexer.Div = 81;\nCLexer.Mod = 82;\nCLexer.And = 83;\nCLexer.Or = 84;\nCLexer.AndAnd = 85;\nCLexer.OrOr = 86;\nCLexer.Caret = 87;\nCLexer.Not = 88;\nCLexer.Tilde = 89;\nCLexer.Question = 90;\nCLexer.Colon = 91;\nCLexer.Semi = 92;\nCLexer.Comma = 93;\nCLexer.Assign = 94;\nCLexer.StarAssign = 95;\nCLexer.DivAssign = 96;\nCLexer.ModAssign = 97;\nCLexer.PlusAssign = 98;\nCLexer.MinusAssign = 99;\nCLexer.LeftShiftAssign = 100;\nCLexer.RightShiftAssign = 101;\nCLexer.AndAssign = 102;\nCLexer.XorAssign = 103;\nCLexer.OrAssign = 104;\nCLexer.Equal = 105;\nCLexer.NotEqual = 106;\nCLexer.Arrow = 107;\nCLexer.Dot = 108;\nCLexer.Ellipsis = 109;\nCLexer.Identifier = 110;\nCLexer.Constant = 111;\nCLexer.DigitSequence = 112;\nCLexer.StringLiteral = 113;\nCLexer.ComplexDefine = 114;\nCLexer.IncludeDirective = 115;\nCLexer.AsmBlock = 116;\nCLexer.LineAfterPreprocessing = 117;\nCLexer.LineDirective = 118;\nCLexer.PragmaDirective = 119;\nCLexer.Whitespace = 120;\nCLexer.Newline = 121;\nCLexer.BlockComment = 122;\nCLexer.LineComment = 123;\n\n//# sourceURL=webpack://ForkJS/./src/parser/CLexer.js?");

/***/ }),

/***/ "./src/parser/CListener.js":
/*!*********************************!*\
  !*** ./src/parser/CListener.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CListener)\n/* harmony export */ });\n/* harmony import */ var antlr4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antlr4 */ \"./node_modules/antlr4/dist/antlr4.web.mjs\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n// Generated from C.g4 by ANTLR 4.12.0\n// jshint ignore: start\n\n\n// This class defines a complete listener for a parse tree produced by CParser.\nvar CListener = /*#__PURE__*/function (_antlr4$tree$ParseTre) {\n  function CListener() {\n    _classCallCheck(this, CListener);\n    return _callSuper(this, CListener, arguments);\n  }\n  _inherits(CListener, _antlr4$tree$ParseTre);\n  return _createClass(CListener, [{\n    key: \"enterPrimaryExpression\",\n    value:\n    // Enter a parse tree produced by CParser#primaryExpression.\n    function enterPrimaryExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#primaryExpression.\n  }, {\n    key: \"exitPrimaryExpression\",\n    value: function exitPrimaryExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#genericSelection.\n  }, {\n    key: \"enterGenericSelection\",\n    value: function enterGenericSelection(ctx) {}\n\n    // Exit a parse tree produced by CParser#genericSelection.\n  }, {\n    key: \"exitGenericSelection\",\n    value: function exitGenericSelection(ctx) {}\n\n    // Enter a parse tree produced by CParser#genericAssocList.\n  }, {\n    key: \"enterGenericAssocList\",\n    value: function enterGenericAssocList(ctx) {}\n\n    // Exit a parse tree produced by CParser#genericAssocList.\n  }, {\n    key: \"exitGenericAssocList\",\n    value: function exitGenericAssocList(ctx) {}\n\n    // Enter a parse tree produced by CParser#genericAssociation.\n  }, {\n    key: \"enterGenericAssociation\",\n    value: function enterGenericAssociation(ctx) {}\n\n    // Exit a parse tree produced by CParser#genericAssociation.\n  }, {\n    key: \"exitGenericAssociation\",\n    value: function exitGenericAssociation(ctx) {}\n\n    // Enter a parse tree produced by CParser#postfixExpression.\n  }, {\n    key: \"enterPostfixExpression\",\n    value: function enterPostfixExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#postfixExpression.\n  }, {\n    key: \"exitPostfixExpression\",\n    value: function exitPostfixExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#argumentExpressionList.\n  }, {\n    key: \"enterArgumentExpressionList\",\n    value: function enterArgumentExpressionList(ctx) {}\n\n    // Exit a parse tree produced by CParser#argumentExpressionList.\n  }, {\n    key: \"exitArgumentExpressionList\",\n    value: function exitArgumentExpressionList(ctx) {}\n\n    // Enter a parse tree produced by CParser#unaryExpression.\n  }, {\n    key: \"enterUnaryExpression\",\n    value: function enterUnaryExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#unaryExpression.\n  }, {\n    key: \"exitUnaryExpression\",\n    value: function exitUnaryExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#unaryOperator.\n  }, {\n    key: \"enterUnaryOperator\",\n    value: function enterUnaryOperator(ctx) {}\n\n    // Exit a parse tree produced by CParser#unaryOperator.\n  }, {\n    key: \"exitUnaryOperator\",\n    value: function exitUnaryOperator(ctx) {}\n\n    // Enter a parse tree produced by CParser#castExpression.\n  }, {\n    key: \"enterCastExpression\",\n    value: function enterCastExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#castExpression.\n  }, {\n    key: \"exitCastExpression\",\n    value: function exitCastExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#multiplicativeExpression.\n  }, {\n    key: \"enterMultiplicativeExpression\",\n    value: function enterMultiplicativeExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#multiplicativeExpression.\n  }, {\n    key: \"exitMultiplicativeExpression\",\n    value: function exitMultiplicativeExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#additiveExpression.\n  }, {\n    key: \"enterAdditiveExpression\",\n    value: function enterAdditiveExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#additiveExpression.\n  }, {\n    key: \"exitAdditiveExpression\",\n    value: function exitAdditiveExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#shiftExpression.\n  }, {\n    key: \"enterShiftExpression\",\n    value: function enterShiftExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#shiftExpression.\n  }, {\n    key: \"exitShiftExpression\",\n    value: function exitShiftExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#relationalExpression.\n  }, {\n    key: \"enterRelationalExpression\",\n    value: function enterRelationalExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#relationalExpression.\n  }, {\n    key: \"exitRelationalExpression\",\n    value: function exitRelationalExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#equalityExpression.\n  }, {\n    key: \"enterEqualityExpression\",\n    value: function enterEqualityExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#equalityExpression.\n  }, {\n    key: \"exitEqualityExpression\",\n    value: function exitEqualityExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#andExpression.\n  }, {\n    key: \"enterAndExpression\",\n    value: function enterAndExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#andExpression.\n  }, {\n    key: \"exitAndExpression\",\n    value: function exitAndExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#exclusiveOrExpression.\n  }, {\n    key: \"enterExclusiveOrExpression\",\n    value: function enterExclusiveOrExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#exclusiveOrExpression.\n  }, {\n    key: \"exitExclusiveOrExpression\",\n    value: function exitExclusiveOrExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#inclusiveOrExpression.\n  }, {\n    key: \"enterInclusiveOrExpression\",\n    value: function enterInclusiveOrExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#inclusiveOrExpression.\n  }, {\n    key: \"exitInclusiveOrExpression\",\n    value: function exitInclusiveOrExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#logicalAndExpression.\n  }, {\n    key: \"enterLogicalAndExpression\",\n    value: function enterLogicalAndExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#logicalAndExpression.\n  }, {\n    key: \"exitLogicalAndExpression\",\n    value: function exitLogicalAndExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#logicalOrExpression.\n  }, {\n    key: \"enterLogicalOrExpression\",\n    value: function enterLogicalOrExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#logicalOrExpression.\n  }, {\n    key: \"exitLogicalOrExpression\",\n    value: function exitLogicalOrExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#conditionalExpression.\n  }, {\n    key: \"enterConditionalExpression\",\n    value: function enterConditionalExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#conditionalExpression.\n  }, {\n    key: \"exitConditionalExpression\",\n    value: function exitConditionalExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#assignmentExpression.\n  }, {\n    key: \"enterAssignmentExpression\",\n    value: function enterAssignmentExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#assignmentExpression.\n  }, {\n    key: \"exitAssignmentExpression\",\n    value: function exitAssignmentExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#assignmentOperator.\n  }, {\n    key: \"enterAssignmentOperator\",\n    value: function enterAssignmentOperator(ctx) {}\n\n    // Exit a parse tree produced by CParser#assignmentOperator.\n  }, {\n    key: \"exitAssignmentOperator\",\n    value: function exitAssignmentOperator(ctx) {}\n\n    // Enter a parse tree produced by CParser#expression.\n  }, {\n    key: \"enterExpression\",\n    value: function enterExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#expression.\n  }, {\n    key: \"exitExpression\",\n    value: function exitExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#constantExpression.\n  }, {\n    key: \"enterConstantExpression\",\n    value: function enterConstantExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#constantExpression.\n  }, {\n    key: \"exitConstantExpression\",\n    value: function exitConstantExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#declaration.\n  }, {\n    key: \"enterDeclaration\",\n    value: function enterDeclaration(ctx) {}\n\n    // Exit a parse tree produced by CParser#declaration.\n  }, {\n    key: \"exitDeclaration\",\n    value: function exitDeclaration(ctx) {}\n\n    // Enter a parse tree produced by CParser#declarationSpecifiers.\n  }, {\n    key: \"enterDeclarationSpecifiers\",\n    value: function enterDeclarationSpecifiers(ctx) {}\n\n    // Exit a parse tree produced by CParser#declarationSpecifiers.\n  }, {\n    key: \"exitDeclarationSpecifiers\",\n    value: function exitDeclarationSpecifiers(ctx) {}\n\n    // Enter a parse tree produced by CParser#declarationSpecifiers2.\n  }, {\n    key: \"enterDeclarationSpecifiers2\",\n    value: function enterDeclarationSpecifiers2(ctx) {}\n\n    // Exit a parse tree produced by CParser#declarationSpecifiers2.\n  }, {\n    key: \"exitDeclarationSpecifiers2\",\n    value: function exitDeclarationSpecifiers2(ctx) {}\n\n    // Enter a parse tree produced by CParser#declarationSpecifier.\n  }, {\n    key: \"enterDeclarationSpecifier\",\n    value: function enterDeclarationSpecifier(ctx) {}\n\n    // Exit a parse tree produced by CParser#declarationSpecifier.\n  }, {\n    key: \"exitDeclarationSpecifier\",\n    value: function exitDeclarationSpecifier(ctx) {}\n\n    // Enter a parse tree produced by CParser#initDeclaratorList.\n  }, {\n    key: \"enterInitDeclaratorList\",\n    value: function enterInitDeclaratorList(ctx) {}\n\n    // Exit a parse tree produced by CParser#initDeclaratorList.\n  }, {\n    key: \"exitInitDeclaratorList\",\n    value: function exitInitDeclaratorList(ctx) {}\n\n    // Enter a parse tree produced by CParser#initDeclarator.\n  }, {\n    key: \"enterInitDeclarator\",\n    value: function enterInitDeclarator(ctx) {}\n\n    // Exit a parse tree produced by CParser#initDeclarator.\n  }, {\n    key: \"exitInitDeclarator\",\n    value: function exitInitDeclarator(ctx) {}\n\n    // Enter a parse tree produced by CParser#storageClassSpecifier.\n  }, {\n    key: \"enterStorageClassSpecifier\",\n    value: function enterStorageClassSpecifier(ctx) {}\n\n    // Exit a parse tree produced by CParser#storageClassSpecifier.\n  }, {\n    key: \"exitStorageClassSpecifier\",\n    value: function exitStorageClassSpecifier(ctx) {}\n\n    // Enter a parse tree produced by CParser#typeSpecifier.\n  }, {\n    key: \"enterTypeSpecifier\",\n    value: function enterTypeSpecifier(ctx) {}\n\n    // Exit a parse tree produced by CParser#typeSpecifier.\n  }, {\n    key: \"exitTypeSpecifier\",\n    value: function exitTypeSpecifier(ctx) {}\n\n    // Enter a parse tree produced by CParser#structOrUnionSpecifier.\n  }, {\n    key: \"enterStructOrUnionSpecifier\",\n    value: function enterStructOrUnionSpecifier(ctx) {}\n\n    // Exit a parse tree produced by CParser#structOrUnionSpecifier.\n  }, {\n    key: \"exitStructOrUnionSpecifier\",\n    value: function exitStructOrUnionSpecifier(ctx) {}\n\n    // Enter a parse tree produced by CParser#structOrUnion.\n  }, {\n    key: \"enterStructOrUnion\",\n    value: function enterStructOrUnion(ctx) {}\n\n    // Exit a parse tree produced by CParser#structOrUnion.\n  }, {\n    key: \"exitStructOrUnion\",\n    value: function exitStructOrUnion(ctx) {}\n\n    // Enter a parse tree produced by CParser#structDeclarationList.\n  }, {\n    key: \"enterStructDeclarationList\",\n    value: function enterStructDeclarationList(ctx) {}\n\n    // Exit a parse tree produced by CParser#structDeclarationList.\n  }, {\n    key: \"exitStructDeclarationList\",\n    value: function exitStructDeclarationList(ctx) {}\n\n    // Enter a parse tree produced by CParser#structDeclaration.\n  }, {\n    key: \"enterStructDeclaration\",\n    value: function enterStructDeclaration(ctx) {}\n\n    // Exit a parse tree produced by CParser#structDeclaration.\n  }, {\n    key: \"exitStructDeclaration\",\n    value: function exitStructDeclaration(ctx) {}\n\n    // Enter a parse tree produced by CParser#specifierQualifierList.\n  }, {\n    key: \"enterSpecifierQualifierList\",\n    value: function enterSpecifierQualifierList(ctx) {}\n\n    // Exit a parse tree produced by CParser#specifierQualifierList.\n  }, {\n    key: \"exitSpecifierQualifierList\",\n    value: function exitSpecifierQualifierList(ctx) {}\n\n    // Enter a parse tree produced by CParser#structDeclaratorList.\n  }, {\n    key: \"enterStructDeclaratorList\",\n    value: function enterStructDeclaratorList(ctx) {}\n\n    // Exit a parse tree produced by CParser#structDeclaratorList.\n  }, {\n    key: \"exitStructDeclaratorList\",\n    value: function exitStructDeclaratorList(ctx) {}\n\n    // Enter a parse tree produced by CParser#structDeclarator.\n  }, {\n    key: \"enterStructDeclarator\",\n    value: function enterStructDeclarator(ctx) {}\n\n    // Exit a parse tree produced by CParser#structDeclarator.\n  }, {\n    key: \"exitStructDeclarator\",\n    value: function exitStructDeclarator(ctx) {}\n\n    // Enter a parse tree produced by CParser#enumSpecifier.\n  }, {\n    key: \"enterEnumSpecifier\",\n    value: function enterEnumSpecifier(ctx) {}\n\n    // Exit a parse tree produced by CParser#enumSpecifier.\n  }, {\n    key: \"exitEnumSpecifier\",\n    value: function exitEnumSpecifier(ctx) {}\n\n    // Enter a parse tree produced by CParser#enumeratorList.\n  }, {\n    key: \"enterEnumeratorList\",\n    value: function enterEnumeratorList(ctx) {}\n\n    // Exit a parse tree produced by CParser#enumeratorList.\n  }, {\n    key: \"exitEnumeratorList\",\n    value: function exitEnumeratorList(ctx) {}\n\n    // Enter a parse tree produced by CParser#enumerator.\n  }, {\n    key: \"enterEnumerator\",\n    value: function enterEnumerator(ctx) {}\n\n    // Exit a parse tree produced by CParser#enumerator.\n  }, {\n    key: \"exitEnumerator\",\n    value: function exitEnumerator(ctx) {}\n\n    // Enter a parse tree produced by CParser#enumerationConstant.\n  }, {\n    key: \"enterEnumerationConstant\",\n    value: function enterEnumerationConstant(ctx) {}\n\n    // Exit a parse tree produced by CParser#enumerationConstant.\n  }, {\n    key: \"exitEnumerationConstant\",\n    value: function exitEnumerationConstant(ctx) {}\n\n    // Enter a parse tree produced by CParser#atomicTypeSpecifier.\n  }, {\n    key: \"enterAtomicTypeSpecifier\",\n    value: function enterAtomicTypeSpecifier(ctx) {}\n\n    // Exit a parse tree produced by CParser#atomicTypeSpecifier.\n  }, {\n    key: \"exitAtomicTypeSpecifier\",\n    value: function exitAtomicTypeSpecifier(ctx) {}\n\n    // Enter a parse tree produced by CParser#typeQualifier.\n  }, {\n    key: \"enterTypeQualifier\",\n    value: function enterTypeQualifier(ctx) {}\n\n    // Exit a parse tree produced by CParser#typeQualifier.\n  }, {\n    key: \"exitTypeQualifier\",\n    value: function exitTypeQualifier(ctx) {}\n\n    // Enter a parse tree produced by CParser#functionSpecifier.\n  }, {\n    key: \"enterFunctionSpecifier\",\n    value: function enterFunctionSpecifier(ctx) {}\n\n    // Exit a parse tree produced by CParser#functionSpecifier.\n  }, {\n    key: \"exitFunctionSpecifier\",\n    value: function exitFunctionSpecifier(ctx) {}\n\n    // Enter a parse tree produced by CParser#alignmentSpecifier.\n  }, {\n    key: \"enterAlignmentSpecifier\",\n    value: function enterAlignmentSpecifier(ctx) {}\n\n    // Exit a parse tree produced by CParser#alignmentSpecifier.\n  }, {\n    key: \"exitAlignmentSpecifier\",\n    value: function exitAlignmentSpecifier(ctx) {}\n\n    // Enter a parse tree produced by CParser#declarator.\n  }, {\n    key: \"enterDeclarator\",\n    value: function enterDeclarator(ctx) {}\n\n    // Exit a parse tree produced by CParser#declarator.\n  }, {\n    key: \"exitDeclarator\",\n    value: function exitDeclarator(ctx) {}\n\n    // Enter a parse tree produced by CParser#directDeclarator.\n  }, {\n    key: \"enterDirectDeclarator\",\n    value: function enterDirectDeclarator(ctx) {}\n\n    // Exit a parse tree produced by CParser#directDeclarator.\n  }, {\n    key: \"exitDirectDeclarator\",\n    value: function exitDirectDeclarator(ctx) {}\n\n    // Enter a parse tree produced by CParser#vcSpecificModifer.\n  }, {\n    key: \"enterVcSpecificModifer\",\n    value: function enterVcSpecificModifer(ctx) {}\n\n    // Exit a parse tree produced by CParser#vcSpecificModifer.\n  }, {\n    key: \"exitVcSpecificModifer\",\n    value: function exitVcSpecificModifer(ctx) {}\n\n    // Enter a parse tree produced by CParser#gccDeclaratorExtension.\n  }, {\n    key: \"enterGccDeclaratorExtension\",\n    value: function enterGccDeclaratorExtension(ctx) {}\n\n    // Exit a parse tree produced by CParser#gccDeclaratorExtension.\n  }, {\n    key: \"exitGccDeclaratorExtension\",\n    value: function exitGccDeclaratorExtension(ctx) {}\n\n    // Enter a parse tree produced by CParser#gccAttributeSpecifier.\n  }, {\n    key: \"enterGccAttributeSpecifier\",\n    value: function enterGccAttributeSpecifier(ctx) {}\n\n    // Exit a parse tree produced by CParser#gccAttributeSpecifier.\n  }, {\n    key: \"exitGccAttributeSpecifier\",\n    value: function exitGccAttributeSpecifier(ctx) {}\n\n    // Enter a parse tree produced by CParser#gccAttributeList.\n  }, {\n    key: \"enterGccAttributeList\",\n    value: function enterGccAttributeList(ctx) {}\n\n    // Exit a parse tree produced by CParser#gccAttributeList.\n  }, {\n    key: \"exitGccAttributeList\",\n    value: function exitGccAttributeList(ctx) {}\n\n    // Enter a parse tree produced by CParser#gccAttribute.\n  }, {\n    key: \"enterGccAttribute\",\n    value: function enterGccAttribute(ctx) {}\n\n    // Exit a parse tree produced by CParser#gccAttribute.\n  }, {\n    key: \"exitGccAttribute\",\n    value: function exitGccAttribute(ctx) {}\n\n    // Enter a parse tree produced by CParser#nestedParenthesesBlock.\n  }, {\n    key: \"enterNestedParenthesesBlock\",\n    value: function enterNestedParenthesesBlock(ctx) {}\n\n    // Exit a parse tree produced by CParser#nestedParenthesesBlock.\n  }, {\n    key: \"exitNestedParenthesesBlock\",\n    value: function exitNestedParenthesesBlock(ctx) {}\n\n    // Enter a parse tree produced by CParser#pointer.\n  }, {\n    key: \"enterPointer\",\n    value: function enterPointer(ctx) {}\n\n    // Exit a parse tree produced by CParser#pointer.\n  }, {\n    key: \"exitPointer\",\n    value: function exitPointer(ctx) {}\n\n    // Enter a parse tree produced by CParser#typeQualifierList.\n  }, {\n    key: \"enterTypeQualifierList\",\n    value: function enterTypeQualifierList(ctx) {}\n\n    // Exit a parse tree produced by CParser#typeQualifierList.\n  }, {\n    key: \"exitTypeQualifierList\",\n    value: function exitTypeQualifierList(ctx) {}\n\n    // Enter a parse tree produced by CParser#parameterTypeList.\n  }, {\n    key: \"enterParameterTypeList\",\n    value: function enterParameterTypeList(ctx) {}\n\n    // Exit a parse tree produced by CParser#parameterTypeList.\n  }, {\n    key: \"exitParameterTypeList\",\n    value: function exitParameterTypeList(ctx) {}\n\n    // Enter a parse tree produced by CParser#parameterList.\n  }, {\n    key: \"enterParameterList\",\n    value: function enterParameterList(ctx) {}\n\n    // Exit a parse tree produced by CParser#parameterList.\n  }, {\n    key: \"exitParameterList\",\n    value: function exitParameterList(ctx) {}\n\n    // Enter a parse tree produced by CParser#parameterDeclaration.\n  }, {\n    key: \"enterParameterDeclaration\",\n    value: function enterParameterDeclaration(ctx) {}\n\n    // Exit a parse tree produced by CParser#parameterDeclaration.\n  }, {\n    key: \"exitParameterDeclaration\",\n    value: function exitParameterDeclaration(ctx) {}\n\n    // Enter a parse tree produced by CParser#identifierList.\n  }, {\n    key: \"enterIdentifierList\",\n    value: function enterIdentifierList(ctx) {}\n\n    // Exit a parse tree produced by CParser#identifierList.\n  }, {\n    key: \"exitIdentifierList\",\n    value: function exitIdentifierList(ctx) {}\n\n    // Enter a parse tree produced by CParser#typeName.\n  }, {\n    key: \"enterTypeName\",\n    value: function enterTypeName(ctx) {}\n\n    // Exit a parse tree produced by CParser#typeName.\n  }, {\n    key: \"exitTypeName\",\n    value: function exitTypeName(ctx) {}\n\n    // Enter a parse tree produced by CParser#abstractDeclarator.\n  }, {\n    key: \"enterAbstractDeclarator\",\n    value: function enterAbstractDeclarator(ctx) {}\n\n    // Exit a parse tree produced by CParser#abstractDeclarator.\n  }, {\n    key: \"exitAbstractDeclarator\",\n    value: function exitAbstractDeclarator(ctx) {}\n\n    // Enter a parse tree produced by CParser#directAbstractDeclarator.\n  }, {\n    key: \"enterDirectAbstractDeclarator\",\n    value: function enterDirectAbstractDeclarator(ctx) {}\n\n    // Exit a parse tree produced by CParser#directAbstractDeclarator.\n  }, {\n    key: \"exitDirectAbstractDeclarator\",\n    value: function exitDirectAbstractDeclarator(ctx) {}\n\n    // Enter a parse tree produced by CParser#typedefName.\n  }, {\n    key: \"enterTypedefName\",\n    value: function enterTypedefName(ctx) {}\n\n    // Exit a parse tree produced by CParser#typedefName.\n  }, {\n    key: \"exitTypedefName\",\n    value: function exitTypedefName(ctx) {}\n\n    // Enter a parse tree produced by CParser#initializer.\n  }, {\n    key: \"enterInitializer\",\n    value: function enterInitializer(ctx) {}\n\n    // Exit a parse tree produced by CParser#initializer.\n  }, {\n    key: \"exitInitializer\",\n    value: function exitInitializer(ctx) {}\n\n    // Enter a parse tree produced by CParser#initializerList.\n  }, {\n    key: \"enterInitializerList\",\n    value: function enterInitializerList(ctx) {}\n\n    // Exit a parse tree produced by CParser#initializerList.\n  }, {\n    key: \"exitInitializerList\",\n    value: function exitInitializerList(ctx) {}\n\n    // Enter a parse tree produced by CParser#designation.\n  }, {\n    key: \"enterDesignation\",\n    value: function enterDesignation(ctx) {}\n\n    // Exit a parse tree produced by CParser#designation.\n  }, {\n    key: \"exitDesignation\",\n    value: function exitDesignation(ctx) {}\n\n    // Enter a parse tree produced by CParser#designatorList.\n  }, {\n    key: \"enterDesignatorList\",\n    value: function enterDesignatorList(ctx) {}\n\n    // Exit a parse tree produced by CParser#designatorList.\n  }, {\n    key: \"exitDesignatorList\",\n    value: function exitDesignatorList(ctx) {}\n\n    // Enter a parse tree produced by CParser#designator.\n  }, {\n    key: \"enterDesignator\",\n    value: function enterDesignator(ctx) {}\n\n    // Exit a parse tree produced by CParser#designator.\n  }, {\n    key: \"exitDesignator\",\n    value: function exitDesignator(ctx) {}\n\n    // Enter a parse tree produced by CParser#staticAssertDeclaration.\n  }, {\n    key: \"enterStaticAssertDeclaration\",\n    value: function enterStaticAssertDeclaration(ctx) {}\n\n    // Exit a parse tree produced by CParser#staticAssertDeclaration.\n  }, {\n    key: \"exitStaticAssertDeclaration\",\n    value: function exitStaticAssertDeclaration(ctx) {}\n\n    // Enter a parse tree produced by CParser#statement.\n  }, {\n    key: \"enterStatement\",\n    value: function enterStatement(ctx) {}\n\n    // Exit a parse tree produced by CParser#statement.\n  }, {\n    key: \"exitStatement\",\n    value: function exitStatement(ctx) {}\n\n    // Enter a parse tree produced by CParser#labeledStatement.\n  }, {\n    key: \"enterLabeledStatement\",\n    value: function enterLabeledStatement(ctx) {}\n\n    // Exit a parse tree produced by CParser#labeledStatement.\n  }, {\n    key: \"exitLabeledStatement\",\n    value: function exitLabeledStatement(ctx) {}\n\n    // Enter a parse tree produced by CParser#compoundStatement.\n  }, {\n    key: \"enterCompoundStatement\",\n    value: function enterCompoundStatement(ctx) {}\n\n    // Exit a parse tree produced by CParser#compoundStatement.\n  }, {\n    key: \"exitCompoundStatement\",\n    value: function exitCompoundStatement(ctx) {}\n\n    // Enter a parse tree produced by CParser#blockItemList.\n  }, {\n    key: \"enterBlockItemList\",\n    value: function enterBlockItemList(ctx) {}\n\n    // Exit a parse tree produced by CParser#blockItemList.\n  }, {\n    key: \"exitBlockItemList\",\n    value: function exitBlockItemList(ctx) {}\n\n    // Enter a parse tree produced by CParser#blockItem.\n  }, {\n    key: \"enterBlockItem\",\n    value: function enterBlockItem(ctx) {}\n\n    // Exit a parse tree produced by CParser#blockItem.\n  }, {\n    key: \"exitBlockItem\",\n    value: function exitBlockItem(ctx) {}\n\n    // Enter a parse tree produced by CParser#expressionStatement.\n  }, {\n    key: \"enterExpressionStatement\",\n    value: function enterExpressionStatement(ctx) {}\n\n    // Exit a parse tree produced by CParser#expressionStatement.\n  }, {\n    key: \"exitExpressionStatement\",\n    value: function exitExpressionStatement(ctx) {}\n\n    // Enter a parse tree produced by CParser#selectionStatement.\n  }, {\n    key: \"enterSelectionStatement\",\n    value: function enterSelectionStatement(ctx) {}\n\n    // Exit a parse tree produced by CParser#selectionStatement.\n  }, {\n    key: \"exitSelectionStatement\",\n    value: function exitSelectionStatement(ctx) {}\n\n    // Enter a parse tree produced by CParser#iterationStatement.\n  }, {\n    key: \"enterIterationStatement\",\n    value: function enterIterationStatement(ctx) {}\n\n    // Exit a parse tree produced by CParser#iterationStatement.\n  }, {\n    key: \"exitIterationStatement\",\n    value: function exitIterationStatement(ctx) {}\n\n    // Enter a parse tree produced by CParser#forCondition.\n  }, {\n    key: \"enterForCondition\",\n    value: function enterForCondition(ctx) {}\n\n    // Exit a parse tree produced by CParser#forCondition.\n  }, {\n    key: \"exitForCondition\",\n    value: function exitForCondition(ctx) {}\n\n    // Enter a parse tree produced by CParser#forDeclaration.\n  }, {\n    key: \"enterForDeclaration\",\n    value: function enterForDeclaration(ctx) {}\n\n    // Exit a parse tree produced by CParser#forDeclaration.\n  }, {\n    key: \"exitForDeclaration\",\n    value: function exitForDeclaration(ctx) {}\n\n    // Enter a parse tree produced by CParser#forExpression.\n  }, {\n    key: \"enterForExpression\",\n    value: function enterForExpression(ctx) {}\n\n    // Exit a parse tree produced by CParser#forExpression.\n  }, {\n    key: \"exitForExpression\",\n    value: function exitForExpression(ctx) {}\n\n    // Enter a parse tree produced by CParser#jumpStatement.\n  }, {\n    key: \"enterJumpStatement\",\n    value: function enterJumpStatement(ctx) {}\n\n    // Exit a parse tree produced by CParser#jumpStatement.\n  }, {\n    key: \"exitJumpStatement\",\n    value: function exitJumpStatement(ctx) {}\n\n    // Enter a parse tree produced by CParser#compilationUnit.\n  }, {\n    key: \"enterCompilationUnit\",\n    value: function enterCompilationUnit(ctx) {}\n\n    // Exit a parse tree produced by CParser#compilationUnit.\n  }, {\n    key: \"exitCompilationUnit\",\n    value: function exitCompilationUnit(ctx) {}\n\n    // Enter a parse tree produced by CParser#translationUnit.\n  }, {\n    key: \"enterTranslationUnit\",\n    value: function enterTranslationUnit(ctx) {}\n\n    // Exit a parse tree produced by CParser#translationUnit.\n  }, {\n    key: \"exitTranslationUnit\",\n    value: function exitTranslationUnit(ctx) {}\n\n    // Enter a parse tree produced by CParser#externalDeclaration.\n  }, {\n    key: \"enterExternalDeclaration\",\n    value: function enterExternalDeclaration(ctx) {}\n\n    // Exit a parse tree produced by CParser#externalDeclaration.\n  }, {\n    key: \"exitExternalDeclaration\",\n    value: function exitExternalDeclaration(ctx) {}\n\n    // Enter a parse tree produced by CParser#functionDefinition.\n  }, {\n    key: \"enterFunctionDefinition\",\n    value: function enterFunctionDefinition(ctx) {}\n\n    // Exit a parse tree produced by CParser#functionDefinition.\n  }, {\n    key: \"exitFunctionDefinition\",\n    value: function exitFunctionDefinition(ctx) {}\n\n    // Enter a parse tree produced by CParser#declarationList.\n  }, {\n    key: \"enterDeclarationList\",\n    value: function enterDeclarationList(ctx) {}\n\n    // Exit a parse tree produced by CParser#declarationList.\n  }, {\n    key: \"exitDeclarationList\",\n    value: function exitDeclarationList(ctx) {}\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tree.ParseTreeListener);\n\n\n//# sourceURL=webpack://ForkJS/./src/parser/CListener.js?");

/***/ }),

/***/ "./src/parser/CParser.js":
/*!*******************************!*\
  !*** ./src/parser/CParser.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CParser)\n/* harmony export */ });\n/* harmony import */ var antlr4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antlr4 */ \"./node_modules/antlr4/dist/antlr4.web.mjs\");\n/* harmony import */ var _CListener_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CListener.js */ \"./src/parser/CListener.js\");\n/* harmony import */ var _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CVisitor.js */ \"./src/parser/CVisitor.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// Generated from C.g4 by ANTLR 4.12.0\n// jshint ignore: start\n\n\n\nvar serializedATN = [4, 1, 123, 1093, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2, 73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78, 7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7, 83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 2, 87, 7, 87, 1, 0, 1, 0, 1, 0, 4, 0, 180, 8, 0, 11, 0, 12, 0, 181, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 3, 0, 190, 8, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 3, 0, 210, 8, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 5, 2, 222, 8, 2, 10, 2, 12, 2, 225, 9, 2, 1, 3, 1, 3, 3, 3, 229, 8, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 3, 4, 236, 8, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 3, 4, 244, 8, 4, 1, 4, 1, 4, 3, 4, 248, 8, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 3, 4, 256, 8, 4, 1, 4, 1, 4, 1, 4, 1, 4, 5, 4, 262, 8, 4, 10, 4, 12, 4, 265, 9, 4, 1, 5, 1, 5, 1, 5, 5, 5, 270, 8, 5, 10, 5, 12, 5, 273, 9, 5, 1, 6, 5, 6, 276, 8, 6, 10, 6, 12, 6, 279, 9, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 3, 6, 292, 8, 6, 1, 7, 1, 7, 1, 8, 3, 8, 297, 8, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 3, 8, 306, 8, 8, 1, 9, 1, 9, 1, 9, 5, 9, 311, 8, 9, 10, 9, 12, 9, 314, 9, 9, 1, 10, 1, 10, 1, 10, 5, 10, 319, 8, 10, 10, 10, 12, 10, 322, 9, 10, 1, 11, 1, 11, 1, 11, 5, 11, 327, 8, 11, 10, 11, 12, 11, 330, 9, 11, 1, 12, 1, 12, 1, 12, 5, 12, 335, 8, 12, 10, 12, 12, 12, 338, 9, 12, 1, 13, 1, 13, 1, 13, 5, 13, 343, 8, 13, 10, 13, 12, 13, 346, 9, 13, 1, 14, 1, 14, 1, 14, 5, 14, 351, 8, 14, 10, 14, 12, 14, 354, 9, 14, 1, 15, 1, 15, 1, 15, 5, 15, 359, 8, 15, 10, 15, 12, 15, 362, 9, 15, 1, 16, 1, 16, 1, 16, 5, 16, 367, 8, 16, 10, 16, 12, 16, 370, 9, 16, 1, 17, 1, 17, 1, 17, 5, 17, 375, 8, 17, 10, 17, 12, 17, 378, 9, 17, 1, 18, 1, 18, 1, 18, 5, 18, 383, 8, 18, 10, 18, 12, 18, 386, 9, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 3, 19, 394, 8, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 3, 20, 402, 8, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 5, 22, 409, 8, 22, 10, 22, 12, 22, 412, 9, 22, 1, 23, 1, 23, 1, 24, 1, 24, 3, 24, 418, 8, 24, 1, 24, 1, 24, 1, 24, 3, 24, 423, 8, 24, 1, 25, 4, 25, 426, 8, 25, 11, 25, 12, 25, 427, 1, 26, 4, 26, 431, 8, 26, 11, 26, 12, 26, 432, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 3, 27, 440, 8, 27, 1, 28, 1, 28, 1, 28, 5, 28, 445, 8, 28, 10, 28, 12, 28, 448, 9, 28, 1, 29, 1, 29, 1, 29, 3, 29, 453, 8, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 3, 31, 471, 8, 31, 1, 32, 1, 32, 3, 32, 475, 8, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 3, 32, 484, 8, 32, 1, 33, 1, 33, 1, 34, 4, 34, 489, 8, 34, 11, 34, 12, 34, 490, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 3, 35, 501, 8, 35, 1, 36, 1, 36, 3, 36, 505, 8, 36, 1, 36, 3, 36, 508, 8, 36, 1, 37, 1, 37, 1, 37, 5, 37, 513, 8, 37, 10, 37, 12, 37, 516, 9, 37, 1, 38, 1, 38, 3, 38, 520, 8, 38, 1, 38, 1, 38, 3, 38, 524, 8, 38, 1, 39, 1, 39, 3, 39, 528, 8, 39, 1, 39, 1, 39, 1, 39, 3, 39, 533, 8, 39, 1, 39, 1, 39, 1, 39, 1, 39, 3, 39, 539, 8, 39, 1, 40, 1, 40, 1, 40, 5, 40, 544, 8, 40, 10, 40, 12, 40, 547, 9, 40, 1, 41, 1, 41, 1, 41, 3, 41, 552, 8, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 3, 45, 569, 8, 45, 1, 46, 1, 46, 1, 46, 1, 46, 3, 46, 575, 8, 46, 1, 46, 1, 46, 1, 47, 3, 47, 580, 8, 47, 1, 47, 1, 47, 5, 47, 584, 8, 47, 10, 47, 12, 47, 587, 9, 47, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 3, 48, 606, 8, 48, 1, 48, 1, 48, 1, 48, 3, 48, 611, 8, 48, 1, 48, 3, 48, 614, 8, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 3, 48, 621, 8, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 3, 48, 636, 8, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 3, 48, 648, 8, 48, 1, 48, 5, 48, 651, 8, 48, 10, 48, 12, 48, 654, 9, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 50, 4, 50, 661, 8, 50, 11, 50, 12, 50, 662, 1, 50, 1, 50, 3, 50, 667, 8, 50, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 52, 3, 52, 677, 8, 52, 1, 52, 1, 52, 3, 52, 681, 8, 52, 5, 52, 683, 8, 52, 10, 52, 12, 52, 686, 9, 52, 1, 53, 1, 53, 1, 53, 3, 53, 691, 8, 53, 1, 53, 3, 53, 694, 8, 53, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 5, 54, 701, 8, 54, 10, 54, 12, 54, 704, 9, 54, 1, 55, 1, 55, 3, 55, 708, 8, 55, 4, 55, 710, 8, 55, 11, 55, 12, 55, 711, 1, 56, 4, 56, 715, 8, 56, 11, 56, 12, 56, 716, 1, 57, 1, 57, 1, 57, 3, 57, 722, 8, 57, 1, 58, 1, 58, 1, 58, 5, 58, 727, 8, 58, 10, 58, 12, 58, 730, 9, 58, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 3, 59, 737, 8, 59, 3, 59, 739, 8, 59, 1, 60, 1, 60, 1, 60, 5, 60, 744, 8, 60, 10, 60, 12, 60, 747, 9, 60, 1, 61, 1, 61, 3, 61, 751, 8, 61, 1, 62, 1, 62, 3, 62, 755, 8, 62, 1, 62, 1, 62, 5, 62, 759, 8, 62, 10, 62, 12, 62, 762, 9, 62, 3, 62, 764, 8, 62, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 5, 63, 771, 8, 63, 10, 63, 12, 63, 774, 9, 63, 1, 63, 1, 63, 3, 63, 778, 8, 63, 1, 63, 3, 63, 781, 8, 63, 1, 63, 1, 63, 1, 63, 1, 63, 3, 63, 787, 8, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 3, 63, 803, 8, 63, 1, 63, 1, 63, 5, 63, 807, 8, 63, 10, 63, 12, 63, 810, 9, 63, 3, 63, 812, 8, 63, 1, 63, 1, 63, 1, 63, 3, 63, 817, 8, 63, 1, 63, 3, 63, 820, 8, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 3, 63, 827, 8, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 3, 63, 846, 8, 63, 1, 63, 1, 63, 5, 63, 850, 8, 63, 10, 63, 12, 63, 853, 9, 63, 5, 63, 855, 8, 63, 10, 63, 12, 63, 858, 9, 63, 1, 64, 1, 64, 1, 65, 1, 65, 1, 65, 1, 65, 3, 65, 866, 8, 65, 1, 65, 1, 65, 3, 65, 870, 8, 65, 1, 66, 3, 66, 873, 8, 66, 1, 66, 1, 66, 1, 66, 3, 66, 878, 8, 66, 1, 66, 5, 66, 881, 8, 66, 10, 66, 12, 66, 884, 9, 66, 1, 67, 1, 67, 1, 67, 1, 68, 4, 68, 890, 8, 68, 11, 68, 12, 68, 891, 1, 69, 1, 69, 1, 69, 1, 69, 1, 69, 1, 69, 3, 69, 900, 8, 69, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 4, 70, 907, 8, 70, 11, 70, 12, 70, 908, 1, 70, 1, 70, 1, 70, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 5, 71, 926, 8, 71, 10, 71, 12, 71, 929, 9, 71, 3, 71, 931, 8, 71, 1, 71, 1, 71, 1, 71, 1, 71, 5, 71, 937, 8, 71, 10, 71, 12, 71, 940, 9, 71, 3, 71, 942, 8, 71, 5, 71, 944, 8, 71, 10, 71, 12, 71, 947, 9, 71, 1, 71, 1, 71, 3, 71, 951, 8, 71, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 3, 72, 964, 8, 72, 1, 73, 1, 73, 3, 73, 968, 8, 73, 1, 73, 1, 73, 1, 74, 4, 74, 973, 8, 74, 11, 74, 12, 74, 974, 1, 75, 1, 75, 3, 75, 979, 8, 75, 1, 76, 3, 76, 982, 8, 76, 1, 76, 1, 76, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 3, 77, 993, 8, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 3, 77, 1001, 8, 77, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 3, 78, 1023, 8, 78, 1, 79, 1, 79, 3, 79, 1027, 8, 79, 3, 79, 1029, 8, 79, 1, 79, 1, 79, 3, 79, 1033, 8, 79, 1, 79, 1, 79, 3, 79, 1037, 8, 79, 1, 80, 1, 80, 3, 80, 1041, 8, 80, 1, 81, 1, 81, 1, 81, 5, 81, 1046, 8, 81, 10, 81, 12, 81, 1049, 9, 81, 1, 82, 1, 82, 1, 82, 1, 82, 1, 82, 3, 82, 1056, 8, 82, 1, 82, 1, 82, 3, 82, 1060, 8, 82, 1, 82, 1, 82, 1, 83, 3, 83, 1065, 8, 83, 1, 83, 1, 83, 1, 84, 4, 84, 1070, 8, 84, 11, 84, 12, 84, 1071, 1, 85, 1, 85, 1, 85, 3, 85, 1077, 8, 85, 1, 86, 3, 86, 1080, 8, 86, 1, 86, 1, 86, 3, 86, 1084, 8, 86, 1, 86, 1, 86, 1, 87, 4, 87, 1089, 8, 87, 11, 87, 12, 87, 1090, 1, 87, 0, 2, 96, 126, 88, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 0, 24, 1, 0, 107, 108, 2, 0, 77, 77, 79, 79, 3, 0, 44, 44, 77, 77, 79, 79, 2, 0, 44, 44, 55, 55, 5, 0, 76, 76, 78, 78, 80, 80, 83, 83, 88, 89, 1, 0, 80, 82, 2, 0, 76, 76, 78, 78, 1, 0, 74, 75, 1, 0, 70, 73, 1, 0, 105, 106, 1, 0, 94, 104, 6, 0, 20, 20, 31, 31, 39, 39, 45, 45, 48, 48, 63, 63, 8, 0, 4, 6, 23, 23, 28, 28, 32, 32, 37, 38, 42, 43, 50, 51, 57, 58, 1, 0, 4, 6, 2, 0, 46, 46, 49, 49, 4, 0, 24, 24, 40, 40, 52, 52, 56, 56, 3, 0, 8, 9, 36, 36, 61, 61, 2, 0, 9, 9, 11, 15, 2, 0, 64, 65, 93, 93, 1, 0, 64, 65, 2, 0, 80, 80, 87, 87, 2, 0, 16, 16, 18, 18, 2, 0, 19, 19, 52, 52, 2, 0, 21, 21, 25, 25, 1184, 0, 209, 1, 0, 0, 0, 2, 211, 1, 0, 0, 0, 4, 218, 1, 0, 0, 0, 6, 228, 1, 0, 0, 0, 8, 247, 1, 0, 0, 0, 10, 266, 1, 0, 0, 0, 12, 277, 1, 0, 0, 0, 14, 293, 1, 0, 0, 0, 16, 305, 1, 0, 0, 0, 18, 307, 1, 0, 0, 0, 20, 315, 1, 0, 0, 0, 22, 323, 1, 0, 0, 0, 24, 331, 1, 0, 0, 0, 26, 339, 1, 0, 0, 0, 28, 347, 1, 0, 0, 0, 30, 355, 1, 0, 0, 0, 32, 363, 1, 0, 0, 0, 34, 371, 1, 0, 0, 0, 36, 379, 1, 0, 0, 0, 38, 387, 1, 0, 0, 0, 40, 401, 1, 0, 0, 0, 42, 403, 1, 0, 0, 0, 44, 405, 1, 0, 0, 0, 46, 413, 1, 0, 0, 0, 48, 422, 1, 0, 0, 0, 50, 425, 1, 0, 0, 0, 52, 430, 1, 0, 0, 0, 54, 439, 1, 0, 0, 0, 56, 441, 1, 0, 0, 0, 58, 449, 1, 0, 0, 0, 60, 454, 1, 0, 0, 0, 62, 470, 1, 0, 0, 0, 64, 483, 1, 0, 0, 0, 66, 485, 1, 0, 0, 0, 68, 488, 1, 0, 0, 0, 70, 500, 1, 0, 0, 0, 72, 504, 1, 0, 0, 0, 74, 509, 1, 0, 0, 0, 76, 523, 1, 0, 0, 0, 78, 538, 1, 0, 0, 0, 80, 540, 1, 0, 0, 0, 82, 548, 1, 0, 0, 0, 84, 553, 1, 0, 0, 0, 86, 555, 1, 0, 0, 0, 88, 560, 1, 0, 0, 0, 90, 568, 1, 0, 0, 0, 92, 570, 1, 0, 0, 0, 94, 579, 1, 0, 0, 0, 96, 605, 1, 0, 0, 0, 98, 655, 1, 0, 0, 0, 100, 666, 1, 0, 0, 0, 102, 668, 1, 0, 0, 0, 104, 676, 1, 0, 0, 0, 106, 687, 1, 0, 0, 0, 108, 702, 1, 0, 0, 0, 110, 709, 1, 0, 0, 0, 112, 714, 1, 0, 0, 0, 114, 718, 1, 0, 0, 0, 116, 723, 1, 0, 0, 0, 118, 738, 1, 0, 0, 0, 120, 740, 1, 0, 0, 0, 122, 748, 1, 0, 0, 0, 124, 763, 1, 0, 0, 0, 126, 811, 1, 0, 0, 0, 128, 859, 1, 0, 0, 0, 130, 869, 1, 0, 0, 0, 132, 872, 1, 0, 0, 0, 134, 885, 1, 0, 0, 0, 136, 889, 1, 0, 0, 0, 138, 899, 1, 0, 0, 0, 140, 901, 1, 0, 0, 0, 142, 950, 1, 0, 0, 0, 144, 963, 1, 0, 0, 0, 146, 965, 1, 0, 0, 0, 148, 972, 1, 0, 0, 0, 150, 978, 1, 0, 0, 0, 152, 981, 1, 0, 0, 0, 154, 1000, 1, 0, 0, 0, 156, 1022, 1, 0, 0, 0, 158, 1028, 1, 0, 0, 0, 160, 1038, 1, 0, 0, 0, 162, 1042, 1, 0, 0, 0, 164, 1059, 1, 0, 0, 0, 166, 1064, 1, 0, 0, 0, 168, 1069, 1, 0, 0, 0, 170, 1076, 1, 0, 0, 0, 172, 1079, 1, 0, 0, 0, 174, 1088, 1, 0, 0, 0, 176, 210, 5, 110, 0, 0, 177, 210, 5, 111, 0, 0, 178, 180, 5, 113, 0, 0, 179, 178, 1, 0, 0, 0, 180, 181, 1, 0, 0, 0, 181, 179, 1, 0, 0, 0, 181, 182, 1, 0, 0, 0, 182, 210, 1, 0, 0, 0, 183, 184, 5, 64, 0, 0, 184, 185, 3, 44, 22, 0, 185, 186, 5, 65, 0, 0, 186, 210, 1, 0, 0, 0, 187, 210, 3, 2, 1, 0, 188, 190, 5, 1, 0, 0, 189, 188, 1, 0, 0, 0, 189, 190, 1, 0, 0, 0, 190, 191, 1, 0, 0, 0, 191, 192, 5, 64, 0, 0, 192, 193, 3, 146, 73, 0, 193, 194, 5, 65, 0, 0, 194, 210, 1, 0, 0, 0, 195, 196, 5, 2, 0, 0, 196, 197, 5, 64, 0, 0, 197, 198, 3, 12, 6, 0, 198, 199, 5, 93, 0, 0, 199, 200, 3, 122, 61, 0, 200, 201, 5, 65, 0, 0, 201, 210, 1, 0, 0, 0, 202, 203, 5, 3, 0, 0, 203, 204, 5, 64, 0, 0, 204, 205, 3, 122, 61, 0, 205, 206, 5, 93, 0, 0, 206, 207, 3, 12, 6, 0, 207, 208, 5, 65, 0, 0, 208, 210, 1, 0, 0, 0, 209, 176, 1, 0, 0, 0, 209, 177, 1, 0, 0, 0, 209, 179, 1, 0, 0, 0, 209, 183, 1, 0, 0, 0, 209, 187, 1, 0, 0, 0, 209, 189, 1, 0, 0, 0, 209, 195, 1, 0, 0, 0, 209, 202, 1, 0, 0, 0, 210, 1, 1, 0, 0, 0, 211, 212, 5, 59, 0, 0, 212, 213, 5, 64, 0, 0, 213, 214, 3, 40, 20, 0, 214, 215, 5, 93, 0, 0, 215, 216, 3, 4, 2, 0, 216, 217, 5, 65, 0, 0, 217, 3, 1, 0, 0, 0, 218, 223, 3, 6, 3, 0, 219, 220, 5, 93, 0, 0, 220, 222, 3, 6, 3, 0, 221, 219, 1, 0, 0, 0, 222, 225, 1, 0, 0, 0, 223, 221, 1, 0, 0, 0, 223, 224, 1, 0, 0, 0, 224, 5, 1, 0, 0, 0, 225, 223, 1, 0, 0, 0, 226, 229, 3, 122, 61, 0, 227, 229, 5, 26, 0, 0, 228, 226, 1, 0, 0, 0, 228, 227, 1, 0, 0, 0, 229, 230, 1, 0, 0, 0, 230, 231, 5, 91, 0, 0, 231, 232, 3, 40, 20, 0, 232, 7, 1, 0, 0, 0, 233, 248, 3, 0, 0, 0, 234, 236, 5, 1, 0, 0, 235, 234, 1, 0, 0, 0, 235, 236, 1, 0, 0, 0, 236, 237, 1, 0, 0, 0, 237, 238, 5, 64, 0, 0, 238, 239, 3, 122, 61, 0, 239, 240, 5, 65, 0, 0, 240, 241, 5, 68, 0, 0, 241, 243, 3, 132, 66, 0, 242, 244, 5, 93, 0, 0, 243, 242, 1, 0, 0, 0, 243, 244, 1, 0, 0, 0, 244, 245, 1, 0, 0, 0, 245, 246, 5, 69, 0, 0, 246, 248, 1, 0, 0, 0, 247, 233, 1, 0, 0, 0, 247, 235, 1, 0, 0, 0, 248, 263, 1, 0, 0, 0, 249, 250, 5, 66, 0, 0, 250, 251, 3, 44, 22, 0, 251, 252, 5, 67, 0, 0, 252, 262, 1, 0, 0, 0, 253, 255, 5, 64, 0, 0, 254, 256, 3, 10, 5, 0, 255, 254, 1, 0, 0, 0, 255, 256, 1, 0, 0, 0, 256, 257, 1, 0, 0, 0, 257, 262, 5, 65, 0, 0, 258, 259, 7, 0, 0, 0, 259, 262, 5, 110, 0, 0, 260, 262, 7, 1, 0, 0, 261, 249, 1, 0, 0, 0, 261, 253, 1, 0, 0, 0, 261, 258, 1, 0, 0, 0, 261, 260, 1, 0, 0, 0, 262, 265, 1, 0, 0, 0, 263, 261, 1, 0, 0, 0, 263, 264, 1, 0, 0, 0, 264, 9, 1, 0, 0, 0, 265, 263, 1, 0, 0, 0, 266, 271, 3, 40, 20, 0, 267, 268, 5, 93, 0, 0, 268, 270, 3, 40, 20, 0, 269, 267, 1, 0, 0, 0, 270, 273, 1, 0, 0, 0, 271, 269, 1, 0, 0, 0, 271, 272, 1, 0, 0, 0, 272, 11, 1, 0, 0, 0, 273, 271, 1, 0, 0, 0, 274, 276, 7, 2, 0, 0, 275, 274, 1, 0, 0, 0, 276, 279, 1, 0, 0, 0, 277, 275, 1, 0, 0, 0, 277, 278, 1, 0, 0, 0, 278, 291, 1, 0, 0, 0, 279, 277, 1, 0, 0, 0, 280, 292, 3, 8, 4, 0, 281, 282, 3, 14, 7, 0, 282, 283, 3, 16, 8, 0, 283, 292, 1, 0, 0, 0, 284, 285, 7, 3, 0, 0, 285, 286, 5, 64, 0, 0, 286, 287, 3, 122, 61, 0, 287, 288, 5, 65, 0, 0, 288, 292, 1, 0, 0, 0, 289, 290, 5, 85, 0, 0, 290, 292, 5, 110, 0, 0, 291, 280, 1, 0, 0, 0, 291, 281, 1, 0, 0, 0, 291, 284, 1, 0, 0, 0, 291, 289, 1, 0, 0, 0, 292, 13, 1, 0, 0, 0, 293, 294, 7, 4, 0, 0, 294, 15, 1, 0, 0, 0, 295, 297, 5, 1, 0, 0, 296, 295, 1, 0, 0, 0, 296, 297, 1, 0, 0, 0, 297, 298, 1, 0, 0, 0, 298, 299, 5, 64, 0, 0, 299, 300, 3, 122, 61, 0, 300, 301, 5, 65, 0, 0, 301, 302, 3, 16, 8, 0, 302, 306, 1, 0, 0, 0, 303, 306, 3, 12, 6, 0, 304, 306, 5, 112, 0, 0, 305, 296, 1, 0, 0, 0, 305, 303, 1, 0, 0, 0, 305, 304, 1, 0, 0, 0, 306, 17, 1, 0, 0, 0, 307, 312, 3, 16, 8, 0, 308, 309, 7, 5, 0, 0, 309, 311, 3, 16, 8, 0, 310, 308, 1, 0, 0, 0, 311, 314, 1, 0, 0, 0, 312, 310, 1, 0, 0, 0, 312, 313, 1, 0, 0, 0, 313, 19, 1, 0, 0, 0, 314, 312, 1, 0, 0, 0, 315, 320, 3, 18, 9, 0, 316, 317, 7, 6, 0, 0, 317, 319, 3, 18, 9, 0, 318, 316, 1, 0, 0, 0, 319, 322, 1, 0, 0, 0, 320, 318, 1, 0, 0, 0, 320, 321, 1, 0, 0, 0, 321, 21, 1, 0, 0, 0, 322, 320, 1, 0, 0, 0, 323, 328, 3, 20, 10, 0, 324, 325, 7, 7, 0, 0, 325, 327, 3, 20, 10, 0, 326, 324, 1, 0, 0, 0, 327, 330, 1, 0, 0, 0, 328, 326, 1, 0, 0, 0, 328, 329, 1, 0, 0, 0, 329, 23, 1, 0, 0, 0, 330, 328, 1, 0, 0, 0, 331, 336, 3, 22, 11, 0, 332, 333, 7, 8, 0, 0, 333, 335, 3, 22, 11, 0, 334, 332, 1, 0, 0, 0, 335, 338, 1, 0, 0, 0, 336, 334, 1, 0, 0, 0, 336, 337, 1, 0, 0, 0, 337, 25, 1, 0, 0, 0, 338, 336, 1, 0, 0, 0, 339, 344, 3, 24, 12, 0, 340, 341, 7, 9, 0, 0, 341, 343, 3, 24, 12, 0, 342, 340, 1, 0, 0, 0, 343, 346, 1, 0, 0, 0, 344, 342, 1, 0, 0, 0, 344, 345, 1, 0, 0, 0, 345, 27, 1, 0, 0, 0, 346, 344, 1, 0, 0, 0, 347, 352, 3, 26, 13, 0, 348, 349, 5, 83, 0, 0, 349, 351, 3, 26, 13, 0, 350, 348, 1, 0, 0, 0, 351, 354, 1, 0, 0, 0, 352, 350, 1, 0, 0, 0, 352, 353, 1, 0, 0, 0, 353, 29, 1, 0, 0, 0, 354, 352, 1, 0, 0, 0, 355, 360, 3, 28, 14, 0, 356, 357, 5, 87, 0, 0, 357, 359, 3, 28, 14, 0, 358, 356, 1, 0, 0, 0, 359, 362, 1, 0, 0, 0, 360, 358, 1, 0, 0, 0, 360, 361, 1, 0, 0, 0, 361, 31, 1, 0, 0, 0, 362, 360, 1, 0, 0, 0, 363, 368, 3, 30, 15, 0, 364, 365, 5, 84, 0, 0, 365, 367, 3, 30, 15, 0, 366, 364, 1, 0, 0, 0, 367, 370, 1, 0, 0, 0, 368, 366, 1, 0, 0, 0, 368, 369, 1, 0, 0, 0, 369, 33, 1, 0, 0, 0, 370, 368, 1, 0, 0, 0, 371, 376, 3, 32, 16, 0, 372, 373, 5, 85, 0, 0, 373, 375, 3, 32, 16, 0, 374, 372, 1, 0, 0, 0, 375, 378, 1, 0, 0, 0, 376, 374, 1, 0, 0, 0, 376, 377, 1, 0, 0, 0, 377, 35, 1, 0, 0, 0, 378, 376, 1, 0, 0, 0, 379, 384, 3, 34, 17, 0, 380, 381, 5, 86, 0, 0, 381, 383, 3, 34, 17, 0, 382, 380, 1, 0, 0, 0, 383, 386, 1, 0, 0, 0, 384, 382, 1, 0, 0, 0, 384, 385, 1, 0, 0, 0, 385, 37, 1, 0, 0, 0, 386, 384, 1, 0, 0, 0, 387, 393, 3, 36, 18, 0, 388, 389, 5, 90, 0, 0, 389, 390, 3, 44, 22, 0, 390, 391, 5, 91, 0, 0, 391, 392, 3, 38, 19, 0, 392, 394, 1, 0, 0, 0, 393, 388, 1, 0, 0, 0, 393, 394, 1, 0, 0, 0, 394, 39, 1, 0, 0, 0, 395, 402, 3, 38, 19, 0, 396, 397, 3, 12, 6, 0, 397, 398, 3, 42, 21, 0, 398, 399, 3, 40, 20, 0, 399, 402, 1, 0, 0, 0, 400, 402, 5, 112, 0, 0, 401, 395, 1, 0, 0, 0, 401, 396, 1, 0, 0, 0, 401, 400, 1, 0, 0, 0, 402, 41, 1, 0, 0, 0, 403, 404, 7, 10, 0, 0, 404, 43, 1, 0, 0, 0, 405, 410, 3, 40, 20, 0, 406, 407, 5, 93, 0, 0, 407, 409, 3, 40, 20, 0, 408, 406, 1, 0, 0, 0, 409, 412, 1, 0, 0, 0, 410, 408, 1, 0, 0, 0, 410, 411, 1, 0, 0, 0, 411, 45, 1, 0, 0, 0, 412, 410, 1, 0, 0, 0, 413, 414, 3, 38, 19, 0, 414, 47, 1, 0, 0, 0, 415, 417, 3, 50, 25, 0, 416, 418, 3, 56, 28, 0, 417, 416, 1, 0, 0, 0, 417, 418, 1, 0, 0, 0, 418, 419, 1, 0, 0, 0, 419, 420, 5, 92, 0, 0, 420, 423, 1, 0, 0, 0, 421, 423, 3, 140, 70, 0, 422, 415, 1, 0, 0, 0, 422, 421, 1, 0, 0, 0, 423, 49, 1, 0, 0, 0, 424, 426, 3, 54, 27, 0, 425, 424, 1, 0, 0, 0, 426, 427, 1, 0, 0, 0, 427, 425, 1, 0, 0, 0, 427, 428, 1, 0, 0, 0, 428, 51, 1, 0, 0, 0, 429, 431, 3, 54, 27, 0, 430, 429, 1, 0, 0, 0, 431, 432, 1, 0, 0, 0, 432, 430, 1, 0, 0, 0, 432, 433, 1, 0, 0, 0, 433, 53, 1, 0, 0, 0, 434, 440, 3, 60, 30, 0, 435, 440, 3, 62, 31, 0, 436, 440, 3, 88, 44, 0, 437, 440, 3, 90, 45, 0, 438, 440, 3, 92, 46, 0, 439, 434, 1, 0, 0, 0, 439, 435, 1, 0, 0, 0, 439, 436, 1, 0, 0, 0, 439, 437, 1, 0, 0, 0, 439, 438, 1, 0, 0, 0, 440, 55, 1, 0, 0, 0, 441, 446, 3, 58, 29, 0, 442, 443, 5, 93, 0, 0, 443, 445, 3, 58, 29, 0, 444, 442, 1, 0, 0, 0, 445, 448, 1, 0, 0, 0, 446, 444, 1, 0, 0, 0, 446, 447, 1, 0, 0, 0, 447, 57, 1, 0, 0, 0, 448, 446, 1, 0, 0, 0, 449, 452, 3, 94, 47, 0, 450, 451, 5, 94, 0, 0, 451, 453, 3, 130, 65, 0, 452, 450, 1, 0, 0, 0, 452, 453, 1, 0, 0, 0, 453, 59, 1, 0, 0, 0, 454, 455, 7, 11, 0, 0, 455, 61, 1, 0, 0, 0, 456, 471, 7, 12, 0, 0, 457, 458, 5, 1, 0, 0, 458, 459, 5, 64, 0, 0, 459, 460, 7, 13, 0, 0, 460, 471, 5, 65, 0, 0, 461, 471, 3, 86, 43, 0, 462, 471, 3, 64, 32, 0, 463, 471, 3, 78, 39, 0, 464, 471, 3, 128, 64, 0, 465, 466, 5, 7, 0, 0, 466, 467, 5, 64, 0, 0, 467, 468, 3, 46, 23, 0, 468, 469, 5, 65, 0, 0, 469, 471, 1, 0, 0, 0, 470, 456, 1, 0, 0, 0, 470, 457, 1, 0, 0, 0, 470, 461, 1, 0, 0, 0, 470, 462, 1, 0, 0, 0, 470, 463, 1, 0, 0, 0, 470, 464, 1, 0, 0, 0, 470, 465, 1, 0, 0, 0, 471, 63, 1, 0, 0, 0, 472, 474, 3, 66, 33, 0, 473, 475, 5, 110, 0, 0, 474, 473, 1, 0, 0, 0, 474, 475, 1, 0, 0, 0, 475, 476, 1, 0, 0, 0, 476, 477, 5, 68, 0, 0, 477, 478, 3, 68, 34, 0, 478, 479, 5, 69, 0, 0, 479, 484, 1, 0, 0, 0, 480, 481, 3, 66, 33, 0, 481, 482, 5, 110, 0, 0, 482, 484, 1, 0, 0, 0, 483, 472, 1, 0, 0, 0, 483, 480, 1, 0, 0, 0, 484, 65, 1, 0, 0, 0, 485, 486, 7, 14, 0, 0, 486, 67, 1, 0, 0, 0, 487, 489, 3, 70, 35, 0, 488, 487, 1, 0, 0, 0, 489, 490, 1, 0, 0, 0, 490, 488, 1, 0, 0, 0, 490, 491, 1, 0, 0, 0, 491, 69, 1, 0, 0, 0, 492, 493, 3, 72, 36, 0, 493, 494, 3, 74, 37, 0, 494, 495, 5, 92, 0, 0, 495, 501, 1, 0, 0, 0, 496, 497, 3, 72, 36, 0, 497, 498, 5, 92, 0, 0, 498, 501, 1, 0, 0, 0, 499, 501, 3, 140, 70, 0, 500, 492, 1, 0, 0, 0, 500, 496, 1, 0, 0, 0, 500, 499, 1, 0, 0, 0, 501, 71, 1, 0, 0, 0, 502, 505, 3, 62, 31, 0, 503, 505, 3, 88, 44, 0, 504, 502, 1, 0, 0, 0, 504, 503, 1, 0, 0, 0, 505, 507, 1, 0, 0, 0, 506, 508, 3, 72, 36, 0, 507, 506, 1, 0, 0, 0, 507, 508, 1, 0, 0, 0, 508, 73, 1, 0, 0, 0, 509, 514, 3, 76, 38, 0, 510, 511, 5, 93, 0, 0, 511, 513, 3, 76, 38, 0, 512, 510, 1, 0, 0, 0, 513, 516, 1, 0, 0, 0, 514, 512, 1, 0, 0, 0, 514, 515, 1, 0, 0, 0, 515, 75, 1, 0, 0, 0, 516, 514, 1, 0, 0, 0, 517, 524, 3, 94, 47, 0, 518, 520, 3, 94, 47, 0, 519, 518, 1, 0, 0, 0, 519, 520, 1, 0, 0, 0, 520, 521, 1, 0, 0, 0, 521, 522, 5, 91, 0, 0, 522, 524, 3, 46, 23, 0, 523, 517, 1, 0, 0, 0, 523, 519, 1, 0, 0, 0, 524, 77, 1, 0, 0, 0, 525, 527, 5, 30, 0, 0, 526, 528, 5, 110, 0, 0, 527, 526, 1, 0, 0, 0, 527, 528, 1, 0, 0, 0, 528, 529, 1, 0, 0, 0, 529, 530, 5, 68, 0, 0, 530, 532, 3, 80, 40, 0, 531, 533, 5, 93, 0, 0, 532, 531, 1, 0, 0, 0, 532, 533, 1, 0, 0, 0, 533, 534, 1, 0, 0, 0, 534, 535, 5, 69, 0, 0, 535, 539, 1, 0, 0, 0, 536, 537, 5, 30, 0, 0, 537, 539, 5, 110, 0, 0, 538, 525, 1, 0, 0, 0, 538, 536, 1, 0, 0, 0, 539, 79, 1, 0, 0, 0, 540, 545, 3, 82, 41, 0, 541, 542, 5, 93, 0, 0, 542, 544, 3, 82, 41, 0, 543, 541, 1, 0, 0, 0, 544, 547, 1, 0, 0, 0, 545, 543, 1, 0, 0, 0, 545, 546, 1, 0, 0, 0, 546, 81, 1, 0, 0, 0, 547, 545, 1, 0, 0, 0, 548, 551, 3, 84, 42, 0, 549, 550, 5, 94, 0, 0, 550, 552, 3, 46, 23, 0, 551, 549, 1, 0, 0, 0, 551, 552, 1, 0, 0, 0, 552, 83, 1, 0, 0, 0, 553, 554, 5, 110, 0, 0, 554, 85, 1, 0, 0, 0, 555, 556, 5, 56, 0, 0, 556, 557, 5, 64, 0, 0, 557, 558, 3, 122, 61, 0, 558, 559, 5, 65, 0, 0, 559, 87, 1, 0, 0, 0, 560, 561, 7, 15, 0, 0, 561, 89, 1, 0, 0, 0, 562, 569, 7, 16, 0, 0, 563, 569, 3, 102, 51, 0, 564, 565, 5, 10, 0, 0, 565, 566, 5, 64, 0, 0, 566, 567, 5, 110, 0, 0, 567, 569, 5, 65, 0, 0, 568, 562, 1, 0, 0, 0, 568, 563, 1, 0, 0, 0, 568, 564, 1, 0, 0, 0, 569, 91, 1, 0, 0, 0, 570, 571, 5, 54, 0, 0, 571, 574, 5, 64, 0, 0, 572, 575, 3, 122, 61, 0, 573, 575, 3, 46, 23, 0, 574, 572, 1, 0, 0, 0, 574, 573, 1, 0, 0, 0, 575, 576, 1, 0, 0, 0, 576, 577, 5, 65, 0, 0, 577, 93, 1, 0, 0, 0, 578, 580, 3, 110, 55, 0, 579, 578, 1, 0, 0, 0, 579, 580, 1, 0, 0, 0, 580, 581, 1, 0, 0, 0, 581, 585, 3, 96, 48, 0, 582, 584, 3, 100, 50, 0, 583, 582, 1, 0, 0, 0, 584, 587, 1, 0, 0, 0, 585, 583, 1, 0, 0, 0, 585, 586, 1, 0, 0, 0, 586, 95, 1, 0, 0, 0, 587, 585, 1, 0, 0, 0, 588, 589, 6, 48, -1, 0, 589, 606, 5, 110, 0, 0, 590, 591, 5, 64, 0, 0, 591, 592, 3, 94, 47, 0, 592, 593, 5, 65, 0, 0, 593, 606, 1, 0, 0, 0, 594, 595, 5, 110, 0, 0, 595, 596, 5, 91, 0, 0, 596, 606, 5, 112, 0, 0, 597, 598, 3, 98, 49, 0, 598, 599, 5, 110, 0, 0, 599, 606, 1, 0, 0, 0, 600, 601, 5, 64, 0, 0, 601, 602, 3, 98, 49, 0, 602, 603, 3, 94, 47, 0, 603, 604, 5, 65, 0, 0, 604, 606, 1, 0, 0, 0, 605, 588, 1, 0, 0, 0, 605, 590, 1, 0, 0, 0, 605, 594, 1, 0, 0, 0, 605, 597, 1, 0, 0, 0, 605, 600, 1, 0, 0, 0, 606, 652, 1, 0, 0, 0, 607, 608, 10, 9, 0, 0, 608, 610, 5, 66, 0, 0, 609, 611, 3, 112, 56, 0, 610, 609, 1, 0, 0, 0, 610, 611, 1, 0, 0, 0, 611, 613, 1, 0, 0, 0, 612, 614, 3, 40, 20, 0, 613, 612, 1, 0, 0, 0, 613, 614, 1, 0, 0, 0, 614, 615, 1, 0, 0, 0, 615, 651, 5, 67, 0, 0, 616, 617, 10, 8, 0, 0, 617, 618, 5, 66, 0, 0, 618, 620, 5, 45, 0, 0, 619, 621, 3, 112, 56, 0, 620, 619, 1, 0, 0, 0, 620, 621, 1, 0, 0, 0, 621, 622, 1, 0, 0, 0, 622, 623, 3, 40, 20, 0, 623, 624, 5, 67, 0, 0, 624, 651, 1, 0, 0, 0, 625, 626, 10, 7, 0, 0, 626, 627, 5, 66, 0, 0, 627, 628, 3, 112, 56, 0, 628, 629, 5, 45, 0, 0, 629, 630, 3, 40, 20, 0, 630, 631, 5, 67, 0, 0, 631, 651, 1, 0, 0, 0, 632, 633, 10, 6, 0, 0, 633, 635, 5, 66, 0, 0, 634, 636, 3, 112, 56, 0, 635, 634, 1, 0, 0, 0, 635, 636, 1, 0, 0, 0, 636, 637, 1, 0, 0, 0, 637, 638, 5, 80, 0, 0, 638, 651, 5, 67, 0, 0, 639, 640, 10, 5, 0, 0, 640, 641, 5, 64, 0, 0, 641, 642, 3, 114, 57, 0, 642, 643, 5, 65, 0, 0, 643, 651, 1, 0, 0, 0, 644, 645, 10, 4, 0, 0, 645, 647, 5, 64, 0, 0, 646, 648, 3, 120, 60, 0, 647, 646, 1, 0, 0, 0, 647, 648, 1, 0, 0, 0, 648, 649, 1, 0, 0, 0, 649, 651, 5, 65, 0, 0, 650, 607, 1, 0, 0, 0, 650, 616, 1, 0, 0, 0, 650, 625, 1, 0, 0, 0, 650, 632, 1, 0, 0, 0, 650, 639, 1, 0, 0, 0, 650, 644, 1, 0, 0, 0, 651, 654, 1, 0, 0, 0, 652, 650, 1, 0, 0, 0, 652, 653, 1, 0, 0, 0, 653, 97, 1, 0, 0, 0, 654, 652, 1, 0, 0, 0, 655, 656, 7, 17, 0, 0, 656, 99, 1, 0, 0, 0, 657, 658, 5, 16, 0, 0, 658, 660, 5, 64, 0, 0, 659, 661, 5, 113, 0, 0, 660, 659, 1, 0, 0, 0, 661, 662, 1, 0, 0, 0, 662, 660, 1, 0, 0, 0, 662, 663, 1, 0, 0, 0, 663, 664, 1, 0, 0, 0, 664, 667, 5, 65, 0, 0, 665, 667, 3, 102, 51, 0, 666, 657, 1, 0, 0, 0, 666, 665, 1, 0, 0, 0, 667, 101, 1, 0, 0, 0, 668, 669, 5, 17, 0, 0, 669, 670, 5, 64, 0, 0, 670, 671, 5, 64, 0, 0, 671, 672, 3, 104, 52, 0, 672, 673, 5, 65, 0, 0, 673, 674, 5, 65, 0, 0, 674, 103, 1, 0, 0, 0, 675, 677, 3, 106, 53, 0, 676, 675, 1, 0, 0, 0, 676, 677, 1, 0, 0, 0, 677, 684, 1, 0, 0, 0, 678, 680, 5, 93, 0, 0, 679, 681, 3, 106, 53, 0, 680, 679, 1, 0, 0, 0, 680, 681, 1, 0, 0, 0, 681, 683, 1, 0, 0, 0, 682, 678, 1, 0, 0, 0, 683, 686, 1, 0, 0, 0, 684, 682, 1, 0, 0, 0, 684, 685, 1, 0, 0, 0, 685, 105, 1, 0, 0, 0, 686, 684, 1, 0, 0, 0, 687, 693, 8, 18, 0, 0, 688, 690, 5, 64, 0, 0, 689, 691, 3, 10, 5, 0, 690, 689, 1, 0, 0, 0, 690, 691, 1, 0, 0, 0, 691, 692, 1, 0, 0, 0, 692, 694, 5, 65, 0, 0, 693, 688, 1, 0, 0, 0, 693, 694, 1, 0, 0, 0, 694, 107, 1, 0, 0, 0, 695, 701, 8, 19, 0, 0, 696, 697, 5, 64, 0, 0, 697, 698, 3, 108, 54, 0, 698, 699, 5, 65, 0, 0, 699, 701, 1, 0, 0, 0, 700, 695, 1, 0, 0, 0, 700, 696, 1, 0, 0, 0, 701, 704, 1, 0, 0, 0, 702, 700, 1, 0, 0, 0, 702, 703, 1, 0, 0, 0, 703, 109, 1, 0, 0, 0, 704, 702, 1, 0, 0, 0, 705, 707, 7, 20, 0, 0, 706, 708, 3, 112, 56, 0, 707, 706, 1, 0, 0, 0, 707, 708, 1, 0, 0, 0, 708, 710, 1, 0, 0, 0, 709, 705, 1, 0, 0, 0, 710, 711, 1, 0, 0, 0, 711, 709, 1, 0, 0, 0, 711, 712, 1, 0, 0, 0, 712, 111, 1, 0, 0, 0, 713, 715, 3, 88, 44, 0, 714, 713, 1, 0, 0, 0, 715, 716, 1, 0, 0, 0, 716, 714, 1, 0, 0, 0, 716, 717, 1, 0, 0, 0, 717, 113, 1, 0, 0, 0, 718, 721, 3, 116, 58, 0, 719, 720, 5, 93, 0, 0, 720, 722, 5, 109, 0, 0, 721, 719, 1, 0, 0, 0, 721, 722, 1, 0, 0, 0, 722, 115, 1, 0, 0, 0, 723, 728, 3, 118, 59, 0, 724, 725, 5, 93, 0, 0, 725, 727, 3, 118, 59, 0, 726, 724, 1, 0, 0, 0, 727, 730, 1, 0, 0, 0, 728, 726, 1, 0, 0, 0, 728, 729, 1, 0, 0, 0, 729, 117, 1, 0, 0, 0, 730, 728, 1, 0, 0, 0, 731, 732, 3, 50, 25, 0, 732, 733, 3, 94, 47, 0, 733, 739, 1, 0, 0, 0, 734, 736, 3, 52, 26, 0, 735, 737, 3, 124, 62, 0, 736, 735, 1, 0, 0, 0, 736, 737, 1, 0, 0, 0, 737, 739, 1, 0, 0, 0, 738, 731, 1, 0, 0, 0, 738, 734, 1, 0, 0, 0, 739, 119, 1, 0, 0, 0, 740, 745, 5, 110, 0, 0, 741, 742, 5, 93, 0, 0, 742, 744, 5, 110, 0, 0, 743, 741, 1, 0, 0, 0, 744, 747, 1, 0, 0, 0, 745, 743, 1, 0, 0, 0, 745, 746, 1, 0, 0, 0, 746, 121, 1, 0, 0, 0, 747, 745, 1, 0, 0, 0, 748, 750, 3, 72, 36, 0, 749, 751, 3, 124, 62, 0, 750, 749, 1, 0, 0, 0, 750, 751, 1, 0, 0, 0, 751, 123, 1, 0, 0, 0, 752, 764, 3, 110, 55, 0, 753, 755, 3, 110, 55, 0, 754, 753, 1, 0, 0, 0, 754, 755, 1, 0, 0, 0, 755, 756, 1, 0, 0, 0, 756, 760, 3, 126, 63, 0, 757, 759, 3, 100, 50, 0, 758, 757, 1, 0, 0, 0, 759, 762, 1, 0, 0, 0, 760, 758, 1, 0, 0, 0, 760, 761, 1, 0, 0, 0, 761, 764, 1, 0, 0, 0, 762, 760, 1, 0, 0, 0, 763, 752, 1, 0, 0, 0, 763, 754, 1, 0, 0, 0, 764, 125, 1, 0, 0, 0, 765, 766, 6, 63, -1, 0, 766, 767, 5, 64, 0, 0, 767, 768, 3, 124, 62, 0, 768, 772, 5, 65, 0, 0, 769, 771, 3, 100, 50, 0, 770, 769, 1, 0, 0, 0, 771, 774, 1, 0, 0, 0, 772, 770, 1, 0, 0, 0, 772, 773, 1, 0, 0, 0, 773, 812, 1, 0, 0, 0, 774, 772, 1, 0, 0, 0, 775, 777, 5, 66, 0, 0, 776, 778, 3, 112, 56, 0, 777, 776, 1, 0, 0, 0, 777, 778, 1, 0, 0, 0, 778, 780, 1, 0, 0, 0, 779, 781, 3, 40, 20, 0, 780, 779, 1, 0, 0, 0, 780, 781, 1, 0, 0, 0, 781, 782, 1, 0, 0, 0, 782, 812, 5, 67, 0, 0, 783, 784, 5, 66, 0, 0, 784, 786, 5, 45, 0, 0, 785, 787, 3, 112, 56, 0, 786, 785, 1, 0, 0, 0, 786, 787, 1, 0, 0, 0, 787, 788, 1, 0, 0, 0, 788, 789, 3, 40, 20, 0, 789, 790, 5, 67, 0, 0, 790, 812, 1, 0, 0, 0, 791, 792, 5, 66, 0, 0, 792, 793, 3, 112, 56, 0, 793, 794, 5, 45, 0, 0, 794, 795, 3, 40, 20, 0, 795, 796, 5, 67, 0, 0, 796, 812, 1, 0, 0, 0, 797, 798, 5, 66, 0, 0, 798, 799, 5, 80, 0, 0, 799, 812, 5, 67, 0, 0, 800, 802, 5, 64, 0, 0, 801, 803, 3, 114, 57, 0, 802, 801, 1, 0, 0, 0, 802, 803, 1, 0, 0, 0, 803, 804, 1, 0, 0, 0, 804, 808, 5, 65, 0, 0, 805, 807, 3, 100, 50, 0, 806, 805, 1, 0, 0, 0, 807, 810, 1, 0, 0, 0, 808, 806, 1, 0, 0, 0, 808, 809, 1, 0, 0, 0, 809, 812, 1, 0, 0, 0, 810, 808, 1, 0, 0, 0, 811, 765, 1, 0, 0, 0, 811, 775, 1, 0, 0, 0, 811, 783, 1, 0, 0, 0, 811, 791, 1, 0, 0, 0, 811, 797, 1, 0, 0, 0, 811, 800, 1, 0, 0, 0, 812, 856, 1, 0, 0, 0, 813, 814, 10, 5, 0, 0, 814, 816, 5, 66, 0, 0, 815, 817, 3, 112, 56, 0, 816, 815, 1, 0, 0, 0, 816, 817, 1, 0, 0, 0, 817, 819, 1, 0, 0, 0, 818, 820, 3, 40, 20, 0, 819, 818, 1, 0, 0, 0, 819, 820, 1, 0, 0, 0, 820, 821, 1, 0, 0, 0, 821, 855, 5, 67, 0, 0, 822, 823, 10, 4, 0, 0, 823, 824, 5, 66, 0, 0, 824, 826, 5, 45, 0, 0, 825, 827, 3, 112, 56, 0, 826, 825, 1, 0, 0, 0, 826, 827, 1, 0, 0, 0, 827, 828, 1, 0, 0, 0, 828, 829, 3, 40, 20, 0, 829, 830, 5, 67, 0, 0, 830, 855, 1, 0, 0, 0, 831, 832, 10, 3, 0, 0, 832, 833, 5, 66, 0, 0, 833, 834, 3, 112, 56, 0, 834, 835, 5, 45, 0, 0, 835, 836, 3, 40, 20, 0, 836, 837, 5, 67, 0, 0, 837, 855, 1, 0, 0, 0, 838, 839, 10, 2, 0, 0, 839, 840, 5, 66, 0, 0, 840, 841, 5, 80, 0, 0, 841, 855, 5, 67, 0, 0, 842, 843, 10, 1, 0, 0, 843, 845, 5, 64, 0, 0, 844, 846, 3, 114, 57, 0, 845, 844, 1, 0, 0, 0, 845, 846, 1, 0, 0, 0, 846, 847, 1, 0, 0, 0, 847, 851, 5, 65, 0, 0, 848, 850, 3, 100, 50, 0, 849, 848, 1, 0, 0, 0, 850, 853, 1, 0, 0, 0, 851, 849, 1, 0, 0, 0, 851, 852, 1, 0, 0, 0, 852, 855, 1, 0, 0, 0, 853, 851, 1, 0, 0, 0, 854, 813, 1, 0, 0, 0, 854, 822, 1, 0, 0, 0, 854, 831, 1, 0, 0, 0, 854, 838, 1, 0, 0, 0, 854, 842, 1, 0, 0, 0, 855, 858, 1, 0, 0, 0, 856, 854, 1, 0, 0, 0, 856, 857, 1, 0, 0, 0, 857, 127, 1, 0, 0, 0, 858, 856, 1, 0, 0, 0, 859, 860, 5, 110, 0, 0, 860, 129, 1, 0, 0, 0, 861, 870, 3, 40, 20, 0, 862, 863, 5, 68, 0, 0, 863, 865, 3, 132, 66, 0, 864, 866, 5, 93, 0, 0, 865, 864, 1, 0, 0, 0, 865, 866, 1, 0, 0, 0, 866, 867, 1, 0, 0, 0, 867, 868, 5, 69, 0, 0, 868, 870, 1, 0, 0, 0, 869, 861, 1, 0, 0, 0, 869, 862, 1, 0, 0, 0, 870, 131, 1, 0, 0, 0, 871, 873, 3, 134, 67, 0, 872, 871, 1, 0, 0, 0, 872, 873, 1, 0, 0, 0, 873, 874, 1, 0, 0, 0, 874, 882, 3, 130, 65, 0, 875, 877, 5, 93, 0, 0, 876, 878, 3, 134, 67, 0, 877, 876, 1, 0, 0, 0, 877, 878, 1, 0, 0, 0, 878, 879, 1, 0, 0, 0, 879, 881, 3, 130, 65, 0, 880, 875, 1, 0, 0, 0, 881, 884, 1, 0, 0, 0, 882, 880, 1, 0, 0, 0, 882, 883, 1, 0, 0, 0, 883, 133, 1, 0, 0, 0, 884, 882, 1, 0, 0, 0, 885, 886, 3, 136, 68, 0, 886, 887, 5, 94, 0, 0, 887, 135, 1, 0, 0, 0, 888, 890, 3, 138, 69, 0, 889, 888, 1, 0, 0, 0, 890, 891, 1, 0, 0, 0, 891, 889, 1, 0, 0, 0, 891, 892, 1, 0, 0, 0, 892, 137, 1, 0, 0, 0, 893, 894, 5, 66, 0, 0, 894, 895, 3, 46, 23, 0, 895, 896, 5, 67, 0, 0, 896, 900, 1, 0, 0, 0, 897, 898, 5, 108, 0, 0, 898, 900, 5, 110, 0, 0, 899, 893, 1, 0, 0, 0, 899, 897, 1, 0, 0, 0, 900, 139, 1, 0, 0, 0, 901, 902, 5, 62, 0, 0, 902, 903, 5, 64, 0, 0, 903, 904, 3, 46, 23, 0, 904, 906, 5, 93, 0, 0, 905, 907, 5, 113, 0, 0, 906, 905, 1, 0, 0, 0, 907, 908, 1, 0, 0, 0, 908, 906, 1, 0, 0, 0, 908, 909, 1, 0, 0, 0, 909, 910, 1, 0, 0, 0, 910, 911, 5, 65, 0, 0, 911, 912, 5, 92, 0, 0, 912, 141, 1, 0, 0, 0, 913, 951, 3, 144, 72, 0, 914, 951, 3, 146, 73, 0, 915, 951, 3, 152, 76, 0, 916, 951, 3, 154, 77, 0, 917, 951, 3, 156, 78, 0, 918, 951, 3, 164, 82, 0, 919, 920, 7, 21, 0, 0, 920, 921, 7, 22, 0, 0, 921, 930, 5, 64, 0, 0, 922, 927, 3, 36, 18, 0, 923, 924, 5, 93, 0, 0, 924, 926, 3, 36, 18, 0, 925, 923, 1, 0, 0, 0, 926, 929, 1, 0, 0, 0, 927, 925, 1, 0, 0, 0, 927, 928, 1, 0, 0, 0, 928, 931, 1, 0, 0, 0, 929, 927, 1, 0, 0, 0, 930, 922, 1, 0, 0, 0, 930, 931, 1, 0, 0, 0, 931, 945, 1, 0, 0, 0, 932, 941, 5, 91, 0, 0, 933, 938, 3, 36, 18, 0, 934, 935, 5, 93, 0, 0, 935, 937, 3, 36, 18, 0, 936, 934, 1, 0, 0, 0, 937, 940, 1, 0, 0, 0, 938, 936, 1, 0, 0, 0, 938, 939, 1, 0, 0, 0, 939, 942, 1, 0, 0, 0, 940, 938, 1, 0, 0, 0, 941, 933, 1, 0, 0, 0, 941, 942, 1, 0, 0, 0, 942, 944, 1, 0, 0, 0, 943, 932, 1, 0, 0, 0, 944, 947, 1, 0, 0, 0, 945, 943, 1, 0, 0, 0, 945, 946, 1, 0, 0, 0, 946, 948, 1, 0, 0, 0, 947, 945, 1, 0, 0, 0, 948, 949, 5, 65, 0, 0, 949, 951, 5, 92, 0, 0, 950, 913, 1, 0, 0, 0, 950, 914, 1, 0, 0, 0, 950, 915, 1, 0, 0, 0, 950, 916, 1, 0, 0, 0, 950, 917, 1, 0, 0, 0, 950, 918, 1, 0, 0, 0, 950, 919, 1, 0, 0, 0, 951, 143, 1, 0, 0, 0, 952, 953, 5, 110, 0, 0, 953, 954, 5, 91, 0, 0, 954, 964, 3, 142, 71, 0, 955, 956, 5, 22, 0, 0, 956, 957, 3, 46, 23, 0, 957, 958, 5, 91, 0, 0, 958, 959, 3, 142, 71, 0, 959, 964, 1, 0, 0, 0, 960, 961, 5, 26, 0, 0, 961, 962, 5, 91, 0, 0, 962, 964, 3, 142, 71, 0, 963, 952, 1, 0, 0, 0, 963, 955, 1, 0, 0, 0, 963, 960, 1, 0, 0, 0, 964, 145, 1, 0, 0, 0, 965, 967, 5, 68, 0, 0, 966, 968, 3, 148, 74, 0, 967, 966, 1, 0, 0, 0, 967, 968, 1, 0, 0, 0, 968, 969, 1, 0, 0, 0, 969, 970, 5, 69, 0, 0, 970, 147, 1, 0, 0, 0, 971, 973, 3, 150, 75, 0, 972, 971, 1, 0, 0, 0, 973, 974, 1, 0, 0, 0, 974, 972, 1, 0, 0, 0, 974, 975, 1, 0, 0, 0, 975, 149, 1, 0, 0, 0, 976, 979, 3, 142, 71, 0, 977, 979, 3, 48, 24, 0, 978, 976, 1, 0, 0, 0, 978, 977, 1, 0, 0, 0, 979, 151, 1, 0, 0, 0, 980, 982, 3, 44, 22, 0, 981, 980, 1, 0, 0, 0, 981, 982, 1, 0, 0, 0, 982, 983, 1, 0, 0, 0, 983, 984, 5, 92, 0, 0, 984, 153, 1, 0, 0, 0, 985, 986, 5, 35, 0, 0, 986, 987, 5, 64, 0, 0, 987, 988, 3, 44, 22, 0, 988, 989, 5, 65, 0, 0, 989, 992, 3, 142, 71, 0, 990, 991, 5, 29, 0, 0, 991, 993, 3, 142, 71, 0, 992, 990, 1, 0, 0, 0, 992, 993, 1, 0, 0, 0, 993, 1001, 1, 0, 0, 0, 994, 995, 5, 47, 0, 0, 995, 996, 5, 64, 0, 0, 996, 997, 3, 44, 22, 0, 997, 998, 5, 65, 0, 0, 998, 999, 3, 142, 71, 0, 999, 1001, 1, 0, 0, 0, 1000, 985, 1, 0, 0, 0, 1000, 994, 1, 0, 0, 0, 1001, 155, 1, 0, 0, 0, 1002, 1003, 5, 53, 0, 0, 1003, 1004, 5, 64, 0, 0, 1004, 1005, 3, 44, 22, 0, 1005, 1006, 5, 65, 0, 0, 1006, 1007, 3, 142, 71, 0, 1007, 1023, 1, 0, 0, 0, 1008, 1009, 5, 27, 0, 0, 1009, 1010, 3, 142, 71, 0, 1010, 1011, 5, 53, 0, 0, 1011, 1012, 5, 64, 0, 0, 1012, 1013, 3, 44, 22, 0, 1013, 1014, 5, 65, 0, 0, 1014, 1015, 5, 92, 0, 0, 1015, 1023, 1, 0, 0, 0, 1016, 1017, 5, 33, 0, 0, 1017, 1018, 5, 64, 0, 0, 1018, 1019, 3, 158, 79, 0, 1019, 1020, 5, 65, 0, 0, 1020, 1021, 3, 142, 71, 0, 1021, 1023, 1, 0, 0, 0, 1022, 1002, 1, 0, 0, 0, 1022, 1008, 1, 0, 0, 0, 1022, 1016, 1, 0, 0, 0, 1023, 157, 1, 0, 0, 0, 1024, 1029, 3, 160, 80, 0, 1025, 1027, 3, 44, 22, 0, 1026, 1025, 1, 0, 0, 0, 1026, 1027, 1, 0, 0, 0, 1027, 1029, 1, 0, 0, 0, 1028, 1024, 1, 0, 0, 0, 1028, 1026, 1, 0, 0, 0, 1029, 1030, 1, 0, 0, 0, 1030, 1032, 5, 92, 0, 0, 1031, 1033, 3, 162, 81, 0, 1032, 1031, 1, 0, 0, 0, 1032, 1033, 1, 0, 0, 0, 1033, 1034, 1, 0, 0, 0, 1034, 1036, 5, 92, 0, 0, 1035, 1037, 3, 162, 81, 0, 1036, 1035, 1, 0, 0, 0, 1036, 1037, 1, 0, 0, 0, 1037, 159, 1, 0, 0, 0, 1038, 1040, 3, 50, 25, 0, 1039, 1041, 3, 56, 28, 0, 1040, 1039, 1, 0, 0, 0, 1040, 1041, 1, 0, 0, 0, 1041, 161, 1, 0, 0, 0, 1042, 1047, 3, 40, 20, 0, 1043, 1044, 5, 93, 0, 0, 1044, 1046, 3, 40, 20, 0, 1045, 1043, 1, 0, 0, 0, 1046, 1049, 1, 0, 0, 0, 1047, 1045, 1, 0, 0, 0, 1047, 1048, 1, 0, 0, 0, 1048, 163, 1, 0, 0, 0, 1049, 1047, 1, 0, 0, 0, 1050, 1051, 5, 34, 0, 0, 1051, 1060, 5, 110, 0, 0, 1052, 1060, 7, 23, 0, 0, 1053, 1055, 5, 41, 0, 0, 1054, 1056, 3, 44, 22, 0, 1055, 1054, 1, 0, 0, 0, 1055, 1056, 1, 0, 0, 0, 1056, 1060, 1, 0, 0, 0, 1057, 1058, 5, 34, 0, 0, 1058, 1060, 3, 12, 6, 0, 1059, 1050, 1, 0, 0, 0, 1059, 1052, 1, 0, 0, 0, 1059, 1053, 1, 0, 0, 0, 1059, 1057, 1, 0, 0, 0, 1060, 1061, 1, 0, 0, 0, 1061, 1062, 5, 92, 0, 0, 1062, 165, 1, 0, 0, 0, 1063, 1065, 3, 168, 84, 0, 1064, 1063, 1, 0, 0, 0, 1064, 1065, 1, 0, 0, 0, 1065, 1066, 1, 0, 0, 0, 1066, 1067, 5, 0, 0, 1, 1067, 167, 1, 0, 0, 0, 1068, 1070, 3, 170, 85, 0, 1069, 1068, 1, 0, 0, 0, 1070, 1071, 1, 0, 0, 0, 1071, 1069, 1, 0, 0, 0, 1071, 1072, 1, 0, 0, 0, 1072, 169, 1, 0, 0, 0, 1073, 1077, 3, 172, 86, 0, 1074, 1077, 3, 48, 24, 0, 1075, 1077, 5, 92, 0, 0, 1076, 1073, 1, 0, 0, 0, 1076, 1074, 1, 0, 0, 0, 1076, 1075, 1, 0, 0, 0, 1077, 171, 1, 0, 0, 0, 1078, 1080, 3, 50, 25, 0, 1079, 1078, 1, 0, 0, 0, 1079, 1080, 1, 0, 0, 0, 1080, 1081, 1, 0, 0, 0, 1081, 1083, 3, 94, 47, 0, 1082, 1084, 3, 174, 87, 0, 1083, 1082, 1, 0, 0, 0, 1083, 1084, 1, 0, 0, 0, 1084, 1085, 1, 0, 0, 0, 1085, 1086, 3, 146, 73, 0, 1086, 173, 1, 0, 0, 0, 1087, 1089, 3, 48, 24, 0, 1088, 1087, 1, 0, 0, 0, 1089, 1090, 1, 0, 0, 0, 1090, 1088, 1, 0, 0, 0, 1090, 1091, 1, 0, 0, 0, 1091, 175, 1, 0, 0, 0, 134, 181, 189, 209, 223, 228, 235, 243, 247, 255, 261, 263, 271, 277, 291, 296, 305, 312, 320, 328, 336, 344, 352, 360, 368, 376, 384, 393, 401, 410, 417, 422, 427, 432, 439, 446, 452, 470, 474, 483, 490, 500, 504, 507, 514, 519, 523, 527, 532, 538, 545, 551, 568, 574, 579, 585, 605, 610, 613, 620, 635, 647, 650, 652, 662, 666, 676, 680, 684, 690, 693, 700, 702, 707, 711, 716, 721, 728, 736, 738, 745, 750, 754, 760, 763, 772, 777, 780, 786, 802, 808, 811, 816, 819, 826, 845, 851, 854, 856, 865, 869, 872, 877, 882, 891, 899, 908, 927, 930, 938, 941, 945, 950, 963, 967, 974, 978, 981, 992, 1000, 1022, 1026, 1028, 1032, 1036, 1040, 1047, 1055, 1059, 1064, 1071, 1076, 1079, 1083, 1090];\nvar atn = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATNDeserializer().deserialize(serializedATN);\nvar decisionsToDFA = atn.decisionToState.map(function (ds, index) {\n  return new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dfa.DFA(ds, index);\n});\nvar sharedContextCache = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.PredictionContextCache();\nvar CParser = /*#__PURE__*/function (_antlr4$Parser) {\n  function CParser(input) {\n    var _this;\n    _classCallCheck(this, CParser);\n    _this = _callSuper(this, CParser, [input]);\n    _this._interp = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ParserATNSimulator(_this, atn, decisionsToDFA, sharedContextCache);\n    _this.ruleNames = CParser.ruleNames;\n    _this.literalNames = CParser.literalNames;\n    _this.symbolicNames = CParser.symbolicNames;\n    return _this;\n  }\n  _inherits(CParser, _antlr4$Parser);\n  return _createClass(CParser, [{\n    key: \"sempred\",\n    value: function sempred(localctx, ruleIndex, predIndex) {\n      switch (ruleIndex) {\n        case 48:\n          return this.directDeclarator_sempred(localctx, predIndex);\n        case 63:\n          return this.directAbstractDeclarator_sempred(localctx, predIndex);\n        default:\n          throw \"No predicate with index:\" + ruleIndex;\n      }\n    }\n  }, {\n    key: \"directDeclarator_sempred\",\n    value: function directDeclarator_sempred(localctx, predIndex) {\n      switch (predIndex) {\n        case 0:\n          return this.precpred(this._ctx, 9);\n        case 1:\n          return this.precpred(this._ctx, 8);\n        case 2:\n          return this.precpred(this._ctx, 7);\n        case 3:\n          return this.precpred(this._ctx, 6);\n        case 4:\n          return this.precpred(this._ctx, 5);\n        case 5:\n          return this.precpred(this._ctx, 4);\n        default:\n          throw \"No predicate with index:\" + predIndex;\n      }\n    }\n  }, {\n    key: \"directAbstractDeclarator_sempred\",\n    value: function directAbstractDeclarator_sempred(localctx, predIndex) {\n      switch (predIndex) {\n        case 6:\n          return this.precpred(this._ctx, 5);\n        case 7:\n          return this.precpred(this._ctx, 4);\n        case 8:\n          return this.precpred(this._ctx, 3);\n        case 9:\n          return this.precpred(this._ctx, 2);\n        case 10:\n          return this.precpred(this._ctx, 1);\n        default:\n          throw \"No predicate with index:\" + predIndex;\n      }\n    }\n  }, {\n    key: \"primaryExpression\",\n    value: function primaryExpression() {\n      var localctx = new PrimaryExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 0, CParser.RULE_primaryExpression);\n      var _la = 0;\n      try {\n        this.state = 209;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 2, this._ctx);\n        switch (la_) {\n          case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 176;\n            this.match(CParser.Identifier);\n            break;\n          case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 177;\n            this.match(CParser.Constant);\n            break;\n          case 3:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 179;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            do {\n              this.state = 178;\n              this.match(CParser.StringLiteral);\n              this.state = 181;\n              this._errHandler.sync(this);\n              _la = this._input.LA(1);\n            } while (_la === 113);\n            break;\n          case 4:\n            this.enterOuterAlt(localctx, 4);\n            this.state = 183;\n            this.match(CParser.LeftParen);\n            this.state = 184;\n            this.expression();\n            this.state = 185;\n            this.match(CParser.RightParen);\n            break;\n          case 5:\n            this.enterOuterAlt(localctx, 5);\n            this.state = 187;\n            this.genericSelection();\n            break;\n          case 6:\n            this.enterOuterAlt(localctx, 6);\n            this.state = 189;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if (_la === 1) {\n              this.state = 188;\n              this.match(CParser.T__0);\n            }\n            this.state = 191;\n            this.match(CParser.LeftParen);\n            this.state = 192;\n            this.compoundStatement();\n            this.state = 193;\n            this.match(CParser.RightParen);\n            break;\n          case 7:\n            this.enterOuterAlt(localctx, 7);\n            this.state = 195;\n            this.match(CParser.T__1);\n            this.state = 196;\n            this.match(CParser.LeftParen);\n            this.state = 197;\n            this.unaryExpression();\n            this.state = 198;\n            this.match(CParser.Comma);\n            this.state = 199;\n            this.typeName();\n            this.state = 200;\n            this.match(CParser.RightParen);\n            break;\n          case 8:\n            this.enterOuterAlt(localctx, 8);\n            this.state = 202;\n            this.match(CParser.T__2);\n            this.state = 203;\n            this.match(CParser.LeftParen);\n            this.state = 204;\n            this.typeName();\n            this.state = 205;\n            this.match(CParser.Comma);\n            this.state = 206;\n            this.unaryExpression();\n            this.state = 207;\n            this.match(CParser.RightParen);\n            break;\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"genericSelection\",\n    value: function genericSelection() {\n      var localctx = new GenericSelectionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 2, CParser.RULE_genericSelection);\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 211;\n        this.match(CParser.Generic);\n        this.state = 212;\n        this.match(CParser.LeftParen);\n        this.state = 213;\n        this.assignmentExpression();\n        this.state = 214;\n        this.match(CParser.Comma);\n        this.state = 215;\n        this.genericAssocList();\n        this.state = 216;\n        this.match(CParser.RightParen);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"genericAssocList\",\n    value: function genericAssocList() {\n      var localctx = new GenericAssocListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 4, CParser.RULE_genericAssocList);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 218;\n        this.genericAssociation();\n        this.state = 223;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 93) {\n          this.state = 219;\n          this.match(CParser.Comma);\n          this.state = 220;\n          this.genericAssociation();\n          this.state = 225;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"genericAssociation\",\n    value: function genericAssociation() {\n      var localctx = new GenericAssociationContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 6, CParser.RULE_genericAssociation);\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 228;\n        this._errHandler.sync(this);\n        switch (this._input.LA(1)) {\n          case 1:\n          case 4:\n          case 5:\n          case 6:\n          case 7:\n          case 23:\n          case 24:\n          case 28:\n          case 30:\n          case 32:\n          case 37:\n          case 38:\n          case 40:\n          case 42:\n          case 43:\n          case 46:\n          case 49:\n          case 50:\n          case 51:\n          case 52:\n          case 56:\n          case 57:\n          case 58:\n          case 110:\n            this.state = 226;\n            this.typeName();\n            break;\n          case 26:\n            this.state = 227;\n            this.match(CParser.Default);\n            break;\n          default:\n            throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\n        }\n        this.state = 230;\n        this.match(CParser.Colon);\n        this.state = 231;\n        this.assignmentExpression();\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"postfixExpression\",\n    value: function postfixExpression() {\n      var localctx = new PostfixExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 8, CParser.RULE_postfixExpression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 247;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 7, this._ctx);\n        switch (la_) {\n          case 1:\n            this.state = 233;\n            this.primaryExpression();\n            break;\n          case 2:\n            this.state = 235;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if (_la === 1) {\n              this.state = 234;\n              this.match(CParser.T__0);\n            }\n            this.state = 237;\n            this.match(CParser.LeftParen);\n            this.state = 238;\n            this.typeName();\n            this.state = 239;\n            this.match(CParser.RightParen);\n            this.state = 240;\n            this.match(CParser.LeftBrace);\n            this.state = 241;\n            this.initializerList();\n            this.state = 243;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if (_la === 93) {\n              this.state = 242;\n              this.match(CParser.Comma);\n            }\n            this.state = 245;\n            this.match(CParser.RightBrace);\n            break;\n        }\n        this.state = 263;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while ((_la - 64 & ~0x1f) === 0 && (1 << _la - 64 & 40965) !== 0 || _la === 107 || _la === 108) {\n          this.state = 261;\n          this._errHandler.sync(this);\n          switch (this._input.LA(1)) {\n            case 66:\n              this.state = 249;\n              this.match(CParser.LeftBracket);\n              this.state = 250;\n              this.expression();\n              this.state = 251;\n              this.match(CParser.RightBracket);\n              break;\n            case 64:\n              this.state = 253;\n              this.match(CParser.LeftParen);\n              this.state = 255;\n              this._errHandler.sync(this);\n              _la = this._input.LA(1);\n              if ((_la & ~0x1f) === 0 && (1 << _la & 14) !== 0 || (_la - 44 & ~0x1f) === 0 && (1 << _la - 44 & 1083393) !== 0 || (_la - 76 & ~0x1f) === 0 && (1 << _la - 76 & 12959) !== 0 || (_la - 110 & ~0x1f) === 0 && (1 << _la - 110 & 15) !== 0) {\n                this.state = 254;\n                this.argumentExpressionList();\n              }\n              this.state = 257;\n              this.match(CParser.RightParen);\n              break;\n            case 107:\n            case 108:\n              this.state = 258;\n              _la = this._input.LA(1);\n              if (!(_la === 107 || _la === 108)) {\n                this._errHandler.recoverInline(this);\n              } else {\n                this._errHandler.reportMatch(this);\n                this.consume();\n              }\n              this.state = 259;\n              this.match(CParser.Identifier);\n              break;\n            case 77:\n            case 79:\n              this.state = 260;\n              _la = this._input.LA(1);\n              if (!(_la === 77 || _la === 79)) {\n                this._errHandler.recoverInline(this);\n              } else {\n                this._errHandler.reportMatch(this);\n                this.consume();\n              }\n              break;\n            default:\n              throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\n          }\n          this.state = 265;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"argumentExpressionList\",\n    value: function argumentExpressionList() {\n      var localctx = new ArgumentExpressionListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 10, CParser.RULE_argumentExpressionList);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 266;\n        this.assignmentExpression();\n        this.state = 271;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 93) {\n          this.state = 267;\n          this.match(CParser.Comma);\n          this.state = 268;\n          this.assignmentExpression();\n          this.state = 273;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"unaryExpression\",\n    value: function unaryExpression() {\n      var localctx = new UnaryExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 12, CParser.RULE_unaryExpression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 277;\n        this._errHandler.sync(this);\n        var _alt = this._interp.adaptivePredict(this._input, 12, this._ctx);\n        while (_alt != 2 && _alt != antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATN.INVALID_ALT_NUMBER) {\n          if (_alt === 1) {\n            this.state = 274;\n            _la = this._input.LA(1);\n            if (!(_la === 44 || _la === 77 || _la === 79)) {\n              this._errHandler.recoverInline(this);\n            } else {\n              this._errHandler.reportMatch(this);\n              this.consume();\n            }\n          }\n          this.state = 279;\n          this._errHandler.sync(this);\n          _alt = this._interp.adaptivePredict(this._input, 12, this._ctx);\n        }\n        this.state = 291;\n        this._errHandler.sync(this);\n        switch (this._input.LA(1)) {\n          case 1:\n          case 2:\n          case 3:\n          case 59:\n          case 64:\n          case 110:\n          case 111:\n          case 113:\n            this.state = 280;\n            this.postfixExpression();\n            break;\n          case 76:\n          case 78:\n          case 80:\n          case 83:\n          case 88:\n          case 89:\n            this.state = 281;\n            this.unaryOperator();\n            this.state = 282;\n            this.castExpression();\n            break;\n          case 44:\n          case 55:\n            this.state = 284;\n            _la = this._input.LA(1);\n            if (!(_la === 44 || _la === 55)) {\n              this._errHandler.recoverInline(this);\n            } else {\n              this._errHandler.reportMatch(this);\n              this.consume();\n            }\n            this.state = 285;\n            this.match(CParser.LeftParen);\n            this.state = 286;\n            this.typeName();\n            this.state = 287;\n            this.match(CParser.RightParen);\n            break;\n          case 85:\n            this.state = 289;\n            this.match(CParser.AndAnd);\n            this.state = 290;\n            this.match(CParser.Identifier);\n            break;\n          default:\n            throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"unaryOperator\",\n    value: function unaryOperator() {\n      var localctx = new UnaryOperatorContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 14, CParser.RULE_unaryOperator);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 293;\n        _la = this._input.LA(1);\n        if (!((_la - 76 & ~0x1f) === 0 && (1 << _la - 76 & 12437) !== 0)) {\n          this._errHandler.recoverInline(this);\n        } else {\n          this._errHandler.reportMatch(this);\n          this.consume();\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"castExpression\",\n    value: function castExpression() {\n      var localctx = new CastExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 16, CParser.RULE_castExpression);\n      var _la = 0;\n      try {\n        this.state = 305;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 15, this._ctx);\n        switch (la_) {\n          case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 296;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if (_la === 1) {\n              this.state = 295;\n              this.match(CParser.T__0);\n            }\n            this.state = 298;\n            this.match(CParser.LeftParen);\n            this.state = 299;\n            this.typeName();\n            this.state = 300;\n            this.match(CParser.RightParen);\n            this.state = 301;\n            this.castExpression();\n            break;\n          case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 303;\n            this.unaryExpression();\n            break;\n          case 3:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 304;\n            this.match(CParser.DigitSequence);\n            break;\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"multiplicativeExpression\",\n    value: function multiplicativeExpression() {\n      var localctx = new MultiplicativeExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 18, CParser.RULE_multiplicativeExpression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 307;\n        this.castExpression();\n        this.state = 312;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while ((_la - 80 & ~0x1f) === 0 && (1 << _la - 80 & 7) !== 0) {\n          this.state = 308;\n          _la = this._input.LA(1);\n          if (!((_la - 80 & ~0x1f) === 0 && (1 << _la - 80 & 7) !== 0)) {\n            this._errHandler.recoverInline(this);\n          } else {\n            this._errHandler.reportMatch(this);\n            this.consume();\n          }\n          this.state = 309;\n          this.castExpression();\n          this.state = 314;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"additiveExpression\",\n    value: function additiveExpression() {\n      var localctx = new AdditiveExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 20, CParser.RULE_additiveExpression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 315;\n        this.multiplicativeExpression();\n        this.state = 320;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 76 || _la === 78) {\n          this.state = 316;\n          _la = this._input.LA(1);\n          if (!(_la === 76 || _la === 78)) {\n            this._errHandler.recoverInline(this);\n          } else {\n            this._errHandler.reportMatch(this);\n            this.consume();\n          }\n          this.state = 317;\n          this.multiplicativeExpression();\n          this.state = 322;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"shiftExpression\",\n    value: function shiftExpression() {\n      var localctx = new ShiftExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 22, CParser.RULE_shiftExpression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 323;\n        this.additiveExpression();\n        this.state = 328;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 74 || _la === 75) {\n          this.state = 324;\n          _la = this._input.LA(1);\n          if (!(_la === 74 || _la === 75)) {\n            this._errHandler.recoverInline(this);\n          } else {\n            this._errHandler.reportMatch(this);\n            this.consume();\n          }\n          this.state = 325;\n          this.additiveExpression();\n          this.state = 330;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"relationalExpression\",\n    value: function relationalExpression() {\n      var localctx = new RelationalExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 24, CParser.RULE_relationalExpression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 331;\n        this.shiftExpression();\n        this.state = 336;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while ((_la - 70 & ~0x1f) === 0 && (1 << _la - 70 & 15) !== 0) {\n          this.state = 332;\n          _la = this._input.LA(1);\n          if (!((_la - 70 & ~0x1f) === 0 && (1 << _la - 70 & 15) !== 0)) {\n            this._errHandler.recoverInline(this);\n          } else {\n            this._errHandler.reportMatch(this);\n            this.consume();\n          }\n          this.state = 333;\n          this.shiftExpression();\n          this.state = 338;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"equalityExpression\",\n    value: function equalityExpression() {\n      var localctx = new EqualityExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 26, CParser.RULE_equalityExpression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 339;\n        this.relationalExpression();\n        this.state = 344;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 105 || _la === 106) {\n          this.state = 340;\n          _la = this._input.LA(1);\n          if (!(_la === 105 || _la === 106)) {\n            this._errHandler.recoverInline(this);\n          } else {\n            this._errHandler.reportMatch(this);\n            this.consume();\n          }\n          this.state = 341;\n          this.relationalExpression();\n          this.state = 346;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"andExpression\",\n    value: function andExpression() {\n      var localctx = new AndExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 28, CParser.RULE_andExpression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 347;\n        this.equalityExpression();\n        this.state = 352;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 83) {\n          this.state = 348;\n          this.match(CParser.And);\n          this.state = 349;\n          this.equalityExpression();\n          this.state = 354;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"exclusiveOrExpression\",\n    value: function exclusiveOrExpression() {\n      var localctx = new ExclusiveOrExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 30, CParser.RULE_exclusiveOrExpression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 355;\n        this.andExpression();\n        this.state = 360;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 87) {\n          this.state = 356;\n          this.match(CParser.Caret);\n          this.state = 357;\n          this.andExpression();\n          this.state = 362;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"inclusiveOrExpression\",\n    value: function inclusiveOrExpression() {\n      var localctx = new InclusiveOrExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 32, CParser.RULE_inclusiveOrExpression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 363;\n        this.exclusiveOrExpression();\n        this.state = 368;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 84) {\n          this.state = 364;\n          this.match(CParser.Or);\n          this.state = 365;\n          this.exclusiveOrExpression();\n          this.state = 370;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"logicalAndExpression\",\n    value: function logicalAndExpression() {\n      var localctx = new LogicalAndExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 34, CParser.RULE_logicalAndExpression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 371;\n        this.inclusiveOrExpression();\n        this.state = 376;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 85) {\n          this.state = 372;\n          this.match(CParser.AndAnd);\n          this.state = 373;\n          this.inclusiveOrExpression();\n          this.state = 378;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"logicalOrExpression\",\n    value: function logicalOrExpression() {\n      var localctx = new LogicalOrExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 36, CParser.RULE_logicalOrExpression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 379;\n        this.logicalAndExpression();\n        this.state = 384;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 86) {\n          this.state = 380;\n          this.match(CParser.OrOr);\n          this.state = 381;\n          this.logicalAndExpression();\n          this.state = 386;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"conditionalExpression\",\n    value: function conditionalExpression() {\n      var localctx = new ConditionalExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 38, CParser.RULE_conditionalExpression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 387;\n        this.logicalOrExpression();\n        this.state = 393;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if (_la === 90) {\n          this.state = 388;\n          this.match(CParser.Question);\n          this.state = 389;\n          this.expression();\n          this.state = 390;\n          this.match(CParser.Colon);\n          this.state = 391;\n          this.conditionalExpression();\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"assignmentExpression\",\n    value: function assignmentExpression() {\n      var localctx = new AssignmentExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 40, CParser.RULE_assignmentExpression);\n      try {\n        this.state = 401;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 27, this._ctx);\n        switch (la_) {\n          case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 395;\n            this.conditionalExpression();\n            break;\n          case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 396;\n            this.unaryExpression();\n            this.state = 397;\n            this.assignmentOperator();\n            this.state = 398;\n            this.assignmentExpression();\n            break;\n          case 3:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 400;\n            this.match(CParser.DigitSequence);\n            break;\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"assignmentOperator\",\n    value: function assignmentOperator() {\n      var localctx = new AssignmentOperatorContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 42, CParser.RULE_assignmentOperator);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 403;\n        _la = this._input.LA(1);\n        if (!((_la - 94 & ~0x1f) === 0 && (1 << _la - 94 & 2047) !== 0)) {\n          this._errHandler.recoverInline(this);\n        } else {\n          this._errHandler.reportMatch(this);\n          this.consume();\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"expression\",\n    value: function expression() {\n      var localctx = new ExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 44, CParser.RULE_expression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 405;\n        this.assignmentExpression();\n        this.state = 410;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 93) {\n          this.state = 406;\n          this.match(CParser.Comma);\n          this.state = 407;\n          this.assignmentExpression();\n          this.state = 412;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"constantExpression\",\n    value: function constantExpression() {\n      var localctx = new ConstantExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 46, CParser.RULE_constantExpression);\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 413;\n        this.conditionalExpression();\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"declaration\",\n    value: function declaration() {\n      var localctx = new DeclarationContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 48, CParser.RULE_declaration);\n      var _la = 0;\n      try {\n        this.state = 422;\n        this._errHandler.sync(this);\n        switch (this._input.LA(1)) {\n          case 1:\n          case 4:\n          case 5:\n          case 6:\n          case 7:\n          case 8:\n          case 9:\n          case 10:\n          case 17:\n          case 20:\n          case 23:\n          case 24:\n          case 28:\n          case 30:\n          case 31:\n          case 32:\n          case 36:\n          case 37:\n          case 38:\n          case 39:\n          case 40:\n          case 42:\n          case 43:\n          case 45:\n          case 46:\n          case 48:\n          case 49:\n          case 50:\n          case 51:\n          case 52:\n          case 54:\n          case 56:\n          case 57:\n          case 58:\n          case 61:\n          case 63:\n          case 110:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 415;\n            this.declarationSpecifiers();\n            this.state = 417;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if ((_la & ~0x1f) === 0 && (1 << _la & 64000) !== 0 || (_la - 64 & ~0x1f) === 0 && (1 << _la - 64 & 8454145) !== 0 || _la === 110) {\n              this.state = 416;\n              this.initDeclaratorList();\n            }\n            this.state = 419;\n            this.match(CParser.Semi);\n            break;\n          case 62:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 421;\n            this.staticAssertDeclaration();\n            break;\n          default:\n            throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"declarationSpecifiers\",\n    value: function declarationSpecifiers() {\n      var localctx = new DeclarationSpecifiersContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 50, CParser.RULE_declarationSpecifiers);\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 425;\n        this._errHandler.sync(this);\n        var _alt = 1;\n        do {\n          switch (_alt) {\n            case 1:\n              this.state = 424;\n              this.declarationSpecifier();\n              break;\n            default:\n              throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\n          }\n          this.state = 427;\n          this._errHandler.sync(this);\n          _alt = this._interp.adaptivePredict(this._input, 31, this._ctx);\n        } while (_alt != 2 && _alt != antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATN.INVALID_ALT_NUMBER);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"declarationSpecifiers2\",\n    value: function declarationSpecifiers2() {\n      var localctx = new DeclarationSpecifiers2Context(this, this._ctx, this.state);\n      this.enterRule(localctx, 52, CParser.RULE_declarationSpecifiers2);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 430;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        do {\n          this.state = 429;\n          this.declarationSpecifier();\n          this.state = 432;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        } while ((_la & ~0x1f) === 0 && (1 << _la & 3516008434) !== 0 || (_la - 32 & ~0x1f) === 0 && (1 << _la - 32 & 2808049137) !== 0 || _la === 110);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"declarationSpecifier\",\n    value: function declarationSpecifier() {\n      var localctx = new DeclarationSpecifierContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 54, CParser.RULE_declarationSpecifier);\n      try {\n        this.state = 439;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 33, this._ctx);\n        switch (la_) {\n          case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 434;\n            this.storageClassSpecifier();\n            break;\n          case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 435;\n            this.typeSpecifier();\n            break;\n          case 3:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 436;\n            this.typeQualifier();\n            break;\n          case 4:\n            this.enterOuterAlt(localctx, 4);\n            this.state = 437;\n            this.functionSpecifier();\n            break;\n          case 5:\n            this.enterOuterAlt(localctx, 5);\n            this.state = 438;\n            this.alignmentSpecifier();\n            break;\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"initDeclaratorList\",\n    value: function initDeclaratorList() {\n      var localctx = new InitDeclaratorListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 56, CParser.RULE_initDeclaratorList);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 441;\n        this.initDeclarator();\n        this.state = 446;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 93) {\n          this.state = 442;\n          this.match(CParser.Comma);\n          this.state = 443;\n          this.initDeclarator();\n          this.state = 448;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"initDeclarator\",\n    value: function initDeclarator() {\n      var localctx = new InitDeclaratorContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 58, CParser.RULE_initDeclarator);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 449;\n        this.declarator();\n        this.state = 452;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if (_la === 94) {\n          this.state = 450;\n          this.match(CParser.Assign);\n          this.state = 451;\n          this.initializer();\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"storageClassSpecifier\",\n    value: function storageClassSpecifier() {\n      var localctx = new StorageClassSpecifierContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 60, CParser.RULE_storageClassSpecifier);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 454;\n        _la = this._input.LA(1);\n        if (!(_la === 20 || _la === 31 || (_la - 39 & ~0x1f) === 0 && (1 << _la - 39 & 16777793) !== 0)) {\n          this._errHandler.recoverInline(this);\n        } else {\n          this._errHandler.reportMatch(this);\n          this.consume();\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"typeSpecifier\",\n    value: function typeSpecifier() {\n      var localctx = new TypeSpecifierContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 62, CParser.RULE_typeSpecifier);\n      var _la = 0;\n      try {\n        this.state = 470;\n        this._errHandler.sync(this);\n        switch (this._input.LA(1)) {\n          case 4:\n          case 5:\n          case 6:\n          case 23:\n          case 28:\n          case 32:\n          case 37:\n          case 38:\n          case 42:\n          case 43:\n          case 50:\n          case 51:\n          case 57:\n          case 58:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 456;\n            _la = this._input.LA(1);\n            if (!((_la & ~0x1f) === 0 && (1 << _la & 276824176) !== 0 || (_la - 32 & ~0x1f) === 0 && (1 << _la - 32 & 101452897) !== 0)) {\n              this._errHandler.recoverInline(this);\n            } else {\n              this._errHandler.reportMatch(this);\n              this.consume();\n            }\n            break;\n          case 1:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 457;\n            this.match(CParser.T__0);\n            this.state = 458;\n            this.match(CParser.LeftParen);\n            this.state = 459;\n            _la = this._input.LA(1);\n            if (!((_la & ~0x1f) === 0 && (1 << _la & 112) !== 0)) {\n              this._errHandler.recoverInline(this);\n            } else {\n              this._errHandler.reportMatch(this);\n              this.consume();\n            }\n            this.state = 460;\n            this.match(CParser.RightParen);\n            break;\n          case 56:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 461;\n            this.atomicTypeSpecifier();\n            break;\n          case 46:\n          case 49:\n            this.enterOuterAlt(localctx, 4);\n            this.state = 462;\n            this.structOrUnionSpecifier();\n            break;\n          case 30:\n            this.enterOuterAlt(localctx, 5);\n            this.state = 463;\n            this.enumSpecifier();\n            break;\n          case 110:\n            this.enterOuterAlt(localctx, 6);\n            this.state = 464;\n            this.typedefName();\n            break;\n          case 7:\n            this.enterOuterAlt(localctx, 7);\n            this.state = 465;\n            this.match(CParser.T__6);\n            this.state = 466;\n            this.match(CParser.LeftParen);\n            this.state = 467;\n            this.constantExpression();\n            this.state = 468;\n            this.match(CParser.RightParen);\n            break;\n          default:\n            throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"structOrUnionSpecifier\",\n    value: function structOrUnionSpecifier() {\n      var localctx = new StructOrUnionSpecifierContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 64, CParser.RULE_structOrUnionSpecifier);\n      var _la = 0;\n      try {\n        this.state = 483;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 38, this._ctx);\n        switch (la_) {\n          case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 472;\n            this.structOrUnion();\n            this.state = 474;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if (_la === 110) {\n              this.state = 473;\n              this.match(CParser.Identifier);\n            }\n            this.state = 476;\n            this.match(CParser.LeftBrace);\n            this.state = 477;\n            this.structDeclarationList();\n            this.state = 478;\n            this.match(CParser.RightBrace);\n            break;\n          case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 480;\n            this.structOrUnion();\n            this.state = 481;\n            this.match(CParser.Identifier);\n            break;\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"structOrUnion\",\n    value: function structOrUnion() {\n      var localctx = new StructOrUnionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 66, CParser.RULE_structOrUnion);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 485;\n        _la = this._input.LA(1);\n        if (!(_la === 46 || _la === 49)) {\n          this._errHandler.recoverInline(this);\n        } else {\n          this._errHandler.reportMatch(this);\n          this.consume();\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"structDeclarationList\",\n    value: function structDeclarationList() {\n      var localctx = new StructDeclarationListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 68, CParser.RULE_structDeclarationList);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 488;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        do {\n          this.state = 487;\n          this.structDeclaration();\n          this.state = 490;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        } while ((_la & ~0x1f) === 0 && (1 << _la & 1367343346) !== 0 || (_la - 32 & ~0x1f) === 0 && (1 << _la - 32 & 1193168225) !== 0 || _la === 110);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"structDeclaration\",\n    value: function structDeclaration() {\n      var localctx = new StructDeclarationContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 70, CParser.RULE_structDeclaration);\n      try {\n        this.state = 500;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 40, this._ctx);\n        switch (la_) {\n          case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 492;\n            this.specifierQualifierList();\n            this.state = 493;\n            this.structDeclaratorList();\n            this.state = 494;\n            this.match(CParser.Semi);\n            break;\n          case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 496;\n            this.specifierQualifierList();\n            this.state = 497;\n            this.match(CParser.Semi);\n            break;\n          case 3:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 499;\n            this.staticAssertDeclaration();\n            break;\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"specifierQualifierList\",\n    value: function specifierQualifierList() {\n      var localctx = new SpecifierQualifierListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 72, CParser.RULE_specifierQualifierList);\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 504;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 41, this._ctx);\n        switch (la_) {\n          case 1:\n            this.state = 502;\n            this.typeSpecifier();\n            break;\n          case 2:\n            this.state = 503;\n            this.typeQualifier();\n            break;\n        }\n        this.state = 507;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 42, this._ctx);\n        if (la_ === 1) {\n          this.state = 506;\n          this.specifierQualifierList();\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"structDeclaratorList\",\n    value: function structDeclaratorList() {\n      var localctx = new StructDeclaratorListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 74, CParser.RULE_structDeclaratorList);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 509;\n        this.structDeclarator();\n        this.state = 514;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 93) {\n          this.state = 510;\n          this.match(CParser.Comma);\n          this.state = 511;\n          this.structDeclarator();\n          this.state = 516;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"structDeclarator\",\n    value: function structDeclarator() {\n      var localctx = new StructDeclaratorContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 76, CParser.RULE_structDeclarator);\n      var _la = 0;\n      try {\n        this.state = 523;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 45, this._ctx);\n        switch (la_) {\n          case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 517;\n            this.declarator();\n            break;\n          case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 519;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if ((_la & ~0x1f) === 0 && (1 << _la & 64000) !== 0 || (_la - 64 & ~0x1f) === 0 && (1 << _la - 64 & 8454145) !== 0 || _la === 110) {\n              this.state = 518;\n              this.declarator();\n            }\n            this.state = 521;\n            this.match(CParser.Colon);\n            this.state = 522;\n            this.constantExpression();\n            break;\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"enumSpecifier\",\n    value: function enumSpecifier() {\n      var localctx = new EnumSpecifierContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 78, CParser.RULE_enumSpecifier);\n      var _la = 0;\n      try {\n        this.state = 538;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 48, this._ctx);\n        switch (la_) {\n          case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 525;\n            this.match(CParser.Enum);\n            this.state = 527;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if (_la === 110) {\n              this.state = 526;\n              this.match(CParser.Identifier);\n            }\n            this.state = 529;\n            this.match(CParser.LeftBrace);\n            this.state = 530;\n            this.enumeratorList();\n            this.state = 532;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if (_la === 93) {\n              this.state = 531;\n              this.match(CParser.Comma);\n            }\n            this.state = 534;\n            this.match(CParser.RightBrace);\n            break;\n          case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 536;\n            this.match(CParser.Enum);\n            this.state = 537;\n            this.match(CParser.Identifier);\n            break;\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"enumeratorList\",\n    value: function enumeratorList() {\n      var localctx = new EnumeratorListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 80, CParser.RULE_enumeratorList);\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 540;\n        this.enumerator();\n        this.state = 545;\n        this._errHandler.sync(this);\n        var _alt = this._interp.adaptivePredict(this._input, 49, this._ctx);\n        while (_alt != 2 && _alt != antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATN.INVALID_ALT_NUMBER) {\n          if (_alt === 1) {\n            this.state = 541;\n            this.match(CParser.Comma);\n            this.state = 542;\n            this.enumerator();\n          }\n          this.state = 547;\n          this._errHandler.sync(this);\n          _alt = this._interp.adaptivePredict(this._input, 49, this._ctx);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"enumerator\",\n    value: function enumerator() {\n      var localctx = new EnumeratorContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 82, CParser.RULE_enumerator);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 548;\n        this.enumerationConstant();\n        this.state = 551;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if (_la === 94) {\n          this.state = 549;\n          this.match(CParser.Assign);\n          this.state = 550;\n          this.constantExpression();\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"enumerationConstant\",\n    value: function enumerationConstant() {\n      var localctx = new EnumerationConstantContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 84, CParser.RULE_enumerationConstant);\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 553;\n        this.match(CParser.Identifier);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"atomicTypeSpecifier\",\n    value: function atomicTypeSpecifier() {\n      var localctx = new AtomicTypeSpecifierContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 86, CParser.RULE_atomicTypeSpecifier);\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 555;\n        this.match(CParser.Atomic);\n        this.state = 556;\n        this.match(CParser.LeftParen);\n        this.state = 557;\n        this.typeName();\n        this.state = 558;\n        this.match(CParser.RightParen);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"typeQualifier\",\n    value: function typeQualifier() {\n      var localctx = new TypeQualifierContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 88, CParser.RULE_typeQualifier);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 560;\n        _la = this._input.LA(1);\n        if (!(_la === 24 || (_la - 40 & ~0x1f) === 0 && (1 << _la - 40 & 69633) !== 0)) {\n          this._errHandler.recoverInline(this);\n        } else {\n          this._errHandler.reportMatch(this);\n          this.consume();\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"functionSpecifier\",\n    value: function functionSpecifier() {\n      var localctx = new FunctionSpecifierContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 90, CParser.RULE_functionSpecifier);\n      var _la = 0;\n      try {\n        this.state = 568;\n        this._errHandler.sync(this);\n        switch (this._input.LA(1)) {\n          case 8:\n          case 9:\n          case 36:\n          case 61:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 562;\n            _la = this._input.LA(1);\n            if (!(_la === 8 || _la === 9 || _la === 36 || _la === 61)) {\n              this._errHandler.recoverInline(this);\n            } else {\n              this._errHandler.reportMatch(this);\n              this.consume();\n            }\n            break;\n          case 17:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 563;\n            this.gccAttributeSpecifier();\n            break;\n          case 10:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 564;\n            this.match(CParser.T__9);\n            this.state = 565;\n            this.match(CParser.LeftParen);\n            this.state = 566;\n            this.match(CParser.Identifier);\n            this.state = 567;\n            this.match(CParser.RightParen);\n            break;\n          default:\n            throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"alignmentSpecifier\",\n    value: function alignmentSpecifier() {\n      var localctx = new AlignmentSpecifierContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 92, CParser.RULE_alignmentSpecifier);\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 570;\n        this.match(CParser.Alignas);\n        this.state = 571;\n        this.match(CParser.LeftParen);\n        this.state = 574;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 52, this._ctx);\n        switch (la_) {\n          case 1:\n            this.state = 572;\n            this.typeName();\n            break;\n          case 2:\n            this.state = 573;\n            this.constantExpression();\n            break;\n        }\n        this.state = 576;\n        this.match(CParser.RightParen);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"declarator\",\n    value: function declarator() {\n      var localctx = new DeclaratorContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 94, CParser.RULE_declarator);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 579;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if (_la === 80 || _la === 87) {\n          this.state = 578;\n          this.pointer();\n        }\n        this.state = 581;\n        this.directDeclarator(0);\n        this.state = 585;\n        this._errHandler.sync(this);\n        var _alt = this._interp.adaptivePredict(this._input, 54, this._ctx);\n        while (_alt != 2 && _alt != antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATN.INVALID_ALT_NUMBER) {\n          if (_alt === 1) {\n            this.state = 582;\n            this.gccDeclaratorExtension();\n          }\n          this.state = 587;\n          this._errHandler.sync(this);\n          _alt = this._interp.adaptivePredict(this._input, 54, this._ctx);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"directDeclarator\",\n    value: function directDeclarator(_p) {\n      if (_p === undefined) {\n        _p = 0;\n      }\n      var _parentctx = this._ctx;\n      var _parentState = this.state;\n      var localctx = new DirectDeclaratorContext(this, this._ctx, _parentState);\n      var _prevctx = localctx;\n      var _startState = 96;\n      this.enterRecursionRule(localctx, 96, CParser.RULE_directDeclarator, _p);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 605;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 55, this._ctx);\n        switch (la_) {\n          case 1:\n            this.state = 589;\n            this.match(CParser.Identifier);\n            break;\n          case 2:\n            this.state = 590;\n            this.match(CParser.LeftParen);\n            this.state = 591;\n            this.declarator();\n            this.state = 592;\n            this.match(CParser.RightParen);\n            break;\n          case 3:\n            this.state = 594;\n            this.match(CParser.Identifier);\n            this.state = 595;\n            this.match(CParser.Colon);\n            this.state = 596;\n            this.match(CParser.DigitSequence);\n            break;\n          case 4:\n            this.state = 597;\n            this.vcSpecificModifer();\n            this.state = 598;\n            this.match(CParser.Identifier);\n            break;\n          case 5:\n            this.state = 600;\n            this.match(CParser.LeftParen);\n            this.state = 601;\n            this.vcSpecificModifer();\n            this.state = 602;\n            this.declarator();\n            this.state = 603;\n            this.match(CParser.RightParen);\n            break;\n        }\n        this._ctx.stop = this._input.LT(-1);\n        this.state = 652;\n        this._errHandler.sync(this);\n        var _alt = this._interp.adaptivePredict(this._input, 62, this._ctx);\n        while (_alt != 2 && _alt != antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATN.INVALID_ALT_NUMBER) {\n          if (_alt === 1) {\n            if (this._parseListeners !== null) {\n              this.triggerExitRuleEvent();\n            }\n            _prevctx = localctx;\n            this.state = 650;\n            this._errHandler.sync(this);\n            var la_ = this._interp.adaptivePredict(this._input, 61, this._ctx);\n            switch (la_) {\n              case 1:\n                localctx = new DirectDeclaratorContext(this, _parentctx, _parentState);\n                this.pushNewRecursionContext(localctx, _startState, CParser.RULE_directDeclarator);\n                this.state = 607;\n                if (!this.precpred(this._ctx, 9)) {\n                  throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.FailedPredicateException(this, \"this.precpred(this._ctx, 9)\");\n                }\n                this.state = 608;\n                this.match(CParser.LeftBracket);\n                this.state = 610;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === 24 || (_la - 40 & ~0x1f) === 0 && (1 << _la - 40 & 69633) !== 0) {\n                  this.state = 609;\n                  this.typeQualifierList();\n                }\n                this.state = 613;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if ((_la & ~0x1f) === 0 && (1 << _la & 14) !== 0 || (_la - 44 & ~0x1f) === 0 && (1 << _la - 44 & 1083393) !== 0 || (_la - 76 & ~0x1f) === 0 && (1 << _la - 76 & 12959) !== 0 || (_la - 110 & ~0x1f) === 0 && (1 << _la - 110 & 15) !== 0) {\n                  this.state = 612;\n                  this.assignmentExpression();\n                }\n                this.state = 615;\n                this.match(CParser.RightBracket);\n                break;\n              case 2:\n                localctx = new DirectDeclaratorContext(this, _parentctx, _parentState);\n                this.pushNewRecursionContext(localctx, _startState, CParser.RULE_directDeclarator);\n                this.state = 616;\n                if (!this.precpred(this._ctx, 8)) {\n                  throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.FailedPredicateException(this, \"this.precpred(this._ctx, 8)\");\n                }\n                this.state = 617;\n                this.match(CParser.LeftBracket);\n                this.state = 618;\n                this.match(CParser.Static);\n                this.state = 620;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === 24 || (_la - 40 & ~0x1f) === 0 && (1 << _la - 40 & 69633) !== 0) {\n                  this.state = 619;\n                  this.typeQualifierList();\n                }\n                this.state = 622;\n                this.assignmentExpression();\n                this.state = 623;\n                this.match(CParser.RightBracket);\n                break;\n              case 3:\n                localctx = new DirectDeclaratorContext(this, _parentctx, _parentState);\n                this.pushNewRecursionContext(localctx, _startState, CParser.RULE_directDeclarator);\n                this.state = 625;\n                if (!this.precpred(this._ctx, 7)) {\n                  throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.FailedPredicateException(this, \"this.precpred(this._ctx, 7)\");\n                }\n                this.state = 626;\n                this.match(CParser.LeftBracket);\n                this.state = 627;\n                this.typeQualifierList();\n                this.state = 628;\n                this.match(CParser.Static);\n                this.state = 629;\n                this.assignmentExpression();\n                this.state = 630;\n                this.match(CParser.RightBracket);\n                break;\n              case 4:\n                localctx = new DirectDeclaratorContext(this, _parentctx, _parentState);\n                this.pushNewRecursionContext(localctx, _startState, CParser.RULE_directDeclarator);\n                this.state = 632;\n                if (!this.precpred(this._ctx, 6)) {\n                  throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.FailedPredicateException(this, \"this.precpred(this._ctx, 6)\");\n                }\n                this.state = 633;\n                this.match(CParser.LeftBracket);\n                this.state = 635;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === 24 || (_la - 40 & ~0x1f) === 0 && (1 << _la - 40 & 69633) !== 0) {\n                  this.state = 634;\n                  this.typeQualifierList();\n                }\n                this.state = 637;\n                this.match(CParser.Star);\n                this.state = 638;\n                this.match(CParser.RightBracket);\n                break;\n              case 5:\n                localctx = new DirectDeclaratorContext(this, _parentctx, _parentState);\n                this.pushNewRecursionContext(localctx, _startState, CParser.RULE_directDeclarator);\n                this.state = 639;\n                if (!this.precpred(this._ctx, 5)) {\n                  throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.FailedPredicateException(this, \"this.precpred(this._ctx, 5)\");\n                }\n                this.state = 640;\n                this.match(CParser.LeftParen);\n                this.state = 641;\n                this.parameterTypeList();\n                this.state = 642;\n                this.match(CParser.RightParen);\n                break;\n              case 6:\n                localctx = new DirectDeclaratorContext(this, _parentctx, _parentState);\n                this.pushNewRecursionContext(localctx, _startState, CParser.RULE_directDeclarator);\n                this.state = 644;\n                if (!this.precpred(this._ctx, 4)) {\n                  throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.FailedPredicateException(this, \"this.precpred(this._ctx, 4)\");\n                }\n                this.state = 645;\n                this.match(CParser.LeftParen);\n                this.state = 647;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === 110) {\n                  this.state = 646;\n                  this.identifierList();\n                }\n                this.state = 649;\n                this.match(CParser.RightParen);\n                break;\n            }\n          }\n          this.state = 654;\n          this._errHandler.sync(this);\n          _alt = this._interp.adaptivePredict(this._input, 62, this._ctx);\n        }\n      } catch (error) {\n        if (error instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = error;\n          this._errHandler.reportError(this, error);\n          this._errHandler.recover(this, error);\n        } else {\n          throw error;\n        }\n      } finally {\n        this.unrollRecursionContexts(_parentctx);\n      }\n      return localctx;\n    }\n  }, {\n    key: \"vcSpecificModifer\",\n    value: function vcSpecificModifer() {\n      var localctx = new VcSpecificModiferContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 98, CParser.RULE_vcSpecificModifer);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 655;\n        _la = this._input.LA(1);\n        if (!((_la & ~0x1f) === 0 && (1 << _la & 64000) !== 0)) {\n          this._errHandler.recoverInline(this);\n        } else {\n          this._errHandler.reportMatch(this);\n          this.consume();\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"gccDeclaratorExtension\",\n    value: function gccDeclaratorExtension() {\n      var localctx = new GccDeclaratorExtensionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 100, CParser.RULE_gccDeclaratorExtension);\n      var _la = 0;\n      try {\n        this.state = 666;\n        this._errHandler.sync(this);\n        switch (this._input.LA(1)) {\n          case 16:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 657;\n            this.match(CParser.T__15);\n            this.state = 658;\n            this.match(CParser.LeftParen);\n            this.state = 660;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            do {\n              this.state = 659;\n              this.match(CParser.StringLiteral);\n              this.state = 662;\n              this._errHandler.sync(this);\n              _la = this._input.LA(1);\n            } while (_la === 113);\n            this.state = 664;\n            this.match(CParser.RightParen);\n            break;\n          case 17:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 665;\n            this.gccAttributeSpecifier();\n            break;\n          default:\n            throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"gccAttributeSpecifier\",\n    value: function gccAttributeSpecifier() {\n      var localctx = new GccAttributeSpecifierContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 102, CParser.RULE_gccAttributeSpecifier);\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 668;\n        this.match(CParser.T__16);\n        this.state = 669;\n        this.match(CParser.LeftParen);\n        this.state = 670;\n        this.match(CParser.LeftParen);\n        this.state = 671;\n        this.gccAttributeList();\n        this.state = 672;\n        this.match(CParser.RightParen);\n        this.state = 673;\n        this.match(CParser.RightParen);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"gccAttributeList\",\n    value: function gccAttributeList() {\n      var localctx = new GccAttributeListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 104, CParser.RULE_gccAttributeList);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 676;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if ((_la & ~0x1f) === 0 && (1 << _la & 4294967294) !== 0 || (_la - 32 & ~0x1f) === 0 && (1 << _la - 32 & 4294967295) !== 0 || (_la - 66 & ~0x1f) === 0 && (1 << _la - 66 & 4160749567) !== 0 || (_la - 98 & ~0x1f) === 0 && (1 << _la - 98 & 67108863) !== 0) {\n          this.state = 675;\n          this.gccAttribute();\n        }\n        this.state = 684;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 93) {\n          this.state = 678;\n          this.match(CParser.Comma);\n          this.state = 680;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n          if ((_la & ~0x1f) === 0 && (1 << _la & 4294967294) !== 0 || (_la - 32 & ~0x1f) === 0 && (1 << _la - 32 & 4294967295) !== 0 || (_la - 66 & ~0x1f) === 0 && (1 << _la - 66 & 4160749567) !== 0 || (_la - 98 & ~0x1f) === 0 && (1 << _la - 98 & 67108863) !== 0) {\n            this.state = 679;\n            this.gccAttribute();\n          }\n          this.state = 686;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"gccAttribute\",\n    value: function gccAttribute() {\n      var localctx = new GccAttributeContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 106, CParser.RULE_gccAttribute);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 687;\n        _la = this._input.LA(1);\n        if (_la <= 0 || (_la - 64 & ~0x1f) === 0 && (1 << _la - 64 & 536870915) !== 0) {\n          this._errHandler.recoverInline(this);\n        } else {\n          this._errHandler.reportMatch(this);\n          this.consume();\n        }\n        this.state = 693;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if (_la === 64) {\n          this.state = 688;\n          this.match(CParser.LeftParen);\n          this.state = 690;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n          if ((_la & ~0x1f) === 0 && (1 << _la & 14) !== 0 || (_la - 44 & ~0x1f) === 0 && (1 << _la - 44 & 1083393) !== 0 || (_la - 76 & ~0x1f) === 0 && (1 << _la - 76 & 12959) !== 0 || (_la - 110 & ~0x1f) === 0 && (1 << _la - 110 & 15) !== 0) {\n            this.state = 689;\n            this.argumentExpressionList();\n          }\n          this.state = 692;\n          this.match(CParser.RightParen);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"nestedParenthesesBlock\",\n    value: function nestedParenthesesBlock() {\n      var localctx = new NestedParenthesesBlockContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 108, CParser.RULE_nestedParenthesesBlock);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 702;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while ((_la & ~0x1f) === 0 && (1 << _la & 4294967294) !== 0 || (_la - 32 & ~0x1f) === 0 && (1 << _la - 32 & 4294967295) !== 0 || (_la - 64 & ~0x1f) === 0 && (1 << _la - 64 & 4294967293) !== 0 || (_la - 96 & ~0x1f) === 0 && (1 << _la - 96 & 268435455) !== 0) {\n          this.state = 700;\n          this._errHandler.sync(this);\n          switch (this._input.LA(1)) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n            case 20:\n            case 21:\n            case 22:\n            case 23:\n            case 24:\n            case 25:\n            case 26:\n            case 27:\n            case 28:\n            case 29:\n            case 30:\n            case 31:\n            case 32:\n            case 33:\n            case 34:\n            case 35:\n            case 36:\n            case 37:\n            case 38:\n            case 39:\n            case 40:\n            case 41:\n            case 42:\n            case 43:\n            case 44:\n            case 45:\n            case 46:\n            case 47:\n            case 48:\n            case 49:\n            case 50:\n            case 51:\n            case 52:\n            case 53:\n            case 54:\n            case 55:\n            case 56:\n            case 57:\n            case 58:\n            case 59:\n            case 60:\n            case 61:\n            case 62:\n            case 63:\n            case 66:\n            case 67:\n            case 68:\n            case 69:\n            case 70:\n            case 71:\n            case 72:\n            case 73:\n            case 74:\n            case 75:\n            case 76:\n            case 77:\n            case 78:\n            case 79:\n            case 80:\n            case 81:\n            case 82:\n            case 83:\n            case 84:\n            case 85:\n            case 86:\n            case 87:\n            case 88:\n            case 89:\n            case 90:\n            case 91:\n            case 92:\n            case 93:\n            case 94:\n            case 95:\n            case 96:\n            case 97:\n            case 98:\n            case 99:\n            case 100:\n            case 101:\n            case 102:\n            case 103:\n            case 104:\n            case 105:\n            case 106:\n            case 107:\n            case 108:\n            case 109:\n            case 110:\n            case 111:\n            case 112:\n            case 113:\n            case 114:\n            case 115:\n            case 116:\n            case 117:\n            case 118:\n            case 119:\n            case 120:\n            case 121:\n            case 122:\n            case 123:\n              this.state = 695;\n              _la = this._input.LA(1);\n              if (_la <= 0 || _la === 64 || _la === 65) {\n                this._errHandler.recoverInline(this);\n              } else {\n                this._errHandler.reportMatch(this);\n                this.consume();\n              }\n              break;\n            case 64:\n              this.state = 696;\n              this.match(CParser.LeftParen);\n              this.state = 697;\n              this.nestedParenthesesBlock();\n              this.state = 698;\n              this.match(CParser.RightParen);\n              break;\n            default:\n              throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\n          }\n          this.state = 704;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"pointer\",\n    value: function pointer() {\n      var localctx = new PointerContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 110, CParser.RULE_pointer);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 709;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        do {\n          this.state = 705;\n          _la = this._input.LA(1);\n          if (!(_la === 80 || _la === 87)) {\n            this._errHandler.recoverInline(this);\n          } else {\n            this._errHandler.reportMatch(this);\n            this.consume();\n          }\n          this.state = 707;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n          if (_la === 24 || (_la - 40 & ~0x1f) === 0 && (1 << _la - 40 & 69633) !== 0) {\n            this.state = 706;\n            this.typeQualifierList();\n          }\n          this.state = 711;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        } while (_la === 80 || _la === 87);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"typeQualifierList\",\n    value: function typeQualifierList() {\n      var localctx = new TypeQualifierListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 112, CParser.RULE_typeQualifierList);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 714;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        do {\n          this.state = 713;\n          this.typeQualifier();\n          this.state = 716;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        } while (_la === 24 || (_la - 40 & ~0x1f) === 0 && (1 << _la - 40 & 69633) !== 0);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"parameterTypeList\",\n    value: function parameterTypeList() {\n      var localctx = new ParameterTypeListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 114, CParser.RULE_parameterTypeList);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 718;\n        this.parameterList();\n        this.state = 721;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if (_la === 93) {\n          this.state = 719;\n          this.match(CParser.Comma);\n          this.state = 720;\n          this.match(CParser.Ellipsis);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"parameterList\",\n    value: function parameterList() {\n      var localctx = new ParameterListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 116, CParser.RULE_parameterList);\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 723;\n        this.parameterDeclaration();\n        this.state = 728;\n        this._errHandler.sync(this);\n        var _alt = this._interp.adaptivePredict(this._input, 76, this._ctx);\n        while (_alt != 2 && _alt != antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATN.INVALID_ALT_NUMBER) {\n          if (_alt === 1) {\n            this.state = 724;\n            this.match(CParser.Comma);\n            this.state = 725;\n            this.parameterDeclaration();\n          }\n          this.state = 730;\n          this._errHandler.sync(this);\n          _alt = this._interp.adaptivePredict(this._input, 76, this._ctx);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"parameterDeclaration\",\n    value: function parameterDeclaration() {\n      var localctx = new ParameterDeclarationContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 118, CParser.RULE_parameterDeclaration);\n      var _la = 0;\n      try {\n        this.state = 738;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 78, this._ctx);\n        switch (la_) {\n          case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 731;\n            this.declarationSpecifiers();\n            this.state = 732;\n            this.declarator();\n            break;\n          case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 734;\n            this.declarationSpecifiers2();\n            this.state = 736;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if ((_la - 64 & ~0x1f) === 0 && (1 << _la - 64 & 8454149) !== 0) {\n              this.state = 735;\n              this.abstractDeclarator();\n            }\n            break;\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"identifierList\",\n    value: function identifierList() {\n      var localctx = new IdentifierListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 120, CParser.RULE_identifierList);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 740;\n        this.match(CParser.Identifier);\n        this.state = 745;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 93) {\n          this.state = 741;\n          this.match(CParser.Comma);\n          this.state = 742;\n          this.match(CParser.Identifier);\n          this.state = 747;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"typeName\",\n    value: function typeName() {\n      var localctx = new TypeNameContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 122, CParser.RULE_typeName);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 748;\n        this.specifierQualifierList();\n        this.state = 750;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if ((_la - 64 & ~0x1f) === 0 && (1 << _la - 64 & 8454149) !== 0) {\n          this.state = 749;\n          this.abstractDeclarator();\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"abstractDeclarator\",\n    value: function abstractDeclarator() {\n      var localctx = new AbstractDeclaratorContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 124, CParser.RULE_abstractDeclarator);\n      var _la = 0;\n      try {\n        this.state = 763;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 83, this._ctx);\n        switch (la_) {\n          case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 752;\n            this.pointer();\n            break;\n          case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 754;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if (_la === 80 || _la === 87) {\n              this.state = 753;\n              this.pointer();\n            }\n            this.state = 756;\n            this.directAbstractDeclarator(0);\n            this.state = 760;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            while (_la === 16 || _la === 17) {\n              this.state = 757;\n              this.gccDeclaratorExtension();\n              this.state = 762;\n              this._errHandler.sync(this);\n              _la = this._input.LA(1);\n            }\n            break;\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"directAbstractDeclarator\",\n    value: function directAbstractDeclarator(_p) {\n      if (_p === undefined) {\n        _p = 0;\n      }\n      var _parentctx = this._ctx;\n      var _parentState = this.state;\n      var localctx = new DirectAbstractDeclaratorContext(this, this._ctx, _parentState);\n      var _prevctx = localctx;\n      var _startState = 126;\n      this.enterRecursionRule(localctx, 126, CParser.RULE_directAbstractDeclarator, _p);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 811;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 90, this._ctx);\n        switch (la_) {\n          case 1:\n            this.state = 766;\n            this.match(CParser.LeftParen);\n            this.state = 767;\n            this.abstractDeclarator();\n            this.state = 768;\n            this.match(CParser.RightParen);\n            this.state = 772;\n            this._errHandler.sync(this);\n            var _alt = this._interp.adaptivePredict(this._input, 84, this._ctx);\n            while (_alt != 2 && _alt != antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATN.INVALID_ALT_NUMBER) {\n              if (_alt === 1) {\n                this.state = 769;\n                this.gccDeclaratorExtension();\n              }\n              this.state = 774;\n              this._errHandler.sync(this);\n              _alt = this._interp.adaptivePredict(this._input, 84, this._ctx);\n            }\n            break;\n          case 2:\n            this.state = 775;\n            this.match(CParser.LeftBracket);\n            this.state = 777;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if (_la === 24 || (_la - 40 & ~0x1f) === 0 && (1 << _la - 40 & 69633) !== 0) {\n              this.state = 776;\n              this.typeQualifierList();\n            }\n            this.state = 780;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if ((_la & ~0x1f) === 0 && (1 << _la & 14) !== 0 || (_la - 44 & ~0x1f) === 0 && (1 << _la - 44 & 1083393) !== 0 || (_la - 76 & ~0x1f) === 0 && (1 << _la - 76 & 12959) !== 0 || (_la - 110 & ~0x1f) === 0 && (1 << _la - 110 & 15) !== 0) {\n              this.state = 779;\n              this.assignmentExpression();\n            }\n            this.state = 782;\n            this.match(CParser.RightBracket);\n            break;\n          case 3:\n            this.state = 783;\n            this.match(CParser.LeftBracket);\n            this.state = 784;\n            this.match(CParser.Static);\n            this.state = 786;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if (_la === 24 || (_la - 40 & ~0x1f) === 0 && (1 << _la - 40 & 69633) !== 0) {\n              this.state = 785;\n              this.typeQualifierList();\n            }\n            this.state = 788;\n            this.assignmentExpression();\n            this.state = 789;\n            this.match(CParser.RightBracket);\n            break;\n          case 4:\n            this.state = 791;\n            this.match(CParser.LeftBracket);\n            this.state = 792;\n            this.typeQualifierList();\n            this.state = 793;\n            this.match(CParser.Static);\n            this.state = 794;\n            this.assignmentExpression();\n            this.state = 795;\n            this.match(CParser.RightBracket);\n            break;\n          case 5:\n            this.state = 797;\n            this.match(CParser.LeftBracket);\n            this.state = 798;\n            this.match(CParser.Star);\n            this.state = 799;\n            this.match(CParser.RightBracket);\n            break;\n          case 6:\n            this.state = 800;\n            this.match(CParser.LeftParen);\n            this.state = 802;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if ((_la & ~0x1f) === 0 && (1 << _la & 3516008434) !== 0 || (_la - 32 & ~0x1f) === 0 && (1 << _la - 32 & 2808049137) !== 0 || _la === 110) {\n              this.state = 801;\n              this.parameterTypeList();\n            }\n            this.state = 804;\n            this.match(CParser.RightParen);\n            this.state = 808;\n            this._errHandler.sync(this);\n            var _alt = this._interp.adaptivePredict(this._input, 89, this._ctx);\n            while (_alt != 2 && _alt != antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATN.INVALID_ALT_NUMBER) {\n              if (_alt === 1) {\n                this.state = 805;\n                this.gccDeclaratorExtension();\n              }\n              this.state = 810;\n              this._errHandler.sync(this);\n              _alt = this._interp.adaptivePredict(this._input, 89, this._ctx);\n            }\n            break;\n        }\n        this._ctx.stop = this._input.LT(-1);\n        this.state = 856;\n        this._errHandler.sync(this);\n        var _alt = this._interp.adaptivePredict(this._input, 97, this._ctx);\n        while (_alt != 2 && _alt != antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATN.INVALID_ALT_NUMBER) {\n          if (_alt === 1) {\n            if (this._parseListeners !== null) {\n              this.triggerExitRuleEvent();\n            }\n            _prevctx = localctx;\n            this.state = 854;\n            this._errHandler.sync(this);\n            var la_ = this._interp.adaptivePredict(this._input, 96, this._ctx);\n            switch (la_) {\n              case 1:\n                localctx = new DirectAbstractDeclaratorContext(this, _parentctx, _parentState);\n                this.pushNewRecursionContext(localctx, _startState, CParser.RULE_directAbstractDeclarator);\n                this.state = 813;\n                if (!this.precpred(this._ctx, 5)) {\n                  throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.FailedPredicateException(this, \"this.precpred(this._ctx, 5)\");\n                }\n                this.state = 814;\n                this.match(CParser.LeftBracket);\n                this.state = 816;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === 24 || (_la - 40 & ~0x1f) === 0 && (1 << _la - 40 & 69633) !== 0) {\n                  this.state = 815;\n                  this.typeQualifierList();\n                }\n                this.state = 819;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if ((_la & ~0x1f) === 0 && (1 << _la & 14) !== 0 || (_la - 44 & ~0x1f) === 0 && (1 << _la - 44 & 1083393) !== 0 || (_la - 76 & ~0x1f) === 0 && (1 << _la - 76 & 12959) !== 0 || (_la - 110 & ~0x1f) === 0 && (1 << _la - 110 & 15) !== 0) {\n                  this.state = 818;\n                  this.assignmentExpression();\n                }\n                this.state = 821;\n                this.match(CParser.RightBracket);\n                break;\n              case 2:\n                localctx = new DirectAbstractDeclaratorContext(this, _parentctx, _parentState);\n                this.pushNewRecursionContext(localctx, _startState, CParser.RULE_directAbstractDeclarator);\n                this.state = 822;\n                if (!this.precpred(this._ctx, 4)) {\n                  throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.FailedPredicateException(this, \"this.precpred(this._ctx, 4)\");\n                }\n                this.state = 823;\n                this.match(CParser.LeftBracket);\n                this.state = 824;\n                this.match(CParser.Static);\n                this.state = 826;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === 24 || (_la - 40 & ~0x1f) === 0 && (1 << _la - 40 & 69633) !== 0) {\n                  this.state = 825;\n                  this.typeQualifierList();\n                }\n                this.state = 828;\n                this.assignmentExpression();\n                this.state = 829;\n                this.match(CParser.RightBracket);\n                break;\n              case 3:\n                localctx = new DirectAbstractDeclaratorContext(this, _parentctx, _parentState);\n                this.pushNewRecursionContext(localctx, _startState, CParser.RULE_directAbstractDeclarator);\n                this.state = 831;\n                if (!this.precpred(this._ctx, 3)) {\n                  throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.FailedPredicateException(this, \"this.precpred(this._ctx, 3)\");\n                }\n                this.state = 832;\n                this.match(CParser.LeftBracket);\n                this.state = 833;\n                this.typeQualifierList();\n                this.state = 834;\n                this.match(CParser.Static);\n                this.state = 835;\n                this.assignmentExpression();\n                this.state = 836;\n                this.match(CParser.RightBracket);\n                break;\n              case 4:\n                localctx = new DirectAbstractDeclaratorContext(this, _parentctx, _parentState);\n                this.pushNewRecursionContext(localctx, _startState, CParser.RULE_directAbstractDeclarator);\n                this.state = 838;\n                if (!this.precpred(this._ctx, 2)) {\n                  throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.FailedPredicateException(this, \"this.precpred(this._ctx, 2)\");\n                }\n                this.state = 839;\n                this.match(CParser.LeftBracket);\n                this.state = 840;\n                this.match(CParser.Star);\n                this.state = 841;\n                this.match(CParser.RightBracket);\n                break;\n              case 5:\n                localctx = new DirectAbstractDeclaratorContext(this, _parentctx, _parentState);\n                this.pushNewRecursionContext(localctx, _startState, CParser.RULE_directAbstractDeclarator);\n                this.state = 842;\n                if (!this.precpred(this._ctx, 1)) {\n                  throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.FailedPredicateException(this, \"this.precpred(this._ctx, 1)\");\n                }\n                this.state = 843;\n                this.match(CParser.LeftParen);\n                this.state = 845;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if ((_la & ~0x1f) === 0 && (1 << _la & 3516008434) !== 0 || (_la - 32 & ~0x1f) === 0 && (1 << _la - 32 & 2808049137) !== 0 || _la === 110) {\n                  this.state = 844;\n                  this.parameterTypeList();\n                }\n                this.state = 847;\n                this.match(CParser.RightParen);\n                this.state = 851;\n                this._errHandler.sync(this);\n                var _alt = this._interp.adaptivePredict(this._input, 95, this._ctx);\n                while (_alt != 2 && _alt != antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATN.INVALID_ALT_NUMBER) {\n                  if (_alt === 1) {\n                    this.state = 848;\n                    this.gccDeclaratorExtension();\n                  }\n                  this.state = 853;\n                  this._errHandler.sync(this);\n                  _alt = this._interp.adaptivePredict(this._input, 95, this._ctx);\n                }\n                break;\n            }\n          }\n          this.state = 858;\n          this._errHandler.sync(this);\n          _alt = this._interp.adaptivePredict(this._input, 97, this._ctx);\n        }\n      } catch (error) {\n        if (error instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = error;\n          this._errHandler.reportError(this, error);\n          this._errHandler.recover(this, error);\n        } else {\n          throw error;\n        }\n      } finally {\n        this.unrollRecursionContexts(_parentctx);\n      }\n      return localctx;\n    }\n  }, {\n    key: \"typedefName\",\n    value: function typedefName() {\n      var localctx = new TypedefNameContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 128, CParser.RULE_typedefName);\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 859;\n        this.match(CParser.Identifier);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"initializer\",\n    value: function initializer() {\n      var localctx = new InitializerContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 130, CParser.RULE_initializer);\n      var _la = 0;\n      try {\n        this.state = 869;\n        this._errHandler.sync(this);\n        switch (this._input.LA(1)) {\n          case 1:\n          case 2:\n          case 3:\n          case 44:\n          case 55:\n          case 59:\n          case 64:\n          case 76:\n          case 77:\n          case 78:\n          case 79:\n          case 80:\n          case 83:\n          case 85:\n          case 88:\n          case 89:\n          case 110:\n          case 111:\n          case 112:\n          case 113:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 861;\n            this.assignmentExpression();\n            break;\n          case 68:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 862;\n            this.match(CParser.LeftBrace);\n            this.state = 863;\n            this.initializerList();\n            this.state = 865;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if (_la === 93) {\n              this.state = 864;\n              this.match(CParser.Comma);\n            }\n            this.state = 867;\n            this.match(CParser.RightBrace);\n            break;\n          default:\n            throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"initializerList\",\n    value: function initializerList() {\n      var localctx = new InitializerListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 132, CParser.RULE_initializerList);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 872;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if (_la === 66 || _la === 108) {\n          this.state = 871;\n          this.designation();\n        }\n        this.state = 874;\n        this.initializer();\n        this.state = 882;\n        this._errHandler.sync(this);\n        var _alt = this._interp.adaptivePredict(this._input, 102, this._ctx);\n        while (_alt != 2 && _alt != antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATN.INVALID_ALT_NUMBER) {\n          if (_alt === 1) {\n            this.state = 875;\n            this.match(CParser.Comma);\n            this.state = 877;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if (_la === 66 || _la === 108) {\n              this.state = 876;\n              this.designation();\n            }\n            this.state = 879;\n            this.initializer();\n          }\n          this.state = 884;\n          this._errHandler.sync(this);\n          _alt = this._interp.adaptivePredict(this._input, 102, this._ctx);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"designation\",\n    value: function designation() {\n      var localctx = new DesignationContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 134, CParser.RULE_designation);\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 885;\n        this.designatorList();\n        this.state = 886;\n        this.match(CParser.Assign);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"designatorList\",\n    value: function designatorList() {\n      var localctx = new DesignatorListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 136, CParser.RULE_designatorList);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 889;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        do {\n          this.state = 888;\n          this.designator();\n          this.state = 891;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        } while (_la === 66 || _la === 108);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"designator\",\n    value: function designator() {\n      var localctx = new DesignatorContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 138, CParser.RULE_designator);\n      try {\n        this.state = 899;\n        this._errHandler.sync(this);\n        switch (this._input.LA(1)) {\n          case 66:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 893;\n            this.match(CParser.LeftBracket);\n            this.state = 894;\n            this.constantExpression();\n            this.state = 895;\n            this.match(CParser.RightBracket);\n            break;\n          case 108:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 897;\n            this.match(CParser.Dot);\n            this.state = 898;\n            this.match(CParser.Identifier);\n            break;\n          default:\n            throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"staticAssertDeclaration\",\n    value: function staticAssertDeclaration() {\n      var localctx = new StaticAssertDeclarationContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 140, CParser.RULE_staticAssertDeclaration);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 901;\n        this.match(CParser.StaticAssert);\n        this.state = 902;\n        this.match(CParser.LeftParen);\n        this.state = 903;\n        this.constantExpression();\n        this.state = 904;\n        this.match(CParser.Comma);\n        this.state = 906;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        do {\n          this.state = 905;\n          this.match(CParser.StringLiteral);\n          this.state = 908;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        } while (_la === 113);\n        this.state = 910;\n        this.match(CParser.RightParen);\n        this.state = 911;\n        this.match(CParser.Semi);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"statement\",\n    value: function statement() {\n      var localctx = new StatementContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 142, CParser.RULE_statement);\n      var _la = 0;\n      try {\n        this.state = 950;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 111, this._ctx);\n        switch (la_) {\n          case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 913;\n            this.labeledStatement();\n            break;\n          case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 914;\n            this.compoundStatement();\n            break;\n          case 3:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 915;\n            this.expressionStatement();\n            break;\n          case 4:\n            this.enterOuterAlt(localctx, 4);\n            this.state = 916;\n            this.selectionStatement();\n            break;\n          case 5:\n            this.enterOuterAlt(localctx, 5);\n            this.state = 917;\n            this.iterationStatement();\n            break;\n          case 6:\n            this.enterOuterAlt(localctx, 6);\n            this.state = 918;\n            this.jumpStatement();\n            break;\n          case 7:\n            this.enterOuterAlt(localctx, 7);\n            this.state = 919;\n            _la = this._input.LA(1);\n            if (!(_la === 16 || _la === 18)) {\n              this._errHandler.recoverInline(this);\n            } else {\n              this._errHandler.reportMatch(this);\n              this.consume();\n            }\n            this.state = 920;\n            _la = this._input.LA(1);\n            if (!(_la === 19 || _la === 52)) {\n              this._errHandler.recoverInline(this);\n            } else {\n              this._errHandler.reportMatch(this);\n              this.consume();\n            }\n            this.state = 921;\n            this.match(CParser.LeftParen);\n            this.state = 930;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if ((_la & ~0x1f) === 0 && (1 << _la & 14) !== 0 || (_la - 44 & ~0x1f) === 0 && (1 << _la - 44 & 1083393) !== 0 || (_la - 76 & ~0x1f) === 0 && (1 << _la - 76 & 12959) !== 0 || (_la - 110 & ~0x1f) === 0 && (1 << _la - 110 & 15) !== 0) {\n              this.state = 922;\n              this.logicalOrExpression();\n              this.state = 927;\n              this._errHandler.sync(this);\n              _la = this._input.LA(1);\n              while (_la === 93) {\n                this.state = 923;\n                this.match(CParser.Comma);\n                this.state = 924;\n                this.logicalOrExpression();\n                this.state = 929;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n              }\n            }\n            this.state = 945;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            while (_la === 91) {\n              this.state = 932;\n              this.match(CParser.Colon);\n              this.state = 941;\n              this._errHandler.sync(this);\n              _la = this._input.LA(1);\n              if ((_la & ~0x1f) === 0 && (1 << _la & 14) !== 0 || (_la - 44 & ~0x1f) === 0 && (1 << _la - 44 & 1083393) !== 0 || (_la - 76 & ~0x1f) === 0 && (1 << _la - 76 & 12959) !== 0 || (_la - 110 & ~0x1f) === 0 && (1 << _la - 110 & 15) !== 0) {\n                this.state = 933;\n                this.logicalOrExpression();\n                this.state = 938;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === 93) {\n                  this.state = 934;\n                  this.match(CParser.Comma);\n                  this.state = 935;\n                  this.logicalOrExpression();\n                  this.state = 940;\n                  this._errHandler.sync(this);\n                  _la = this._input.LA(1);\n                }\n              }\n              this.state = 947;\n              this._errHandler.sync(this);\n              _la = this._input.LA(1);\n            }\n            this.state = 948;\n            this.match(CParser.RightParen);\n            this.state = 949;\n            this.match(CParser.Semi);\n            break;\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"labeledStatement\",\n    value: function labeledStatement() {\n      var localctx = new LabeledStatementContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 144, CParser.RULE_labeledStatement);\n      try {\n        this.state = 963;\n        this._errHandler.sync(this);\n        switch (this._input.LA(1)) {\n          case 110:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 952;\n            this.match(CParser.Identifier);\n            this.state = 953;\n            this.match(CParser.Colon);\n            this.state = 954;\n            this.statement();\n            break;\n          case 22:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 955;\n            this.match(CParser.Case);\n            this.state = 956;\n            this.constantExpression();\n            this.state = 957;\n            this.match(CParser.Colon);\n            this.state = 958;\n            this.statement();\n            break;\n          case 26:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 960;\n            this.match(CParser.Default);\n            this.state = 961;\n            this.match(CParser.Colon);\n            this.state = 962;\n            this.statement();\n            break;\n          default:\n            throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"compoundStatement\",\n    value: function compoundStatement() {\n      var localctx = new CompoundStatementContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 146, CParser.RULE_compoundStatement);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 965;\n        this.match(CParser.LeftBrace);\n        this.state = 967;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if ((_la & ~0x1f) === 0 && (1 << _la & 3757508606) !== 0 || (_la - 32 & ~0x1f) === 0 && (1 << _la - 32 & 4026531839) !== 0 || (_la - 64 & ~0x1f) === 0 && (1 << _la - 64 & 321515537) !== 0 || (_la - 110 & ~0x1f) === 0 && (1 << _la - 110 & 15) !== 0) {\n          this.state = 966;\n          this.blockItemList();\n        }\n        this.state = 969;\n        this.match(CParser.RightBrace);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"blockItemList\",\n    value: function blockItemList() {\n      var localctx = new BlockItemListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 148, CParser.RULE_blockItemList);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 972;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        do {\n          this.state = 971;\n          this.blockItem();\n          this.state = 974;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        } while ((_la & ~0x1f) === 0 && (1 << _la & 3757508606) !== 0 || (_la - 32 & ~0x1f) === 0 && (1 << _la - 32 & 4026531839) !== 0 || (_la - 64 & ~0x1f) === 0 && (1 << _la - 64 & 321515537) !== 0 || (_la - 110 & ~0x1f) === 0 && (1 << _la - 110 & 15) !== 0);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"blockItem\",\n    value: function blockItem() {\n      var localctx = new BlockItemContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 150, CParser.RULE_blockItem);\n      try {\n        this.state = 978;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 115, this._ctx);\n        switch (la_) {\n          case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 976;\n            this.statement();\n            break;\n          case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 977;\n            this.declaration();\n            break;\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"expressionStatement\",\n    value: function expressionStatement() {\n      var localctx = new ExpressionStatementContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 152, CParser.RULE_expressionStatement);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 981;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if ((_la & ~0x1f) === 0 && (1 << _la & 14) !== 0 || (_la - 44 & ~0x1f) === 0 && (1 << _la - 44 & 1083393) !== 0 || (_la - 76 & ~0x1f) === 0 && (1 << _la - 76 & 12959) !== 0 || (_la - 110 & ~0x1f) === 0 && (1 << _la - 110 & 15) !== 0) {\n          this.state = 980;\n          this.expression();\n        }\n        this.state = 983;\n        this.match(CParser.Semi);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"selectionStatement\",\n    value: function selectionStatement() {\n      var localctx = new SelectionStatementContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 154, CParser.RULE_selectionStatement);\n      try {\n        this.state = 1000;\n        this._errHandler.sync(this);\n        switch (this._input.LA(1)) {\n          case 35:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 985;\n            this.match(CParser.If);\n            this.state = 986;\n            this.match(CParser.LeftParen);\n            this.state = 987;\n            this.expression();\n            this.state = 988;\n            this.match(CParser.RightParen);\n            this.state = 989;\n            this.statement();\n            this.state = 992;\n            this._errHandler.sync(this);\n            var la_ = this._interp.adaptivePredict(this._input, 117, this._ctx);\n            if (la_ === 1) {\n              this.state = 990;\n              this.match(CParser.Else);\n              this.state = 991;\n              this.statement();\n            }\n            break;\n          case 47:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 994;\n            this.match(CParser.Switch);\n            this.state = 995;\n            this.match(CParser.LeftParen);\n            this.state = 996;\n            this.expression();\n            this.state = 997;\n            this.match(CParser.RightParen);\n            this.state = 998;\n            this.statement();\n            break;\n          default:\n            throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"iterationStatement\",\n    value: function iterationStatement() {\n      var localctx = new IterationStatementContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 156, CParser.RULE_iterationStatement);\n      try {\n        this.state = 1022;\n        this._errHandler.sync(this);\n        switch (this._input.LA(1)) {\n          case 53:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 1002;\n            this.match(CParser.While);\n            this.state = 1003;\n            this.match(CParser.LeftParen);\n            this.state = 1004;\n            this.expression();\n            this.state = 1005;\n            this.match(CParser.RightParen);\n            this.state = 1006;\n            this.statement();\n            break;\n          case 27:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 1008;\n            this.match(CParser.Do);\n            this.state = 1009;\n            this.statement();\n            this.state = 1010;\n            this.match(CParser.While);\n            this.state = 1011;\n            this.match(CParser.LeftParen);\n            this.state = 1012;\n            this.expression();\n            this.state = 1013;\n            this.match(CParser.RightParen);\n            this.state = 1014;\n            this.match(CParser.Semi);\n            break;\n          case 33:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 1016;\n            this.match(CParser.For);\n            this.state = 1017;\n            this.match(CParser.LeftParen);\n            this.state = 1018;\n            this.forCondition();\n            this.state = 1019;\n            this.match(CParser.RightParen);\n            this.state = 1020;\n            this.statement();\n            break;\n          default:\n            throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"forCondition\",\n    value: function forCondition() {\n      var localctx = new ForConditionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 158, CParser.RULE_forCondition);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 1028;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 121, this._ctx);\n        switch (la_) {\n          case 1:\n            this.state = 1024;\n            this.forDeclaration();\n            break;\n          case 2:\n            this.state = 1026;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if ((_la & ~0x1f) === 0 && (1 << _la & 14) !== 0 || (_la - 44 & ~0x1f) === 0 && (1 << _la - 44 & 1083393) !== 0 || (_la - 76 & ~0x1f) === 0 && (1 << _la - 76 & 12959) !== 0 || (_la - 110 & ~0x1f) === 0 && (1 << _la - 110 & 15) !== 0) {\n              this.state = 1025;\n              this.expression();\n            }\n            break;\n        }\n        this.state = 1030;\n        this.match(CParser.Semi);\n        this.state = 1032;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if ((_la & ~0x1f) === 0 && (1 << _la & 14) !== 0 || (_la - 44 & ~0x1f) === 0 && (1 << _la - 44 & 1083393) !== 0 || (_la - 76 & ~0x1f) === 0 && (1 << _la - 76 & 12959) !== 0 || (_la - 110 & ~0x1f) === 0 && (1 << _la - 110 & 15) !== 0) {\n          this.state = 1031;\n          this.forExpression();\n        }\n        this.state = 1034;\n        this.match(CParser.Semi);\n        this.state = 1036;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if ((_la & ~0x1f) === 0 && (1 << _la & 14) !== 0 || (_la - 44 & ~0x1f) === 0 && (1 << _la - 44 & 1083393) !== 0 || (_la - 76 & ~0x1f) === 0 && (1 << _la - 76 & 12959) !== 0 || (_la - 110 & ~0x1f) === 0 && (1 << _la - 110 & 15) !== 0) {\n          this.state = 1035;\n          this.forExpression();\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"forDeclaration\",\n    value: function forDeclaration() {\n      var localctx = new ForDeclarationContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 160, CParser.RULE_forDeclaration);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 1038;\n        this.declarationSpecifiers();\n        this.state = 1040;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if ((_la & ~0x1f) === 0 && (1 << _la & 64000) !== 0 || (_la - 64 & ~0x1f) === 0 && (1 << _la - 64 & 8454145) !== 0 || _la === 110) {\n          this.state = 1039;\n          this.initDeclaratorList();\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"forExpression\",\n    value: function forExpression() {\n      var localctx = new ForExpressionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 162, CParser.RULE_forExpression);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 1042;\n        this.assignmentExpression();\n        this.state = 1047;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        while (_la === 93) {\n          this.state = 1043;\n          this.match(CParser.Comma);\n          this.state = 1044;\n          this.assignmentExpression();\n          this.state = 1049;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"jumpStatement\",\n    value: function jumpStatement() {\n      var localctx = new JumpStatementContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 164, CParser.RULE_jumpStatement);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 1059;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 127, this._ctx);\n        switch (la_) {\n          case 1:\n            this.state = 1050;\n            this.match(CParser.Goto);\n            this.state = 1051;\n            this.match(CParser.Identifier);\n            break;\n          case 2:\n            this.state = 1052;\n            _la = this._input.LA(1);\n            if (!(_la === 21 || _la === 25)) {\n              this._errHandler.recoverInline(this);\n            } else {\n              this._errHandler.reportMatch(this);\n              this.consume();\n            }\n            break;\n          case 3:\n            this.state = 1053;\n            this.match(CParser.Return);\n            this.state = 1055;\n            this._errHandler.sync(this);\n            _la = this._input.LA(1);\n            if ((_la & ~0x1f) === 0 && (1 << _la & 14) !== 0 || (_la - 44 & ~0x1f) === 0 && (1 << _la - 44 & 1083393) !== 0 || (_la - 76 & ~0x1f) === 0 && (1 << _la - 76 & 12959) !== 0 || (_la - 110 & ~0x1f) === 0 && (1 << _la - 110 & 15) !== 0) {\n              this.state = 1054;\n              this.expression();\n            }\n            break;\n          case 4:\n            this.state = 1057;\n            this.match(CParser.Goto);\n            this.state = 1058;\n            this.unaryExpression();\n            break;\n        }\n        this.state = 1061;\n        this.match(CParser.Semi);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"compilationUnit\",\n    value: function compilationUnit() {\n      var localctx = new CompilationUnitContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 166, CParser.RULE_compilationUnit);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 1064;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if ((_la - 1 & ~0x1f) === 0 && (1 << _la - 1 & 3905519609) !== 0 || (_la - 36 & ~0x1f) === 0 && (1 << _la - 36 & 511047391) !== 0 || (_la - 80 & ~0x1f) === 0 && (1 << _la - 80 & 1073746049) !== 0) {\n          this.state = 1063;\n          this.translationUnit();\n        }\n        this.state = 1066;\n        this.match(CParser.EOF);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"translationUnit\",\n    value: function translationUnit() {\n      var localctx = new TranslationUnitContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 168, CParser.RULE_translationUnit);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 1069;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        do {\n          this.state = 1068;\n          this.externalDeclaration();\n          this.state = 1071;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        } while ((_la - 1 & ~0x1f) === 0 && (1 << _la - 1 & 3905519609) !== 0 || (_la - 36 & ~0x1f) === 0 && (1 << _la - 36 & 511047391) !== 0 || (_la - 80 & ~0x1f) === 0 && (1 << _la - 80 & 1073746049) !== 0);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"externalDeclaration\",\n    value: function externalDeclaration() {\n      var localctx = new ExternalDeclarationContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 170, CParser.RULE_externalDeclaration);\n      try {\n        this.state = 1076;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 130, this._ctx);\n        switch (la_) {\n          case 1:\n            this.enterOuterAlt(localctx, 1);\n            this.state = 1073;\n            this.functionDefinition();\n            break;\n          case 2:\n            this.enterOuterAlt(localctx, 2);\n            this.state = 1074;\n            this.declaration();\n            break;\n          case 3:\n            this.enterOuterAlt(localctx, 3);\n            this.state = 1075;\n            this.match(CParser.Semi);\n            break;\n        }\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"functionDefinition\",\n    value: function functionDefinition() {\n      var localctx = new FunctionDefinitionContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 172, CParser.RULE_functionDefinition);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 1079;\n        this._errHandler.sync(this);\n        var la_ = this._interp.adaptivePredict(this._input, 131, this._ctx);\n        if (la_ === 1) {\n          this.state = 1078;\n          this.declarationSpecifiers();\n        }\n        this.state = 1081;\n        this.declarator();\n        this.state = 1083;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        if ((_la & ~0x1f) === 0 && (1 << _la & 3516008434) !== 0 || (_la - 32 & ~0x1f) === 0 && (1 << _la - 32 & 3881790961) !== 0 || _la === 110) {\n          this.state = 1082;\n          this.declarationList();\n        }\n        this.state = 1085;\n        this.compoundStatement();\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }, {\n    key: \"declarationList\",\n    value: function declarationList() {\n      var localctx = new DeclarationListContext(this, this._ctx, this.state);\n      this.enterRule(localctx, 174, CParser.RULE_declarationList);\n      var _la = 0;\n      try {\n        this.enterOuterAlt(localctx, 1);\n        this.state = 1088;\n        this._errHandler.sync(this);\n        _la = this._input.LA(1);\n        do {\n          this.state = 1087;\n          this.declaration();\n          this.state = 1090;\n          this._errHandler.sync(this);\n          _la = this._input.LA(1);\n        } while ((_la & ~0x1f) === 0 && (1 << _la & 3516008434) !== 0 || (_la - 32 & ~0x1f) === 0 && (1 << _la - 32 & 3881790961) !== 0 || _la === 110);\n      } catch (re) {\n        if (re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\n          localctx.exception = re;\n          this._errHandler.reportError(this, re);\n          this._errHandler.recover(this, re);\n        } else {\n          throw re;\n        }\n      } finally {\n        this.exitRule();\n      }\n      return localctx;\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Parser);\n_defineProperty(CParser, \"grammarFileName\", \"C.g4\");\n_defineProperty(CParser, \"literalNames\", [null, \"'__extension__'\", \"'__builtin_va_arg'\", \"'__builtin_offsetof'\", \"'__m128'\", \"'__m128d'\", \"'__m128i'\", \"'__typeof__'\", \"'__inline__'\", \"'__stdcall'\", \"'__declspec'\", \"'__cdecl'\", \"'__clrcall'\", \"'__fastcall'\", \"'__thiscall'\", \"'__vectorcall'\", \"'__asm'\", \"'__attribute__'\", \"'__asm__'\", \"'__volatile__'\", \"'auto'\", \"'break'\", \"'case'\", \"'char'\", \"'const'\", \"'continue'\", \"'default'\", \"'do'\", \"'double'\", \"'else'\", \"'enum'\", \"'extern'\", \"'float'\", \"'for'\", \"'goto'\", \"'if'\", \"'inline'\", \"'int'\", \"'long'\", \"'register'\", \"'restrict'\", \"'return'\", \"'short'\", \"'signed'\", \"'sizeof'\", \"'static'\", \"'struct'\", \"'switch'\", \"'typedef'\", \"'union'\", \"'unsigned'\", \"'void'\", \"'volatile'\", \"'while'\", \"'_Alignas'\", \"'_Alignof'\", \"'_Atomic'\", \"'_Bool'\", \"'_Complex'\", \"'_Generic'\", \"'_Imaginary'\", \"'_Noreturn'\", \"'_Static_assert'\", \"'_Thread_local'\", \"'('\", \"')'\", \"'['\", \"']'\", \"'{'\", \"'}'\", \"'<'\", \"'<='\", \"'>'\", \"'>='\", \"'<<'\", \"'>>'\", \"'+'\", \"'++'\", \"'-'\", \"'--'\", \"'*'\", \"'/'\", \"'%'\", \"'&'\", \"'|'\", \"'&&'\", \"'||'\", \"'^'\", \"'!'\", \"'~'\", \"'?'\", \"':'\", \"';'\", \"','\", \"'='\", \"'*='\", \"'/='\", \"'%='\", \"'+='\", \"'-='\", \"'<<='\", \"'>>='\", \"'&='\", \"'^='\", \"'|='\", \"'=='\", \"'!='\", \"'->'\", \"'.'\", \"'...'\"]);\n_defineProperty(CParser, \"symbolicNames\", [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, \"Auto\", \"Break\", \"Case\", \"Char\", \"Const\", \"Continue\", \"Default\", \"Do\", \"Double\", \"Else\", \"Enum\", \"Extern\", \"Float\", \"For\", \"Goto\", \"If\", \"Inline\", \"Int\", \"Long\", \"Register\", \"Restrict\", \"Return\", \"Short\", \"Signed\", \"Sizeof\", \"Static\", \"Struct\", \"Switch\", \"Typedef\", \"Union\", \"Unsigned\", \"Void\", \"Volatile\", \"While\", \"Alignas\", \"Alignof\", \"Atomic\", \"Bool\", \"Complex\", \"Generic\", \"Imaginary\", \"Noreturn\", \"StaticAssert\", \"ThreadLocal\", \"LeftParen\", \"RightParen\", \"LeftBracket\", \"RightBracket\", \"LeftBrace\", \"RightBrace\", \"Less\", \"LessEqual\", \"Greater\", \"GreaterEqual\", \"LeftShift\", \"RightShift\", \"Plus\", \"PlusPlus\", \"Minus\", \"MinusMinus\", \"Star\", \"Div\", \"Mod\", \"And\", \"Or\", \"AndAnd\", \"OrOr\", \"Caret\", \"Not\", \"Tilde\", \"Question\", \"Colon\", \"Semi\", \"Comma\", \"Assign\", \"StarAssign\", \"DivAssign\", \"ModAssign\", \"PlusAssign\", \"MinusAssign\", \"LeftShiftAssign\", \"RightShiftAssign\", \"AndAssign\", \"XorAssign\", \"OrAssign\", \"Equal\", \"NotEqual\", \"Arrow\", \"Dot\", \"Ellipsis\", \"Identifier\", \"Constant\", \"DigitSequence\", \"StringLiteral\", \"ComplexDefine\", \"IncludeDirective\", \"AsmBlock\", \"LineAfterPreprocessing\", \"LineDirective\", \"PragmaDirective\", \"Whitespace\", \"Newline\", \"BlockComment\", \"LineComment\"]);\n_defineProperty(CParser, \"ruleNames\", [\"primaryExpression\", \"genericSelection\", \"genericAssocList\", \"genericAssociation\", \"postfixExpression\", \"argumentExpressionList\", \"unaryExpression\", \"unaryOperator\", \"castExpression\", \"multiplicativeExpression\", \"additiveExpression\", \"shiftExpression\", \"relationalExpression\", \"equalityExpression\", \"andExpression\", \"exclusiveOrExpression\", \"inclusiveOrExpression\", \"logicalAndExpression\", \"logicalOrExpression\", \"conditionalExpression\", \"assignmentExpression\", \"assignmentOperator\", \"expression\", \"constantExpression\", \"declaration\", \"declarationSpecifiers\", \"declarationSpecifiers2\", \"declarationSpecifier\", \"initDeclaratorList\", \"initDeclarator\", \"storageClassSpecifier\", \"typeSpecifier\", \"structOrUnionSpecifier\", \"structOrUnion\", \"structDeclarationList\", \"structDeclaration\", \"specifierQualifierList\", \"structDeclaratorList\", \"structDeclarator\", \"enumSpecifier\", \"enumeratorList\", \"enumerator\", \"enumerationConstant\", \"atomicTypeSpecifier\", \"typeQualifier\", \"functionSpecifier\", \"alignmentSpecifier\", \"declarator\", \"directDeclarator\", \"vcSpecificModifer\", \"gccDeclaratorExtension\", \"gccAttributeSpecifier\", \"gccAttributeList\", \"gccAttribute\", \"nestedParenthesesBlock\", \"pointer\", \"typeQualifierList\", \"parameterTypeList\", \"parameterList\", \"parameterDeclaration\", \"identifierList\", \"typeName\", \"abstractDeclarator\", \"directAbstractDeclarator\", \"typedefName\", \"initializer\", \"initializerList\", \"designation\", \"designatorList\", \"designator\", \"staticAssertDeclaration\", \"statement\", \"labeledStatement\", \"compoundStatement\", \"blockItemList\", \"blockItem\", \"expressionStatement\", \"selectionStatement\", \"iterationStatement\", \"forCondition\", \"forDeclaration\", \"forExpression\", \"jumpStatement\", \"compilationUnit\", \"translationUnit\", \"externalDeclaration\", \"functionDefinition\", \"declarationList\"]);\n\nCParser.EOF = antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Token.EOF;\nCParser.T__0 = 1;\nCParser.T__1 = 2;\nCParser.T__2 = 3;\nCParser.T__3 = 4;\nCParser.T__4 = 5;\nCParser.T__5 = 6;\nCParser.T__6 = 7;\nCParser.T__7 = 8;\nCParser.T__8 = 9;\nCParser.T__9 = 10;\nCParser.T__10 = 11;\nCParser.T__11 = 12;\nCParser.T__12 = 13;\nCParser.T__13 = 14;\nCParser.T__14 = 15;\nCParser.T__15 = 16;\nCParser.T__16 = 17;\nCParser.T__17 = 18;\nCParser.T__18 = 19;\nCParser.Auto = 20;\nCParser.Break = 21;\nCParser.Case = 22;\nCParser.Char = 23;\nCParser.Const = 24;\nCParser.Continue = 25;\nCParser.Default = 26;\nCParser.Do = 27;\nCParser.Double = 28;\nCParser.Else = 29;\nCParser.Enum = 30;\nCParser.Extern = 31;\nCParser.Float = 32;\nCParser.For = 33;\nCParser.Goto = 34;\nCParser.If = 35;\nCParser.Inline = 36;\nCParser.Int = 37;\nCParser.Long = 38;\nCParser.Register = 39;\nCParser.Restrict = 40;\nCParser.Return = 41;\nCParser.Short = 42;\nCParser.Signed = 43;\nCParser.Sizeof = 44;\nCParser.Static = 45;\nCParser.Struct = 46;\nCParser.Switch = 47;\nCParser.Typedef = 48;\nCParser.Union = 49;\nCParser.Unsigned = 50;\nCParser.Void = 51;\nCParser.Volatile = 52;\nCParser.While = 53;\nCParser.Alignas = 54;\nCParser.Alignof = 55;\nCParser.Atomic = 56;\nCParser.Bool = 57;\nCParser.Complex = 58;\nCParser.Generic = 59;\nCParser.Imaginary = 60;\nCParser.Noreturn = 61;\nCParser.StaticAssert = 62;\nCParser.ThreadLocal = 63;\nCParser.LeftParen = 64;\nCParser.RightParen = 65;\nCParser.LeftBracket = 66;\nCParser.RightBracket = 67;\nCParser.LeftBrace = 68;\nCParser.RightBrace = 69;\nCParser.Less = 70;\nCParser.LessEqual = 71;\nCParser.Greater = 72;\nCParser.GreaterEqual = 73;\nCParser.LeftShift = 74;\nCParser.RightShift = 75;\nCParser.Plus = 76;\nCParser.PlusPlus = 77;\nCParser.Minus = 78;\nCParser.MinusMinus = 79;\nCParser.Star = 80;\nCParser.Div = 81;\nCParser.Mod = 82;\nCParser.And = 83;\nCParser.Or = 84;\nCParser.AndAnd = 85;\nCParser.OrOr = 86;\nCParser.Caret = 87;\nCParser.Not = 88;\nCParser.Tilde = 89;\nCParser.Question = 90;\nCParser.Colon = 91;\nCParser.Semi = 92;\nCParser.Comma = 93;\nCParser.Assign = 94;\nCParser.StarAssign = 95;\nCParser.DivAssign = 96;\nCParser.ModAssign = 97;\nCParser.PlusAssign = 98;\nCParser.MinusAssign = 99;\nCParser.LeftShiftAssign = 100;\nCParser.RightShiftAssign = 101;\nCParser.AndAssign = 102;\nCParser.XorAssign = 103;\nCParser.OrAssign = 104;\nCParser.Equal = 105;\nCParser.NotEqual = 106;\nCParser.Arrow = 107;\nCParser.Dot = 108;\nCParser.Ellipsis = 109;\nCParser.Identifier = 110;\nCParser.Constant = 111;\nCParser.DigitSequence = 112;\nCParser.StringLiteral = 113;\nCParser.ComplexDefine = 114;\nCParser.IncludeDirective = 115;\nCParser.AsmBlock = 116;\nCParser.LineAfterPreprocessing = 117;\nCParser.LineDirective = 118;\nCParser.PragmaDirective = 119;\nCParser.Whitespace = 120;\nCParser.Newline = 121;\nCParser.BlockComment = 122;\nCParser.LineComment = 123;\nCParser.RULE_primaryExpression = 0;\nCParser.RULE_genericSelection = 1;\nCParser.RULE_genericAssocList = 2;\nCParser.RULE_genericAssociation = 3;\nCParser.RULE_postfixExpression = 4;\nCParser.RULE_argumentExpressionList = 5;\nCParser.RULE_unaryExpression = 6;\nCParser.RULE_unaryOperator = 7;\nCParser.RULE_castExpression = 8;\nCParser.RULE_multiplicativeExpression = 9;\nCParser.RULE_additiveExpression = 10;\nCParser.RULE_shiftExpression = 11;\nCParser.RULE_relationalExpression = 12;\nCParser.RULE_equalityExpression = 13;\nCParser.RULE_andExpression = 14;\nCParser.RULE_exclusiveOrExpression = 15;\nCParser.RULE_inclusiveOrExpression = 16;\nCParser.RULE_logicalAndExpression = 17;\nCParser.RULE_logicalOrExpression = 18;\nCParser.RULE_conditionalExpression = 19;\nCParser.RULE_assignmentExpression = 20;\nCParser.RULE_assignmentOperator = 21;\nCParser.RULE_expression = 22;\nCParser.RULE_constantExpression = 23;\nCParser.RULE_declaration = 24;\nCParser.RULE_declarationSpecifiers = 25;\nCParser.RULE_declarationSpecifiers2 = 26;\nCParser.RULE_declarationSpecifier = 27;\nCParser.RULE_initDeclaratorList = 28;\nCParser.RULE_initDeclarator = 29;\nCParser.RULE_storageClassSpecifier = 30;\nCParser.RULE_typeSpecifier = 31;\nCParser.RULE_structOrUnionSpecifier = 32;\nCParser.RULE_structOrUnion = 33;\nCParser.RULE_structDeclarationList = 34;\nCParser.RULE_structDeclaration = 35;\nCParser.RULE_specifierQualifierList = 36;\nCParser.RULE_structDeclaratorList = 37;\nCParser.RULE_structDeclarator = 38;\nCParser.RULE_enumSpecifier = 39;\nCParser.RULE_enumeratorList = 40;\nCParser.RULE_enumerator = 41;\nCParser.RULE_enumerationConstant = 42;\nCParser.RULE_atomicTypeSpecifier = 43;\nCParser.RULE_typeQualifier = 44;\nCParser.RULE_functionSpecifier = 45;\nCParser.RULE_alignmentSpecifier = 46;\nCParser.RULE_declarator = 47;\nCParser.RULE_directDeclarator = 48;\nCParser.RULE_vcSpecificModifer = 49;\nCParser.RULE_gccDeclaratorExtension = 50;\nCParser.RULE_gccAttributeSpecifier = 51;\nCParser.RULE_gccAttributeList = 52;\nCParser.RULE_gccAttribute = 53;\nCParser.RULE_nestedParenthesesBlock = 54;\nCParser.RULE_pointer = 55;\nCParser.RULE_typeQualifierList = 56;\nCParser.RULE_parameterTypeList = 57;\nCParser.RULE_parameterList = 58;\nCParser.RULE_parameterDeclaration = 59;\nCParser.RULE_identifierList = 60;\nCParser.RULE_typeName = 61;\nCParser.RULE_abstractDeclarator = 62;\nCParser.RULE_directAbstractDeclarator = 63;\nCParser.RULE_typedefName = 64;\nCParser.RULE_initializer = 65;\nCParser.RULE_initializerList = 66;\nCParser.RULE_designation = 67;\nCParser.RULE_designatorList = 68;\nCParser.RULE_designator = 69;\nCParser.RULE_staticAssertDeclaration = 70;\nCParser.RULE_statement = 71;\nCParser.RULE_labeledStatement = 72;\nCParser.RULE_compoundStatement = 73;\nCParser.RULE_blockItemList = 74;\nCParser.RULE_blockItem = 75;\nCParser.RULE_expressionStatement = 76;\nCParser.RULE_selectionStatement = 77;\nCParser.RULE_iterationStatement = 78;\nCParser.RULE_forCondition = 79;\nCParser.RULE_forDeclaration = 80;\nCParser.RULE_forExpression = 81;\nCParser.RULE_jumpStatement = 82;\nCParser.RULE_compilationUnit = 83;\nCParser.RULE_translationUnit = 84;\nCParser.RULE_externalDeclaration = 85;\nCParser.RULE_functionDefinition = 86;\nCParser.RULE_declarationList = 87;\nvar PrimaryExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon) {\n  function PrimaryExpressionContext(parser, parent, invokingState) {\n    var _this2;\n    _classCallCheck(this, PrimaryExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this2 = _callSuper(this, PrimaryExpressionContext, [parent, invokingState]);\n    _defineProperty(_this2, \"StringLiteral\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.StringLiteral);\n      } else {\n        return this.getToken(CParser.StringLiteral, i);\n      }\n    });\n    _this2.parser = parser;\n    _this2.ruleIndex = CParser.RULE_primaryExpression;\n    return _this2;\n  }\n  _inherits(PrimaryExpressionContext, _antlr4$ParserRuleCon);\n  return _createClass(PrimaryExpressionContext, [{\n    key: \"Identifier\",\n    value: function Identifier() {\n      return this.getToken(CParser.Identifier, 0);\n    }\n  }, {\n    key: \"Constant\",\n    value: function Constant() {\n      return this.getToken(CParser.Constant, 0);\n    }\n  }, {\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"expression\",\n    value: function expression() {\n      return this.getTypedRuleContext(ExpressionContext, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"genericSelection\",\n    value: function genericSelection() {\n      return this.getTypedRuleContext(GenericSelectionContext, 0);\n    }\n  }, {\n    key: \"compoundStatement\",\n    value: function compoundStatement() {\n      return this.getTypedRuleContext(CompoundStatementContext, 0);\n    }\n  }, {\n    key: \"unaryExpression\",\n    value: function unaryExpression() {\n      return this.getTypedRuleContext(UnaryExpressionContext, 0);\n    }\n  }, {\n    key: \"Comma\",\n    value: function Comma() {\n      return this.getToken(CParser.Comma, 0);\n    }\n  }, {\n    key: \"typeName\",\n    value: function typeName() {\n      return this.getTypedRuleContext(TypeNameContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterPrimaryExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitPrimaryExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitPrimaryExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar GenericSelectionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon2) {\n  function GenericSelectionContext(parser, parent, invokingState) {\n    var _this3;\n    _classCallCheck(this, GenericSelectionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this3 = _callSuper(this, GenericSelectionContext, [parent, invokingState]);\n    _this3.parser = parser;\n    _this3.ruleIndex = CParser.RULE_genericSelection;\n    return _this3;\n  }\n  _inherits(GenericSelectionContext, _antlr4$ParserRuleCon2);\n  return _createClass(GenericSelectionContext, [{\n    key: \"Generic\",\n    value: function Generic() {\n      return this.getToken(CParser.Generic, 0);\n    }\n  }, {\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"assignmentExpression\",\n    value: function assignmentExpression() {\n      return this.getTypedRuleContext(AssignmentExpressionContext, 0);\n    }\n  }, {\n    key: \"Comma\",\n    value: function Comma() {\n      return this.getToken(CParser.Comma, 0);\n    }\n  }, {\n    key: \"genericAssocList\",\n    value: function genericAssocList() {\n      return this.getTypedRuleContext(GenericAssocListContext, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterGenericSelection(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitGenericSelection(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitGenericSelection(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar GenericAssocListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon3) {\n  function GenericAssocListContext(parser, parent, invokingState) {\n    var _this4;\n    _classCallCheck(this, GenericAssocListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this4 = _callSuper(this, GenericAssocListContext, [parent, invokingState]);\n    _defineProperty(_this4, \"genericAssociation\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(GenericAssociationContext);\n      } else {\n        return this.getTypedRuleContext(GenericAssociationContext, i);\n      }\n    });\n    _defineProperty(_this4, \"Comma\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Comma);\n      } else {\n        return this.getToken(CParser.Comma, i);\n      }\n    });\n    _this4.parser = parser;\n    _this4.ruleIndex = CParser.RULE_genericAssocList;\n    return _this4;\n  }\n  _inherits(GenericAssocListContext, _antlr4$ParserRuleCon3);\n  return _createClass(GenericAssocListContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterGenericAssocList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitGenericAssocList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitGenericAssocList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar GenericAssociationContext = /*#__PURE__*/function (_antlr4$ParserRuleCon4) {\n  function GenericAssociationContext(parser, parent, invokingState) {\n    var _this5;\n    _classCallCheck(this, GenericAssociationContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this5 = _callSuper(this, GenericAssociationContext, [parent, invokingState]);\n    _this5.parser = parser;\n    _this5.ruleIndex = CParser.RULE_genericAssociation;\n    return _this5;\n  }\n  _inherits(GenericAssociationContext, _antlr4$ParserRuleCon4);\n  return _createClass(GenericAssociationContext, [{\n    key: \"Colon\",\n    value: function Colon() {\n      return this.getToken(CParser.Colon, 0);\n    }\n  }, {\n    key: \"assignmentExpression\",\n    value: function assignmentExpression() {\n      return this.getTypedRuleContext(AssignmentExpressionContext, 0);\n    }\n  }, {\n    key: \"typeName\",\n    value: function typeName() {\n      return this.getTypedRuleContext(TypeNameContext, 0);\n    }\n  }, {\n    key: \"Default\",\n    value: function Default() {\n      return this.getToken(CParser.Default, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterGenericAssociation(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitGenericAssociation(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitGenericAssociation(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar PostfixExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon5) {\n  function PostfixExpressionContext(parser, parent, invokingState) {\n    var _this6;\n    _classCallCheck(this, PostfixExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this6 = _callSuper(this, PostfixExpressionContext, [parent, invokingState]);\n    _defineProperty(_this6, \"LeftParen\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.LeftParen);\n      } else {\n        return this.getToken(CParser.LeftParen, i);\n      }\n    });\n    _defineProperty(_this6, \"RightParen\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.RightParen);\n      } else {\n        return this.getToken(CParser.RightParen, i);\n      }\n    });\n    _defineProperty(_this6, \"LeftBracket\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.LeftBracket);\n      } else {\n        return this.getToken(CParser.LeftBracket, i);\n      }\n    });\n    _defineProperty(_this6, \"expression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(ExpressionContext);\n      } else {\n        return this.getTypedRuleContext(ExpressionContext, i);\n      }\n    });\n    _defineProperty(_this6, \"RightBracket\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.RightBracket);\n      } else {\n        return this.getToken(CParser.RightBracket, i);\n      }\n    });\n    _defineProperty(_this6, \"Identifier\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Identifier);\n      } else {\n        return this.getToken(CParser.Identifier, i);\n      }\n    });\n    _defineProperty(_this6, \"Dot\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Dot);\n      } else {\n        return this.getToken(CParser.Dot, i);\n      }\n    });\n    _defineProperty(_this6, \"Arrow\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Arrow);\n      } else {\n        return this.getToken(CParser.Arrow, i);\n      }\n    });\n    _defineProperty(_this6, \"PlusPlus\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.PlusPlus);\n      } else {\n        return this.getToken(CParser.PlusPlus, i);\n      }\n    });\n    _defineProperty(_this6, \"MinusMinus\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.MinusMinus);\n      } else {\n        return this.getToken(CParser.MinusMinus, i);\n      }\n    });\n    _defineProperty(_this6, \"argumentExpressionList\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(ArgumentExpressionListContext);\n      } else {\n        return this.getTypedRuleContext(ArgumentExpressionListContext, i);\n      }\n    });\n    _this6.parser = parser;\n    _this6.ruleIndex = CParser.RULE_postfixExpression;\n    return _this6;\n  }\n  _inherits(PostfixExpressionContext, _antlr4$ParserRuleCon5);\n  return _createClass(PostfixExpressionContext, [{\n    key: \"primaryExpression\",\n    value: function primaryExpression() {\n      return this.getTypedRuleContext(PrimaryExpressionContext, 0);\n    }\n  }, {\n    key: \"typeName\",\n    value: function typeName() {\n      return this.getTypedRuleContext(TypeNameContext, 0);\n    }\n  }, {\n    key: \"LeftBrace\",\n    value: function LeftBrace() {\n      return this.getToken(CParser.LeftBrace, 0);\n    }\n  }, {\n    key: \"initializerList\",\n    value: function initializerList() {\n      return this.getTypedRuleContext(InitializerListContext, 0);\n    }\n  }, {\n    key: \"RightBrace\",\n    value: function RightBrace() {\n      return this.getToken(CParser.RightBrace, 0);\n    }\n  }, {\n    key: \"Comma\",\n    value: function Comma() {\n      return this.getToken(CParser.Comma, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterPostfixExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitPostfixExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitPostfixExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar ArgumentExpressionListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon6) {\n  function ArgumentExpressionListContext(parser, parent, invokingState) {\n    var _this7;\n    _classCallCheck(this, ArgumentExpressionListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this7 = _callSuper(this, ArgumentExpressionListContext, [parent, invokingState]);\n    _defineProperty(_this7, \"assignmentExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(AssignmentExpressionContext);\n      } else {\n        return this.getTypedRuleContext(AssignmentExpressionContext, i);\n      }\n    });\n    _defineProperty(_this7, \"Comma\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Comma);\n      } else {\n        return this.getToken(CParser.Comma, i);\n      }\n    });\n    _this7.parser = parser;\n    _this7.ruleIndex = CParser.RULE_argumentExpressionList;\n    return _this7;\n  }\n  _inherits(ArgumentExpressionListContext, _antlr4$ParserRuleCon6);\n  return _createClass(ArgumentExpressionListContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterArgumentExpressionList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitArgumentExpressionList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitArgumentExpressionList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar UnaryExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon7) {\n  function UnaryExpressionContext(parser, parent, invokingState) {\n    var _this8;\n    _classCallCheck(this, UnaryExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this8 = _callSuper(this, UnaryExpressionContext, [parent, invokingState]);\n    _defineProperty(_this8, \"Sizeof\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Sizeof);\n      } else {\n        return this.getToken(CParser.Sizeof, i);\n      }\n    });\n    _defineProperty(_this8, \"PlusPlus\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.PlusPlus);\n      } else {\n        return this.getToken(CParser.PlusPlus, i);\n      }\n    });\n    _defineProperty(_this8, \"MinusMinus\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.MinusMinus);\n      } else {\n        return this.getToken(CParser.MinusMinus, i);\n      }\n    });\n    _this8.parser = parser;\n    _this8.ruleIndex = CParser.RULE_unaryExpression;\n    return _this8;\n  }\n  _inherits(UnaryExpressionContext, _antlr4$ParserRuleCon7);\n  return _createClass(UnaryExpressionContext, [{\n    key: \"postfixExpression\",\n    value: function postfixExpression() {\n      return this.getTypedRuleContext(PostfixExpressionContext, 0);\n    }\n  }, {\n    key: \"unaryOperator\",\n    value: function unaryOperator() {\n      return this.getTypedRuleContext(UnaryOperatorContext, 0);\n    }\n  }, {\n    key: \"castExpression\",\n    value: function castExpression() {\n      return this.getTypedRuleContext(CastExpressionContext, 0);\n    }\n  }, {\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"typeName\",\n    value: function typeName() {\n      return this.getTypedRuleContext(TypeNameContext, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"AndAnd\",\n    value: function AndAnd() {\n      return this.getToken(CParser.AndAnd, 0);\n    }\n  }, {\n    key: \"Identifier\",\n    value: function Identifier() {\n      return this.getToken(CParser.Identifier, 0);\n    }\n  }, {\n    key: \"Alignof\",\n    value: function Alignof() {\n      return this.getToken(CParser.Alignof, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterUnaryExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitUnaryExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitUnaryExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar UnaryOperatorContext = /*#__PURE__*/function (_antlr4$ParserRuleCon8) {\n  function UnaryOperatorContext(parser, parent, invokingState) {\n    var _this9;\n    _classCallCheck(this, UnaryOperatorContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this9 = _callSuper(this, UnaryOperatorContext, [parent, invokingState]);\n    _this9.parser = parser;\n    _this9.ruleIndex = CParser.RULE_unaryOperator;\n    return _this9;\n  }\n  _inherits(UnaryOperatorContext, _antlr4$ParserRuleCon8);\n  return _createClass(UnaryOperatorContext, [{\n    key: \"And\",\n    value: function And() {\n      return this.getToken(CParser.And, 0);\n    }\n  }, {\n    key: \"Star\",\n    value: function Star() {\n      return this.getToken(CParser.Star, 0);\n    }\n  }, {\n    key: \"Plus\",\n    value: function Plus() {\n      return this.getToken(CParser.Plus, 0);\n    }\n  }, {\n    key: \"Minus\",\n    value: function Minus() {\n      return this.getToken(CParser.Minus, 0);\n    }\n  }, {\n    key: \"Tilde\",\n    value: function Tilde() {\n      return this.getToken(CParser.Tilde, 0);\n    }\n  }, {\n    key: \"Not\",\n    value: function Not() {\n      return this.getToken(CParser.Not, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterUnaryOperator(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitUnaryOperator(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitUnaryOperator(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar CastExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon9) {\n  function CastExpressionContext(parser, parent, invokingState) {\n    var _this10;\n    _classCallCheck(this, CastExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this10 = _callSuper(this, CastExpressionContext, [parent, invokingState]);\n    _this10.parser = parser;\n    _this10.ruleIndex = CParser.RULE_castExpression;\n    return _this10;\n  }\n  _inherits(CastExpressionContext, _antlr4$ParserRuleCon9);\n  return _createClass(CastExpressionContext, [{\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"typeName\",\n    value: function typeName() {\n      return this.getTypedRuleContext(TypeNameContext, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"castExpression\",\n    value: function castExpression() {\n      return this.getTypedRuleContext(CastExpressionContext, 0);\n    }\n  }, {\n    key: \"unaryExpression\",\n    value: function unaryExpression() {\n      return this.getTypedRuleContext(UnaryExpressionContext, 0);\n    }\n  }, {\n    key: \"DigitSequence\",\n    value: function DigitSequence() {\n      return this.getToken(CParser.DigitSequence, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterCastExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitCastExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitCastExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar MultiplicativeExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon10) {\n  function MultiplicativeExpressionContext(parser, parent, invokingState) {\n    var _this11;\n    _classCallCheck(this, MultiplicativeExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this11 = _callSuper(this, MultiplicativeExpressionContext, [parent, invokingState]);\n    _defineProperty(_this11, \"castExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(CastExpressionContext);\n      } else {\n        return this.getTypedRuleContext(CastExpressionContext, i);\n      }\n    });\n    _defineProperty(_this11, \"Star\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Star);\n      } else {\n        return this.getToken(CParser.Star, i);\n      }\n    });\n    _defineProperty(_this11, \"Div\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Div);\n      } else {\n        return this.getToken(CParser.Div, i);\n      }\n    });\n    _defineProperty(_this11, \"Mod\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Mod);\n      } else {\n        return this.getToken(CParser.Mod, i);\n      }\n    });\n    _this11.parser = parser;\n    _this11.ruleIndex = CParser.RULE_multiplicativeExpression;\n    return _this11;\n  }\n  _inherits(MultiplicativeExpressionContext, _antlr4$ParserRuleCon10);\n  return _createClass(MultiplicativeExpressionContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterMultiplicativeExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitMultiplicativeExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitMultiplicativeExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar AdditiveExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon11) {\n  function AdditiveExpressionContext(parser, parent, invokingState) {\n    var _this12;\n    _classCallCheck(this, AdditiveExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this12 = _callSuper(this, AdditiveExpressionContext, [parent, invokingState]);\n    _defineProperty(_this12, \"multiplicativeExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(MultiplicativeExpressionContext);\n      } else {\n        return this.getTypedRuleContext(MultiplicativeExpressionContext, i);\n      }\n    });\n    _defineProperty(_this12, \"Plus\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Plus);\n      } else {\n        return this.getToken(CParser.Plus, i);\n      }\n    });\n    _defineProperty(_this12, \"Minus\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Minus);\n      } else {\n        return this.getToken(CParser.Minus, i);\n      }\n    });\n    _this12.parser = parser;\n    _this12.ruleIndex = CParser.RULE_additiveExpression;\n    return _this12;\n  }\n  _inherits(AdditiveExpressionContext, _antlr4$ParserRuleCon11);\n  return _createClass(AdditiveExpressionContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterAdditiveExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitAdditiveExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitAdditiveExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar ShiftExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon12) {\n  function ShiftExpressionContext(parser, parent, invokingState) {\n    var _this13;\n    _classCallCheck(this, ShiftExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this13 = _callSuper(this, ShiftExpressionContext, [parent, invokingState]);\n    _defineProperty(_this13, \"additiveExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(AdditiveExpressionContext);\n      } else {\n        return this.getTypedRuleContext(AdditiveExpressionContext, i);\n      }\n    });\n    _defineProperty(_this13, \"LeftShift\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.LeftShift);\n      } else {\n        return this.getToken(CParser.LeftShift, i);\n      }\n    });\n    _defineProperty(_this13, \"RightShift\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.RightShift);\n      } else {\n        return this.getToken(CParser.RightShift, i);\n      }\n    });\n    _this13.parser = parser;\n    _this13.ruleIndex = CParser.RULE_shiftExpression;\n    return _this13;\n  }\n  _inherits(ShiftExpressionContext, _antlr4$ParserRuleCon12);\n  return _createClass(ShiftExpressionContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterShiftExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitShiftExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitShiftExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar RelationalExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon13) {\n  function RelationalExpressionContext(parser, parent, invokingState) {\n    var _this14;\n    _classCallCheck(this, RelationalExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this14 = _callSuper(this, RelationalExpressionContext, [parent, invokingState]);\n    _defineProperty(_this14, \"shiftExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(ShiftExpressionContext);\n      } else {\n        return this.getTypedRuleContext(ShiftExpressionContext, i);\n      }\n    });\n    _defineProperty(_this14, \"Less\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Less);\n      } else {\n        return this.getToken(CParser.Less, i);\n      }\n    });\n    _defineProperty(_this14, \"Greater\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Greater);\n      } else {\n        return this.getToken(CParser.Greater, i);\n      }\n    });\n    _defineProperty(_this14, \"LessEqual\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.LessEqual);\n      } else {\n        return this.getToken(CParser.LessEqual, i);\n      }\n    });\n    _defineProperty(_this14, \"GreaterEqual\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.GreaterEqual);\n      } else {\n        return this.getToken(CParser.GreaterEqual, i);\n      }\n    });\n    _this14.parser = parser;\n    _this14.ruleIndex = CParser.RULE_relationalExpression;\n    return _this14;\n  }\n  _inherits(RelationalExpressionContext, _antlr4$ParserRuleCon13);\n  return _createClass(RelationalExpressionContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterRelationalExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitRelationalExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitRelationalExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar EqualityExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon14) {\n  function EqualityExpressionContext(parser, parent, invokingState) {\n    var _this15;\n    _classCallCheck(this, EqualityExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this15 = _callSuper(this, EqualityExpressionContext, [parent, invokingState]);\n    _defineProperty(_this15, \"relationalExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(RelationalExpressionContext);\n      } else {\n        return this.getTypedRuleContext(RelationalExpressionContext, i);\n      }\n    });\n    _defineProperty(_this15, \"Equal\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Equal);\n      } else {\n        return this.getToken(CParser.Equal, i);\n      }\n    });\n    _defineProperty(_this15, \"NotEqual\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.NotEqual);\n      } else {\n        return this.getToken(CParser.NotEqual, i);\n      }\n    });\n    _this15.parser = parser;\n    _this15.ruleIndex = CParser.RULE_equalityExpression;\n    return _this15;\n  }\n  _inherits(EqualityExpressionContext, _antlr4$ParserRuleCon14);\n  return _createClass(EqualityExpressionContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterEqualityExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitEqualityExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitEqualityExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar AndExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon15) {\n  function AndExpressionContext(parser, parent, invokingState) {\n    var _this16;\n    _classCallCheck(this, AndExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this16 = _callSuper(this, AndExpressionContext, [parent, invokingState]);\n    _defineProperty(_this16, \"equalityExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(EqualityExpressionContext);\n      } else {\n        return this.getTypedRuleContext(EqualityExpressionContext, i);\n      }\n    });\n    _defineProperty(_this16, \"And\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.And);\n      } else {\n        return this.getToken(CParser.And, i);\n      }\n    });\n    _this16.parser = parser;\n    _this16.ruleIndex = CParser.RULE_andExpression;\n    return _this16;\n  }\n  _inherits(AndExpressionContext, _antlr4$ParserRuleCon15);\n  return _createClass(AndExpressionContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterAndExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitAndExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitAndExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar ExclusiveOrExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon16) {\n  function ExclusiveOrExpressionContext(parser, parent, invokingState) {\n    var _this17;\n    _classCallCheck(this, ExclusiveOrExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this17 = _callSuper(this, ExclusiveOrExpressionContext, [parent, invokingState]);\n    _defineProperty(_this17, \"andExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(AndExpressionContext);\n      } else {\n        return this.getTypedRuleContext(AndExpressionContext, i);\n      }\n    });\n    _defineProperty(_this17, \"Caret\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Caret);\n      } else {\n        return this.getToken(CParser.Caret, i);\n      }\n    });\n    _this17.parser = parser;\n    _this17.ruleIndex = CParser.RULE_exclusiveOrExpression;\n    return _this17;\n  }\n  _inherits(ExclusiveOrExpressionContext, _antlr4$ParserRuleCon16);\n  return _createClass(ExclusiveOrExpressionContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterExclusiveOrExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitExclusiveOrExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitExclusiveOrExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar InclusiveOrExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon17) {\n  function InclusiveOrExpressionContext(parser, parent, invokingState) {\n    var _this18;\n    _classCallCheck(this, InclusiveOrExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this18 = _callSuper(this, InclusiveOrExpressionContext, [parent, invokingState]);\n    _defineProperty(_this18, \"exclusiveOrExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(ExclusiveOrExpressionContext);\n      } else {\n        return this.getTypedRuleContext(ExclusiveOrExpressionContext, i);\n      }\n    });\n    _defineProperty(_this18, \"Or\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Or);\n      } else {\n        return this.getToken(CParser.Or, i);\n      }\n    });\n    _this18.parser = parser;\n    _this18.ruleIndex = CParser.RULE_inclusiveOrExpression;\n    return _this18;\n  }\n  _inherits(InclusiveOrExpressionContext, _antlr4$ParserRuleCon17);\n  return _createClass(InclusiveOrExpressionContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterInclusiveOrExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitInclusiveOrExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitInclusiveOrExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar LogicalAndExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon18) {\n  function LogicalAndExpressionContext(parser, parent, invokingState) {\n    var _this19;\n    _classCallCheck(this, LogicalAndExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this19 = _callSuper(this, LogicalAndExpressionContext, [parent, invokingState]);\n    _defineProperty(_this19, \"inclusiveOrExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(InclusiveOrExpressionContext);\n      } else {\n        return this.getTypedRuleContext(InclusiveOrExpressionContext, i);\n      }\n    });\n    _defineProperty(_this19, \"AndAnd\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.AndAnd);\n      } else {\n        return this.getToken(CParser.AndAnd, i);\n      }\n    });\n    _this19.parser = parser;\n    _this19.ruleIndex = CParser.RULE_logicalAndExpression;\n    return _this19;\n  }\n  _inherits(LogicalAndExpressionContext, _antlr4$ParserRuleCon18);\n  return _createClass(LogicalAndExpressionContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterLogicalAndExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitLogicalAndExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitLogicalAndExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar LogicalOrExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon19) {\n  function LogicalOrExpressionContext(parser, parent, invokingState) {\n    var _this20;\n    _classCallCheck(this, LogicalOrExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this20 = _callSuper(this, LogicalOrExpressionContext, [parent, invokingState]);\n    _defineProperty(_this20, \"logicalAndExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(LogicalAndExpressionContext);\n      } else {\n        return this.getTypedRuleContext(LogicalAndExpressionContext, i);\n      }\n    });\n    _defineProperty(_this20, \"OrOr\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.OrOr);\n      } else {\n        return this.getToken(CParser.OrOr, i);\n      }\n    });\n    _this20.parser = parser;\n    _this20.ruleIndex = CParser.RULE_logicalOrExpression;\n    return _this20;\n  }\n  _inherits(LogicalOrExpressionContext, _antlr4$ParserRuleCon19);\n  return _createClass(LogicalOrExpressionContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterLogicalOrExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitLogicalOrExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitLogicalOrExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar ConditionalExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon20) {\n  function ConditionalExpressionContext(parser, parent, invokingState) {\n    var _this21;\n    _classCallCheck(this, ConditionalExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this21 = _callSuper(this, ConditionalExpressionContext, [parent, invokingState]);\n    _this21.parser = parser;\n    _this21.ruleIndex = CParser.RULE_conditionalExpression;\n    return _this21;\n  }\n  _inherits(ConditionalExpressionContext, _antlr4$ParserRuleCon20);\n  return _createClass(ConditionalExpressionContext, [{\n    key: \"logicalOrExpression\",\n    value: function logicalOrExpression() {\n      return this.getTypedRuleContext(LogicalOrExpressionContext, 0);\n    }\n  }, {\n    key: \"Question\",\n    value: function Question() {\n      return this.getToken(CParser.Question, 0);\n    }\n  }, {\n    key: \"expression\",\n    value: function expression() {\n      return this.getTypedRuleContext(ExpressionContext, 0);\n    }\n  }, {\n    key: \"Colon\",\n    value: function Colon() {\n      return this.getToken(CParser.Colon, 0);\n    }\n  }, {\n    key: \"conditionalExpression\",\n    value: function conditionalExpression() {\n      return this.getTypedRuleContext(ConditionalExpressionContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterConditionalExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitConditionalExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitConditionalExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar AssignmentExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon21) {\n  function AssignmentExpressionContext(parser, parent, invokingState) {\n    var _this22;\n    _classCallCheck(this, AssignmentExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this22 = _callSuper(this, AssignmentExpressionContext, [parent, invokingState]);\n    _this22.parser = parser;\n    _this22.ruleIndex = CParser.RULE_assignmentExpression;\n    return _this22;\n  }\n  _inherits(AssignmentExpressionContext, _antlr4$ParserRuleCon21);\n  return _createClass(AssignmentExpressionContext, [{\n    key: \"conditionalExpression\",\n    value: function conditionalExpression() {\n      return this.getTypedRuleContext(ConditionalExpressionContext, 0);\n    }\n  }, {\n    key: \"unaryExpression\",\n    value: function unaryExpression() {\n      return this.getTypedRuleContext(UnaryExpressionContext, 0);\n    }\n  }, {\n    key: \"assignmentOperator\",\n    value: function assignmentOperator() {\n      return this.getTypedRuleContext(AssignmentOperatorContext, 0);\n    }\n  }, {\n    key: \"assignmentExpression\",\n    value: function assignmentExpression() {\n      return this.getTypedRuleContext(AssignmentExpressionContext, 0);\n    }\n  }, {\n    key: \"DigitSequence\",\n    value: function DigitSequence() {\n      return this.getToken(CParser.DigitSequence, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterAssignmentExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitAssignmentExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitAssignmentExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar AssignmentOperatorContext = /*#__PURE__*/function (_antlr4$ParserRuleCon22) {\n  function AssignmentOperatorContext(parser, parent, invokingState) {\n    var _this23;\n    _classCallCheck(this, AssignmentOperatorContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this23 = _callSuper(this, AssignmentOperatorContext, [parent, invokingState]);\n    _this23.parser = parser;\n    _this23.ruleIndex = CParser.RULE_assignmentOperator;\n    return _this23;\n  }\n  _inherits(AssignmentOperatorContext, _antlr4$ParserRuleCon22);\n  return _createClass(AssignmentOperatorContext, [{\n    key: \"Assign\",\n    value: function Assign() {\n      return this.getToken(CParser.Assign, 0);\n    }\n  }, {\n    key: \"StarAssign\",\n    value: function StarAssign() {\n      return this.getToken(CParser.StarAssign, 0);\n    }\n  }, {\n    key: \"DivAssign\",\n    value: function DivAssign() {\n      return this.getToken(CParser.DivAssign, 0);\n    }\n  }, {\n    key: \"ModAssign\",\n    value: function ModAssign() {\n      return this.getToken(CParser.ModAssign, 0);\n    }\n  }, {\n    key: \"PlusAssign\",\n    value: function PlusAssign() {\n      return this.getToken(CParser.PlusAssign, 0);\n    }\n  }, {\n    key: \"MinusAssign\",\n    value: function MinusAssign() {\n      return this.getToken(CParser.MinusAssign, 0);\n    }\n  }, {\n    key: \"LeftShiftAssign\",\n    value: function LeftShiftAssign() {\n      return this.getToken(CParser.LeftShiftAssign, 0);\n    }\n  }, {\n    key: \"RightShiftAssign\",\n    value: function RightShiftAssign() {\n      return this.getToken(CParser.RightShiftAssign, 0);\n    }\n  }, {\n    key: \"AndAssign\",\n    value: function AndAssign() {\n      return this.getToken(CParser.AndAssign, 0);\n    }\n  }, {\n    key: \"XorAssign\",\n    value: function XorAssign() {\n      return this.getToken(CParser.XorAssign, 0);\n    }\n  }, {\n    key: \"OrAssign\",\n    value: function OrAssign() {\n      return this.getToken(CParser.OrAssign, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterAssignmentOperator(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitAssignmentOperator(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitAssignmentOperator(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar ExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon23) {\n  function ExpressionContext(parser, parent, invokingState) {\n    var _this24;\n    _classCallCheck(this, ExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this24 = _callSuper(this, ExpressionContext, [parent, invokingState]);\n    _defineProperty(_this24, \"assignmentExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(AssignmentExpressionContext);\n      } else {\n        return this.getTypedRuleContext(AssignmentExpressionContext, i);\n      }\n    });\n    _defineProperty(_this24, \"Comma\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Comma);\n      } else {\n        return this.getToken(CParser.Comma, i);\n      }\n    });\n    _this24.parser = parser;\n    _this24.ruleIndex = CParser.RULE_expression;\n    return _this24;\n  }\n  _inherits(ExpressionContext, _antlr4$ParserRuleCon23);\n  return _createClass(ExpressionContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar ConstantExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon24) {\n  function ConstantExpressionContext(parser, parent, invokingState) {\n    var _this25;\n    _classCallCheck(this, ConstantExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this25 = _callSuper(this, ConstantExpressionContext, [parent, invokingState]);\n    _this25.parser = parser;\n    _this25.ruleIndex = CParser.RULE_constantExpression;\n    return _this25;\n  }\n  _inherits(ConstantExpressionContext, _antlr4$ParserRuleCon24);\n  return _createClass(ConstantExpressionContext, [{\n    key: \"conditionalExpression\",\n    value: function conditionalExpression() {\n      return this.getTypedRuleContext(ConditionalExpressionContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterConstantExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitConstantExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitConstantExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar DeclarationContext = /*#__PURE__*/function (_antlr4$ParserRuleCon25) {\n  function DeclarationContext(parser, parent, invokingState) {\n    var _this26;\n    _classCallCheck(this, DeclarationContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this26 = _callSuper(this, DeclarationContext, [parent, invokingState]);\n    _this26.parser = parser;\n    _this26.ruleIndex = CParser.RULE_declaration;\n    return _this26;\n  }\n  _inherits(DeclarationContext, _antlr4$ParserRuleCon25);\n  return _createClass(DeclarationContext, [{\n    key: \"declarationSpecifiers\",\n    value: function declarationSpecifiers() {\n      return this.getTypedRuleContext(DeclarationSpecifiersContext, 0);\n    }\n  }, {\n    key: \"Semi\",\n    value: function Semi() {\n      return this.getToken(CParser.Semi, 0);\n    }\n  }, {\n    key: \"initDeclaratorList\",\n    value: function initDeclaratorList() {\n      return this.getTypedRuleContext(InitDeclaratorListContext, 0);\n    }\n  }, {\n    key: \"staticAssertDeclaration\",\n    value: function staticAssertDeclaration() {\n      return this.getTypedRuleContext(StaticAssertDeclarationContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterDeclaration(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitDeclaration(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitDeclaration(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar DeclarationSpecifiersContext = /*#__PURE__*/function (_antlr4$ParserRuleCon26) {\n  function DeclarationSpecifiersContext(parser, parent, invokingState) {\n    var _this27;\n    _classCallCheck(this, DeclarationSpecifiersContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this27 = _callSuper(this, DeclarationSpecifiersContext, [parent, invokingState]);\n    _defineProperty(_this27, \"declarationSpecifier\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(DeclarationSpecifierContext);\n      } else {\n        return this.getTypedRuleContext(DeclarationSpecifierContext, i);\n      }\n    });\n    _this27.parser = parser;\n    _this27.ruleIndex = CParser.RULE_declarationSpecifiers;\n    return _this27;\n  }\n  _inherits(DeclarationSpecifiersContext, _antlr4$ParserRuleCon26);\n  return _createClass(DeclarationSpecifiersContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterDeclarationSpecifiers(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitDeclarationSpecifiers(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitDeclarationSpecifiers(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar DeclarationSpecifiers2Context = /*#__PURE__*/function (_antlr4$ParserRuleCon27) {\n  function DeclarationSpecifiers2Context(parser, parent, invokingState) {\n    var _this28;\n    _classCallCheck(this, DeclarationSpecifiers2Context);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this28 = _callSuper(this, DeclarationSpecifiers2Context, [parent, invokingState]);\n    _defineProperty(_this28, \"declarationSpecifier\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(DeclarationSpecifierContext);\n      } else {\n        return this.getTypedRuleContext(DeclarationSpecifierContext, i);\n      }\n    });\n    _this28.parser = parser;\n    _this28.ruleIndex = CParser.RULE_declarationSpecifiers2;\n    return _this28;\n  }\n  _inherits(DeclarationSpecifiers2Context, _antlr4$ParserRuleCon27);\n  return _createClass(DeclarationSpecifiers2Context, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterDeclarationSpecifiers2(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitDeclarationSpecifiers2(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitDeclarationSpecifiers2(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar DeclarationSpecifierContext = /*#__PURE__*/function (_antlr4$ParserRuleCon28) {\n  function DeclarationSpecifierContext(parser, parent, invokingState) {\n    var _this29;\n    _classCallCheck(this, DeclarationSpecifierContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this29 = _callSuper(this, DeclarationSpecifierContext, [parent, invokingState]);\n    _this29.parser = parser;\n    _this29.ruleIndex = CParser.RULE_declarationSpecifier;\n    return _this29;\n  }\n  _inherits(DeclarationSpecifierContext, _antlr4$ParserRuleCon28);\n  return _createClass(DeclarationSpecifierContext, [{\n    key: \"storageClassSpecifier\",\n    value: function storageClassSpecifier() {\n      return this.getTypedRuleContext(StorageClassSpecifierContext, 0);\n    }\n  }, {\n    key: \"typeSpecifier\",\n    value: function typeSpecifier() {\n      return this.getTypedRuleContext(TypeSpecifierContext, 0);\n    }\n  }, {\n    key: \"typeQualifier\",\n    value: function typeQualifier() {\n      return this.getTypedRuleContext(TypeQualifierContext, 0);\n    }\n  }, {\n    key: \"functionSpecifier\",\n    value: function functionSpecifier() {\n      return this.getTypedRuleContext(FunctionSpecifierContext, 0);\n    }\n  }, {\n    key: \"alignmentSpecifier\",\n    value: function alignmentSpecifier() {\n      return this.getTypedRuleContext(AlignmentSpecifierContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterDeclarationSpecifier(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitDeclarationSpecifier(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitDeclarationSpecifier(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar InitDeclaratorListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon29) {\n  function InitDeclaratorListContext(parser, parent, invokingState) {\n    var _this30;\n    _classCallCheck(this, InitDeclaratorListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this30 = _callSuper(this, InitDeclaratorListContext, [parent, invokingState]);\n    _defineProperty(_this30, \"initDeclarator\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(InitDeclaratorContext);\n      } else {\n        return this.getTypedRuleContext(InitDeclaratorContext, i);\n      }\n    });\n    _defineProperty(_this30, \"Comma\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Comma);\n      } else {\n        return this.getToken(CParser.Comma, i);\n      }\n    });\n    _this30.parser = parser;\n    _this30.ruleIndex = CParser.RULE_initDeclaratorList;\n    return _this30;\n  }\n  _inherits(InitDeclaratorListContext, _antlr4$ParserRuleCon29);\n  return _createClass(InitDeclaratorListContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterInitDeclaratorList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitInitDeclaratorList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitInitDeclaratorList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar InitDeclaratorContext = /*#__PURE__*/function (_antlr4$ParserRuleCon30) {\n  function InitDeclaratorContext(parser, parent, invokingState) {\n    var _this31;\n    _classCallCheck(this, InitDeclaratorContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this31 = _callSuper(this, InitDeclaratorContext, [parent, invokingState]);\n    _this31.parser = parser;\n    _this31.ruleIndex = CParser.RULE_initDeclarator;\n    return _this31;\n  }\n  _inherits(InitDeclaratorContext, _antlr4$ParserRuleCon30);\n  return _createClass(InitDeclaratorContext, [{\n    key: \"declarator\",\n    value: function declarator() {\n      return this.getTypedRuleContext(DeclaratorContext, 0);\n    }\n  }, {\n    key: \"Assign\",\n    value: function Assign() {\n      return this.getToken(CParser.Assign, 0);\n    }\n  }, {\n    key: \"initializer\",\n    value: function initializer() {\n      return this.getTypedRuleContext(InitializerContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterInitDeclarator(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitInitDeclarator(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitInitDeclarator(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar StorageClassSpecifierContext = /*#__PURE__*/function (_antlr4$ParserRuleCon31) {\n  function StorageClassSpecifierContext(parser, parent, invokingState) {\n    var _this32;\n    _classCallCheck(this, StorageClassSpecifierContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this32 = _callSuper(this, StorageClassSpecifierContext, [parent, invokingState]);\n    _this32.parser = parser;\n    _this32.ruleIndex = CParser.RULE_storageClassSpecifier;\n    return _this32;\n  }\n  _inherits(StorageClassSpecifierContext, _antlr4$ParserRuleCon31);\n  return _createClass(StorageClassSpecifierContext, [{\n    key: \"Typedef\",\n    value: function Typedef() {\n      return this.getToken(CParser.Typedef, 0);\n    }\n  }, {\n    key: \"Extern\",\n    value: function Extern() {\n      return this.getToken(CParser.Extern, 0);\n    }\n  }, {\n    key: \"Static\",\n    value: function Static() {\n      return this.getToken(CParser.Static, 0);\n    }\n  }, {\n    key: \"ThreadLocal\",\n    value: function ThreadLocal() {\n      return this.getToken(CParser.ThreadLocal, 0);\n    }\n  }, {\n    key: \"Auto\",\n    value: function Auto() {\n      return this.getToken(CParser.Auto, 0);\n    }\n  }, {\n    key: \"Register\",\n    value: function Register() {\n      return this.getToken(CParser.Register, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterStorageClassSpecifier(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitStorageClassSpecifier(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitStorageClassSpecifier(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar TypeSpecifierContext = /*#__PURE__*/function (_antlr4$ParserRuleCon32) {\n  function TypeSpecifierContext(parser, parent, invokingState) {\n    var _this33;\n    _classCallCheck(this, TypeSpecifierContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this33 = _callSuper(this, TypeSpecifierContext, [parent, invokingState]);\n    _this33.parser = parser;\n    _this33.ruleIndex = CParser.RULE_typeSpecifier;\n    return _this33;\n  }\n  _inherits(TypeSpecifierContext, _antlr4$ParserRuleCon32);\n  return _createClass(TypeSpecifierContext, [{\n    key: \"Void\",\n    value: function Void() {\n      return this.getToken(CParser.Void, 0);\n    }\n  }, {\n    key: \"Char\",\n    value: function Char() {\n      return this.getToken(CParser.Char, 0);\n    }\n  }, {\n    key: \"Short\",\n    value: function Short() {\n      return this.getToken(CParser.Short, 0);\n    }\n  }, {\n    key: \"Int\",\n    value: function Int() {\n      return this.getToken(CParser.Int, 0);\n    }\n  }, {\n    key: \"Long\",\n    value: function Long() {\n      return this.getToken(CParser.Long, 0);\n    }\n  }, {\n    key: \"Float\",\n    value: function Float() {\n      return this.getToken(CParser.Float, 0);\n    }\n  }, {\n    key: \"Double\",\n    value: function Double() {\n      return this.getToken(CParser.Double, 0);\n    }\n  }, {\n    key: \"Signed\",\n    value: function Signed() {\n      return this.getToken(CParser.Signed, 0);\n    }\n  }, {\n    key: \"Unsigned\",\n    value: function Unsigned() {\n      return this.getToken(CParser.Unsigned, 0);\n    }\n  }, {\n    key: \"Bool\",\n    value: function Bool() {\n      return this.getToken(CParser.Bool, 0);\n    }\n  }, {\n    key: \"Complex\",\n    value: function Complex() {\n      return this.getToken(CParser.Complex, 0);\n    }\n  }, {\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"atomicTypeSpecifier\",\n    value: function atomicTypeSpecifier() {\n      return this.getTypedRuleContext(AtomicTypeSpecifierContext, 0);\n    }\n  }, {\n    key: \"structOrUnionSpecifier\",\n    value: function structOrUnionSpecifier() {\n      return this.getTypedRuleContext(StructOrUnionSpecifierContext, 0);\n    }\n  }, {\n    key: \"enumSpecifier\",\n    value: function enumSpecifier() {\n      return this.getTypedRuleContext(EnumSpecifierContext, 0);\n    }\n  }, {\n    key: \"typedefName\",\n    value: function typedefName() {\n      return this.getTypedRuleContext(TypedefNameContext, 0);\n    }\n  }, {\n    key: \"constantExpression\",\n    value: function constantExpression() {\n      return this.getTypedRuleContext(ConstantExpressionContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterTypeSpecifier(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitTypeSpecifier(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitTypeSpecifier(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar StructOrUnionSpecifierContext = /*#__PURE__*/function (_antlr4$ParserRuleCon33) {\n  function StructOrUnionSpecifierContext(parser, parent, invokingState) {\n    var _this34;\n    _classCallCheck(this, StructOrUnionSpecifierContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this34 = _callSuper(this, StructOrUnionSpecifierContext, [parent, invokingState]);\n    _this34.parser = parser;\n    _this34.ruleIndex = CParser.RULE_structOrUnionSpecifier;\n    return _this34;\n  }\n  _inherits(StructOrUnionSpecifierContext, _antlr4$ParserRuleCon33);\n  return _createClass(StructOrUnionSpecifierContext, [{\n    key: \"structOrUnion\",\n    value: function structOrUnion() {\n      return this.getTypedRuleContext(StructOrUnionContext, 0);\n    }\n  }, {\n    key: \"LeftBrace\",\n    value: function LeftBrace() {\n      return this.getToken(CParser.LeftBrace, 0);\n    }\n  }, {\n    key: \"structDeclarationList\",\n    value: function structDeclarationList() {\n      return this.getTypedRuleContext(StructDeclarationListContext, 0);\n    }\n  }, {\n    key: \"RightBrace\",\n    value: function RightBrace() {\n      return this.getToken(CParser.RightBrace, 0);\n    }\n  }, {\n    key: \"Identifier\",\n    value: function Identifier() {\n      return this.getToken(CParser.Identifier, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterStructOrUnionSpecifier(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitStructOrUnionSpecifier(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitStructOrUnionSpecifier(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar StructOrUnionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon34) {\n  function StructOrUnionContext(parser, parent, invokingState) {\n    var _this35;\n    _classCallCheck(this, StructOrUnionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this35 = _callSuper(this, StructOrUnionContext, [parent, invokingState]);\n    _this35.parser = parser;\n    _this35.ruleIndex = CParser.RULE_structOrUnion;\n    return _this35;\n  }\n  _inherits(StructOrUnionContext, _antlr4$ParserRuleCon34);\n  return _createClass(StructOrUnionContext, [{\n    key: \"Struct\",\n    value: function Struct() {\n      return this.getToken(CParser.Struct, 0);\n    }\n  }, {\n    key: \"Union\",\n    value: function Union() {\n      return this.getToken(CParser.Union, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterStructOrUnion(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitStructOrUnion(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitStructOrUnion(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar StructDeclarationListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon35) {\n  function StructDeclarationListContext(parser, parent, invokingState) {\n    var _this36;\n    _classCallCheck(this, StructDeclarationListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this36 = _callSuper(this, StructDeclarationListContext, [parent, invokingState]);\n    _defineProperty(_this36, \"structDeclaration\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(StructDeclarationContext);\n      } else {\n        return this.getTypedRuleContext(StructDeclarationContext, i);\n      }\n    });\n    _this36.parser = parser;\n    _this36.ruleIndex = CParser.RULE_structDeclarationList;\n    return _this36;\n  }\n  _inherits(StructDeclarationListContext, _antlr4$ParserRuleCon35);\n  return _createClass(StructDeclarationListContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterStructDeclarationList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitStructDeclarationList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitStructDeclarationList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar StructDeclarationContext = /*#__PURE__*/function (_antlr4$ParserRuleCon36) {\n  function StructDeclarationContext(parser, parent, invokingState) {\n    var _this37;\n    _classCallCheck(this, StructDeclarationContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this37 = _callSuper(this, StructDeclarationContext, [parent, invokingState]);\n    _this37.parser = parser;\n    _this37.ruleIndex = CParser.RULE_structDeclaration;\n    return _this37;\n  }\n  _inherits(StructDeclarationContext, _antlr4$ParserRuleCon36);\n  return _createClass(StructDeclarationContext, [{\n    key: \"specifierQualifierList\",\n    value: function specifierQualifierList() {\n      return this.getTypedRuleContext(SpecifierQualifierListContext, 0);\n    }\n  }, {\n    key: \"structDeclaratorList\",\n    value: function structDeclaratorList() {\n      return this.getTypedRuleContext(StructDeclaratorListContext, 0);\n    }\n  }, {\n    key: \"Semi\",\n    value: function Semi() {\n      return this.getToken(CParser.Semi, 0);\n    }\n  }, {\n    key: \"staticAssertDeclaration\",\n    value: function staticAssertDeclaration() {\n      return this.getTypedRuleContext(StaticAssertDeclarationContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterStructDeclaration(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitStructDeclaration(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitStructDeclaration(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar SpecifierQualifierListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon37) {\n  function SpecifierQualifierListContext(parser, parent, invokingState) {\n    var _this38;\n    _classCallCheck(this, SpecifierQualifierListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this38 = _callSuper(this, SpecifierQualifierListContext, [parent, invokingState]);\n    _this38.parser = parser;\n    _this38.ruleIndex = CParser.RULE_specifierQualifierList;\n    return _this38;\n  }\n  _inherits(SpecifierQualifierListContext, _antlr4$ParserRuleCon37);\n  return _createClass(SpecifierQualifierListContext, [{\n    key: \"typeSpecifier\",\n    value: function typeSpecifier() {\n      return this.getTypedRuleContext(TypeSpecifierContext, 0);\n    }\n  }, {\n    key: \"typeQualifier\",\n    value: function typeQualifier() {\n      return this.getTypedRuleContext(TypeQualifierContext, 0);\n    }\n  }, {\n    key: \"specifierQualifierList\",\n    value: function specifierQualifierList() {\n      return this.getTypedRuleContext(SpecifierQualifierListContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterSpecifierQualifierList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitSpecifierQualifierList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitSpecifierQualifierList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar StructDeclaratorListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon38) {\n  function StructDeclaratorListContext(parser, parent, invokingState) {\n    var _this39;\n    _classCallCheck(this, StructDeclaratorListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this39 = _callSuper(this, StructDeclaratorListContext, [parent, invokingState]);\n    _defineProperty(_this39, \"structDeclarator\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(StructDeclaratorContext);\n      } else {\n        return this.getTypedRuleContext(StructDeclaratorContext, i);\n      }\n    });\n    _defineProperty(_this39, \"Comma\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Comma);\n      } else {\n        return this.getToken(CParser.Comma, i);\n      }\n    });\n    _this39.parser = parser;\n    _this39.ruleIndex = CParser.RULE_structDeclaratorList;\n    return _this39;\n  }\n  _inherits(StructDeclaratorListContext, _antlr4$ParserRuleCon38);\n  return _createClass(StructDeclaratorListContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterStructDeclaratorList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitStructDeclaratorList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitStructDeclaratorList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar StructDeclaratorContext = /*#__PURE__*/function (_antlr4$ParserRuleCon39) {\n  function StructDeclaratorContext(parser, parent, invokingState) {\n    var _this40;\n    _classCallCheck(this, StructDeclaratorContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this40 = _callSuper(this, StructDeclaratorContext, [parent, invokingState]);\n    _this40.parser = parser;\n    _this40.ruleIndex = CParser.RULE_structDeclarator;\n    return _this40;\n  }\n  _inherits(StructDeclaratorContext, _antlr4$ParserRuleCon39);\n  return _createClass(StructDeclaratorContext, [{\n    key: \"declarator\",\n    value: function declarator() {\n      return this.getTypedRuleContext(DeclaratorContext, 0);\n    }\n  }, {\n    key: \"Colon\",\n    value: function Colon() {\n      return this.getToken(CParser.Colon, 0);\n    }\n  }, {\n    key: \"constantExpression\",\n    value: function constantExpression() {\n      return this.getTypedRuleContext(ConstantExpressionContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterStructDeclarator(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitStructDeclarator(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitStructDeclarator(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar EnumSpecifierContext = /*#__PURE__*/function (_antlr4$ParserRuleCon40) {\n  function EnumSpecifierContext(parser, parent, invokingState) {\n    var _this41;\n    _classCallCheck(this, EnumSpecifierContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this41 = _callSuper(this, EnumSpecifierContext, [parent, invokingState]);\n    _this41.parser = parser;\n    _this41.ruleIndex = CParser.RULE_enumSpecifier;\n    return _this41;\n  }\n  _inherits(EnumSpecifierContext, _antlr4$ParserRuleCon40);\n  return _createClass(EnumSpecifierContext, [{\n    key: \"Enum\",\n    value: function Enum() {\n      return this.getToken(CParser.Enum, 0);\n    }\n  }, {\n    key: \"LeftBrace\",\n    value: function LeftBrace() {\n      return this.getToken(CParser.LeftBrace, 0);\n    }\n  }, {\n    key: \"enumeratorList\",\n    value: function enumeratorList() {\n      return this.getTypedRuleContext(EnumeratorListContext, 0);\n    }\n  }, {\n    key: \"RightBrace\",\n    value: function RightBrace() {\n      return this.getToken(CParser.RightBrace, 0);\n    }\n  }, {\n    key: \"Identifier\",\n    value: function Identifier() {\n      return this.getToken(CParser.Identifier, 0);\n    }\n  }, {\n    key: \"Comma\",\n    value: function Comma() {\n      return this.getToken(CParser.Comma, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterEnumSpecifier(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitEnumSpecifier(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitEnumSpecifier(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar EnumeratorListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon41) {\n  function EnumeratorListContext(parser, parent, invokingState) {\n    var _this42;\n    _classCallCheck(this, EnumeratorListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this42 = _callSuper(this, EnumeratorListContext, [parent, invokingState]);\n    _defineProperty(_this42, \"enumerator\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(EnumeratorContext);\n      } else {\n        return this.getTypedRuleContext(EnumeratorContext, i);\n      }\n    });\n    _defineProperty(_this42, \"Comma\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Comma);\n      } else {\n        return this.getToken(CParser.Comma, i);\n      }\n    });\n    _this42.parser = parser;\n    _this42.ruleIndex = CParser.RULE_enumeratorList;\n    return _this42;\n  }\n  _inherits(EnumeratorListContext, _antlr4$ParserRuleCon41);\n  return _createClass(EnumeratorListContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterEnumeratorList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitEnumeratorList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitEnumeratorList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar EnumeratorContext = /*#__PURE__*/function (_antlr4$ParserRuleCon42) {\n  function EnumeratorContext(parser, parent, invokingState) {\n    var _this43;\n    _classCallCheck(this, EnumeratorContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this43 = _callSuper(this, EnumeratorContext, [parent, invokingState]);\n    _this43.parser = parser;\n    _this43.ruleIndex = CParser.RULE_enumerator;\n    return _this43;\n  }\n  _inherits(EnumeratorContext, _antlr4$ParserRuleCon42);\n  return _createClass(EnumeratorContext, [{\n    key: \"enumerationConstant\",\n    value: function enumerationConstant() {\n      return this.getTypedRuleContext(EnumerationConstantContext, 0);\n    }\n  }, {\n    key: \"Assign\",\n    value: function Assign() {\n      return this.getToken(CParser.Assign, 0);\n    }\n  }, {\n    key: \"constantExpression\",\n    value: function constantExpression() {\n      return this.getTypedRuleContext(ConstantExpressionContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterEnumerator(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitEnumerator(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitEnumerator(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar EnumerationConstantContext = /*#__PURE__*/function (_antlr4$ParserRuleCon43) {\n  function EnumerationConstantContext(parser, parent, invokingState) {\n    var _this44;\n    _classCallCheck(this, EnumerationConstantContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this44 = _callSuper(this, EnumerationConstantContext, [parent, invokingState]);\n    _this44.parser = parser;\n    _this44.ruleIndex = CParser.RULE_enumerationConstant;\n    return _this44;\n  }\n  _inherits(EnumerationConstantContext, _antlr4$ParserRuleCon43);\n  return _createClass(EnumerationConstantContext, [{\n    key: \"Identifier\",\n    value: function Identifier() {\n      return this.getToken(CParser.Identifier, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterEnumerationConstant(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitEnumerationConstant(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitEnumerationConstant(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar AtomicTypeSpecifierContext = /*#__PURE__*/function (_antlr4$ParserRuleCon44) {\n  function AtomicTypeSpecifierContext(parser, parent, invokingState) {\n    var _this45;\n    _classCallCheck(this, AtomicTypeSpecifierContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this45 = _callSuper(this, AtomicTypeSpecifierContext, [parent, invokingState]);\n    _this45.parser = parser;\n    _this45.ruleIndex = CParser.RULE_atomicTypeSpecifier;\n    return _this45;\n  }\n  _inherits(AtomicTypeSpecifierContext, _antlr4$ParserRuleCon44);\n  return _createClass(AtomicTypeSpecifierContext, [{\n    key: \"Atomic\",\n    value: function Atomic() {\n      return this.getToken(CParser.Atomic, 0);\n    }\n  }, {\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"typeName\",\n    value: function typeName() {\n      return this.getTypedRuleContext(TypeNameContext, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterAtomicTypeSpecifier(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitAtomicTypeSpecifier(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitAtomicTypeSpecifier(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar TypeQualifierContext = /*#__PURE__*/function (_antlr4$ParserRuleCon45) {\n  function TypeQualifierContext(parser, parent, invokingState) {\n    var _this46;\n    _classCallCheck(this, TypeQualifierContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this46 = _callSuper(this, TypeQualifierContext, [parent, invokingState]);\n    _this46.parser = parser;\n    _this46.ruleIndex = CParser.RULE_typeQualifier;\n    return _this46;\n  }\n  _inherits(TypeQualifierContext, _antlr4$ParserRuleCon45);\n  return _createClass(TypeQualifierContext, [{\n    key: \"Const\",\n    value: function Const() {\n      return this.getToken(CParser.Const, 0);\n    }\n  }, {\n    key: \"Restrict\",\n    value: function Restrict() {\n      return this.getToken(CParser.Restrict, 0);\n    }\n  }, {\n    key: \"Volatile\",\n    value: function Volatile() {\n      return this.getToken(CParser.Volatile, 0);\n    }\n  }, {\n    key: \"Atomic\",\n    value: function Atomic() {\n      return this.getToken(CParser.Atomic, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterTypeQualifier(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitTypeQualifier(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitTypeQualifier(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar FunctionSpecifierContext = /*#__PURE__*/function (_antlr4$ParserRuleCon46) {\n  function FunctionSpecifierContext(parser, parent, invokingState) {\n    var _this47;\n    _classCallCheck(this, FunctionSpecifierContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this47 = _callSuper(this, FunctionSpecifierContext, [parent, invokingState]);\n    _this47.parser = parser;\n    _this47.ruleIndex = CParser.RULE_functionSpecifier;\n    return _this47;\n  }\n  _inherits(FunctionSpecifierContext, _antlr4$ParserRuleCon46);\n  return _createClass(FunctionSpecifierContext, [{\n    key: \"Inline\",\n    value: function Inline() {\n      return this.getToken(CParser.Inline, 0);\n    }\n  }, {\n    key: \"Noreturn\",\n    value: function Noreturn() {\n      return this.getToken(CParser.Noreturn, 0);\n    }\n  }, {\n    key: \"gccAttributeSpecifier\",\n    value: function gccAttributeSpecifier() {\n      return this.getTypedRuleContext(GccAttributeSpecifierContext, 0);\n    }\n  }, {\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"Identifier\",\n    value: function Identifier() {\n      return this.getToken(CParser.Identifier, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterFunctionSpecifier(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitFunctionSpecifier(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitFunctionSpecifier(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar AlignmentSpecifierContext = /*#__PURE__*/function (_antlr4$ParserRuleCon47) {\n  function AlignmentSpecifierContext(parser, parent, invokingState) {\n    var _this48;\n    _classCallCheck(this, AlignmentSpecifierContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this48 = _callSuper(this, AlignmentSpecifierContext, [parent, invokingState]);\n    _this48.parser = parser;\n    _this48.ruleIndex = CParser.RULE_alignmentSpecifier;\n    return _this48;\n  }\n  _inherits(AlignmentSpecifierContext, _antlr4$ParserRuleCon47);\n  return _createClass(AlignmentSpecifierContext, [{\n    key: \"Alignas\",\n    value: function Alignas() {\n      return this.getToken(CParser.Alignas, 0);\n    }\n  }, {\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"typeName\",\n    value: function typeName() {\n      return this.getTypedRuleContext(TypeNameContext, 0);\n    }\n  }, {\n    key: \"constantExpression\",\n    value: function constantExpression() {\n      return this.getTypedRuleContext(ConstantExpressionContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterAlignmentSpecifier(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitAlignmentSpecifier(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitAlignmentSpecifier(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar DeclaratorContext = /*#__PURE__*/function (_antlr4$ParserRuleCon48) {\n  function DeclaratorContext(parser, parent, invokingState) {\n    var _this49;\n    _classCallCheck(this, DeclaratorContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this49 = _callSuper(this, DeclaratorContext, [parent, invokingState]);\n    _defineProperty(_this49, \"gccDeclaratorExtension\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(GccDeclaratorExtensionContext);\n      } else {\n        return this.getTypedRuleContext(GccDeclaratorExtensionContext, i);\n      }\n    });\n    _this49.parser = parser;\n    _this49.ruleIndex = CParser.RULE_declarator;\n    return _this49;\n  }\n  _inherits(DeclaratorContext, _antlr4$ParserRuleCon48);\n  return _createClass(DeclaratorContext, [{\n    key: \"directDeclarator\",\n    value: function directDeclarator() {\n      return this.getTypedRuleContext(DirectDeclaratorContext, 0);\n    }\n  }, {\n    key: \"pointer\",\n    value: function pointer() {\n      return this.getTypedRuleContext(PointerContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterDeclarator(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitDeclarator(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitDeclarator(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar DirectDeclaratorContext = /*#__PURE__*/function (_antlr4$ParserRuleCon49) {\n  function DirectDeclaratorContext(parser, parent, invokingState) {\n    var _this50;\n    _classCallCheck(this, DirectDeclaratorContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this50 = _callSuper(this, DirectDeclaratorContext, [parent, invokingState]);\n    _this50.parser = parser;\n    _this50.ruleIndex = CParser.RULE_directDeclarator;\n    return _this50;\n  }\n  _inherits(DirectDeclaratorContext, _antlr4$ParserRuleCon49);\n  return _createClass(DirectDeclaratorContext, [{\n    key: \"Identifier\",\n    value: function Identifier() {\n      return this.getToken(CParser.Identifier, 0);\n    }\n  }, {\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"declarator\",\n    value: function declarator() {\n      return this.getTypedRuleContext(DeclaratorContext, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"Colon\",\n    value: function Colon() {\n      return this.getToken(CParser.Colon, 0);\n    }\n  }, {\n    key: \"DigitSequence\",\n    value: function DigitSequence() {\n      return this.getToken(CParser.DigitSequence, 0);\n    }\n  }, {\n    key: \"vcSpecificModifer\",\n    value: function vcSpecificModifer() {\n      return this.getTypedRuleContext(VcSpecificModiferContext, 0);\n    }\n  }, {\n    key: \"directDeclarator\",\n    value: function directDeclarator() {\n      return this.getTypedRuleContext(DirectDeclaratorContext, 0);\n    }\n  }, {\n    key: \"LeftBracket\",\n    value: function LeftBracket() {\n      return this.getToken(CParser.LeftBracket, 0);\n    }\n  }, {\n    key: \"RightBracket\",\n    value: function RightBracket() {\n      return this.getToken(CParser.RightBracket, 0);\n    }\n  }, {\n    key: \"typeQualifierList\",\n    value: function typeQualifierList() {\n      return this.getTypedRuleContext(TypeQualifierListContext, 0);\n    }\n  }, {\n    key: \"assignmentExpression\",\n    value: function assignmentExpression() {\n      return this.getTypedRuleContext(AssignmentExpressionContext, 0);\n    }\n  }, {\n    key: \"Static\",\n    value: function Static() {\n      return this.getToken(CParser.Static, 0);\n    }\n  }, {\n    key: \"Star\",\n    value: function Star() {\n      return this.getToken(CParser.Star, 0);\n    }\n  }, {\n    key: \"parameterTypeList\",\n    value: function parameterTypeList() {\n      return this.getTypedRuleContext(ParameterTypeListContext, 0);\n    }\n  }, {\n    key: \"identifierList\",\n    value: function identifierList() {\n      return this.getTypedRuleContext(IdentifierListContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterDirectDeclarator(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitDirectDeclarator(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitDirectDeclarator(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar VcSpecificModiferContext = /*#__PURE__*/function (_antlr4$ParserRuleCon50) {\n  function VcSpecificModiferContext(parser, parent, invokingState) {\n    var _this51;\n    _classCallCheck(this, VcSpecificModiferContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this51 = _callSuper(this, VcSpecificModiferContext, [parent, invokingState]);\n    _this51.parser = parser;\n    _this51.ruleIndex = CParser.RULE_vcSpecificModifer;\n    return _this51;\n  }\n  _inherits(VcSpecificModiferContext, _antlr4$ParserRuleCon50);\n  return _createClass(VcSpecificModiferContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterVcSpecificModifer(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitVcSpecificModifer(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitVcSpecificModifer(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar GccDeclaratorExtensionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon51) {\n  function GccDeclaratorExtensionContext(parser, parent, invokingState) {\n    var _this52;\n    _classCallCheck(this, GccDeclaratorExtensionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this52 = _callSuper(this, GccDeclaratorExtensionContext, [parent, invokingState]);\n    _defineProperty(_this52, \"StringLiteral\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.StringLiteral);\n      } else {\n        return this.getToken(CParser.StringLiteral, i);\n      }\n    });\n    _this52.parser = parser;\n    _this52.ruleIndex = CParser.RULE_gccDeclaratorExtension;\n    return _this52;\n  }\n  _inherits(GccDeclaratorExtensionContext, _antlr4$ParserRuleCon51);\n  return _createClass(GccDeclaratorExtensionContext, [{\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"gccAttributeSpecifier\",\n    value: function gccAttributeSpecifier() {\n      return this.getTypedRuleContext(GccAttributeSpecifierContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterGccDeclaratorExtension(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitGccDeclaratorExtension(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitGccDeclaratorExtension(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar GccAttributeSpecifierContext = /*#__PURE__*/function (_antlr4$ParserRuleCon52) {\n  function GccAttributeSpecifierContext(parser, parent, invokingState) {\n    var _this53;\n    _classCallCheck(this, GccAttributeSpecifierContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this53 = _callSuper(this, GccAttributeSpecifierContext, [parent, invokingState]);\n    _defineProperty(_this53, \"LeftParen\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.LeftParen);\n      } else {\n        return this.getToken(CParser.LeftParen, i);\n      }\n    });\n    _defineProperty(_this53, \"RightParen\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.RightParen);\n      } else {\n        return this.getToken(CParser.RightParen, i);\n      }\n    });\n    _this53.parser = parser;\n    _this53.ruleIndex = CParser.RULE_gccAttributeSpecifier;\n    return _this53;\n  }\n  _inherits(GccAttributeSpecifierContext, _antlr4$ParserRuleCon52);\n  return _createClass(GccAttributeSpecifierContext, [{\n    key: \"gccAttributeList\",\n    value: function gccAttributeList() {\n      return this.getTypedRuleContext(GccAttributeListContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterGccAttributeSpecifier(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitGccAttributeSpecifier(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitGccAttributeSpecifier(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar GccAttributeListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon53) {\n  function GccAttributeListContext(parser, parent, invokingState) {\n    var _this54;\n    _classCallCheck(this, GccAttributeListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this54 = _callSuper(this, GccAttributeListContext, [parent, invokingState]);\n    _defineProperty(_this54, \"gccAttribute\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(GccAttributeContext);\n      } else {\n        return this.getTypedRuleContext(GccAttributeContext, i);\n      }\n    });\n    _defineProperty(_this54, \"Comma\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Comma);\n      } else {\n        return this.getToken(CParser.Comma, i);\n      }\n    });\n    _this54.parser = parser;\n    _this54.ruleIndex = CParser.RULE_gccAttributeList;\n    return _this54;\n  }\n  _inherits(GccAttributeListContext, _antlr4$ParserRuleCon53);\n  return _createClass(GccAttributeListContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterGccAttributeList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitGccAttributeList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitGccAttributeList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar GccAttributeContext = /*#__PURE__*/function (_antlr4$ParserRuleCon54) {\n  function GccAttributeContext(parser, parent, invokingState) {\n    var _this55;\n    _classCallCheck(this, GccAttributeContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this55 = _callSuper(this, GccAttributeContext, [parent, invokingState]);\n    _defineProperty(_this55, \"LeftParen\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.LeftParen);\n      } else {\n        return this.getToken(CParser.LeftParen, i);\n      }\n    });\n    _defineProperty(_this55, \"RightParen\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.RightParen);\n      } else {\n        return this.getToken(CParser.RightParen, i);\n      }\n    });\n    _this55.parser = parser;\n    _this55.ruleIndex = CParser.RULE_gccAttribute;\n    return _this55;\n  }\n  _inherits(GccAttributeContext, _antlr4$ParserRuleCon54);\n  return _createClass(GccAttributeContext, [{\n    key: \"Comma\",\n    value: function Comma() {\n      return this.getToken(CParser.Comma, 0);\n    }\n  }, {\n    key: \"argumentExpressionList\",\n    value: function argumentExpressionList() {\n      return this.getTypedRuleContext(ArgumentExpressionListContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterGccAttribute(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitGccAttribute(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitGccAttribute(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar NestedParenthesesBlockContext = /*#__PURE__*/function (_antlr4$ParserRuleCon55) {\n  function NestedParenthesesBlockContext(parser, parent, invokingState) {\n    var _this56;\n    _classCallCheck(this, NestedParenthesesBlockContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this56 = _callSuper(this, NestedParenthesesBlockContext, [parent, invokingState]);\n    _defineProperty(_this56, \"LeftParen\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.LeftParen);\n      } else {\n        return this.getToken(CParser.LeftParen, i);\n      }\n    });\n    _defineProperty(_this56, \"nestedParenthesesBlock\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(NestedParenthesesBlockContext);\n      } else {\n        return this.getTypedRuleContext(NestedParenthesesBlockContext, i);\n      }\n    });\n    _defineProperty(_this56, \"RightParen\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.RightParen);\n      } else {\n        return this.getToken(CParser.RightParen, i);\n      }\n    });\n    _this56.parser = parser;\n    _this56.ruleIndex = CParser.RULE_nestedParenthesesBlock;\n    return _this56;\n  }\n  _inherits(NestedParenthesesBlockContext, _antlr4$ParserRuleCon55);\n  return _createClass(NestedParenthesesBlockContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterNestedParenthesesBlock(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitNestedParenthesesBlock(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitNestedParenthesesBlock(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar PointerContext = /*#__PURE__*/function (_antlr4$ParserRuleCon56) {\n  function PointerContext(parser, parent, invokingState) {\n    var _this57;\n    _classCallCheck(this, PointerContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this57 = _callSuper(this, PointerContext, [parent, invokingState]);\n    _defineProperty(_this57, \"Star\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Star);\n      } else {\n        return this.getToken(CParser.Star, i);\n      }\n    });\n    _defineProperty(_this57, \"Caret\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Caret);\n      } else {\n        return this.getToken(CParser.Caret, i);\n      }\n    });\n    _defineProperty(_this57, \"typeQualifierList\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(TypeQualifierListContext);\n      } else {\n        return this.getTypedRuleContext(TypeQualifierListContext, i);\n      }\n    });\n    _this57.parser = parser;\n    _this57.ruleIndex = CParser.RULE_pointer;\n    return _this57;\n  }\n  _inherits(PointerContext, _antlr4$ParserRuleCon56);\n  return _createClass(PointerContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterPointer(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitPointer(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitPointer(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar TypeQualifierListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon57) {\n  function TypeQualifierListContext(parser, parent, invokingState) {\n    var _this58;\n    _classCallCheck(this, TypeQualifierListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this58 = _callSuper(this, TypeQualifierListContext, [parent, invokingState]);\n    _defineProperty(_this58, \"typeQualifier\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(TypeQualifierContext);\n      } else {\n        return this.getTypedRuleContext(TypeQualifierContext, i);\n      }\n    });\n    _this58.parser = parser;\n    _this58.ruleIndex = CParser.RULE_typeQualifierList;\n    return _this58;\n  }\n  _inherits(TypeQualifierListContext, _antlr4$ParserRuleCon57);\n  return _createClass(TypeQualifierListContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterTypeQualifierList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitTypeQualifierList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitTypeQualifierList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar ParameterTypeListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon58) {\n  function ParameterTypeListContext(parser, parent, invokingState) {\n    var _this59;\n    _classCallCheck(this, ParameterTypeListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this59 = _callSuper(this, ParameterTypeListContext, [parent, invokingState]);\n    _this59.parser = parser;\n    _this59.ruleIndex = CParser.RULE_parameterTypeList;\n    return _this59;\n  }\n  _inherits(ParameterTypeListContext, _antlr4$ParserRuleCon58);\n  return _createClass(ParameterTypeListContext, [{\n    key: \"parameterList\",\n    value: function parameterList() {\n      return this.getTypedRuleContext(ParameterListContext, 0);\n    }\n  }, {\n    key: \"Comma\",\n    value: function Comma() {\n      return this.getToken(CParser.Comma, 0);\n    }\n  }, {\n    key: \"Ellipsis\",\n    value: function Ellipsis() {\n      return this.getToken(CParser.Ellipsis, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterParameterTypeList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitParameterTypeList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitParameterTypeList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar ParameterListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon59) {\n  function ParameterListContext(parser, parent, invokingState) {\n    var _this60;\n    _classCallCheck(this, ParameterListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this60 = _callSuper(this, ParameterListContext, [parent, invokingState]);\n    _defineProperty(_this60, \"parameterDeclaration\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(ParameterDeclarationContext);\n      } else {\n        return this.getTypedRuleContext(ParameterDeclarationContext, i);\n      }\n    });\n    _defineProperty(_this60, \"Comma\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Comma);\n      } else {\n        return this.getToken(CParser.Comma, i);\n      }\n    });\n    _this60.parser = parser;\n    _this60.ruleIndex = CParser.RULE_parameterList;\n    return _this60;\n  }\n  _inherits(ParameterListContext, _antlr4$ParserRuleCon59);\n  return _createClass(ParameterListContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterParameterList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitParameterList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitParameterList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar ParameterDeclarationContext = /*#__PURE__*/function (_antlr4$ParserRuleCon60) {\n  function ParameterDeclarationContext(parser, parent, invokingState) {\n    var _this61;\n    _classCallCheck(this, ParameterDeclarationContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this61 = _callSuper(this, ParameterDeclarationContext, [parent, invokingState]);\n    _this61.parser = parser;\n    _this61.ruleIndex = CParser.RULE_parameterDeclaration;\n    return _this61;\n  }\n  _inherits(ParameterDeclarationContext, _antlr4$ParserRuleCon60);\n  return _createClass(ParameterDeclarationContext, [{\n    key: \"declarationSpecifiers\",\n    value: function declarationSpecifiers() {\n      return this.getTypedRuleContext(DeclarationSpecifiersContext, 0);\n    }\n  }, {\n    key: \"declarator\",\n    value: function declarator() {\n      return this.getTypedRuleContext(DeclaratorContext, 0);\n    }\n  }, {\n    key: \"declarationSpecifiers2\",\n    value: function declarationSpecifiers2() {\n      return this.getTypedRuleContext(DeclarationSpecifiers2Context, 0);\n    }\n  }, {\n    key: \"abstractDeclarator\",\n    value: function abstractDeclarator() {\n      return this.getTypedRuleContext(AbstractDeclaratorContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterParameterDeclaration(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitParameterDeclaration(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitParameterDeclaration(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar IdentifierListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon61) {\n  function IdentifierListContext(parser, parent, invokingState) {\n    var _this62;\n    _classCallCheck(this, IdentifierListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this62 = _callSuper(this, IdentifierListContext, [parent, invokingState]);\n    _defineProperty(_this62, \"Identifier\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Identifier);\n      } else {\n        return this.getToken(CParser.Identifier, i);\n      }\n    });\n    _defineProperty(_this62, \"Comma\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Comma);\n      } else {\n        return this.getToken(CParser.Comma, i);\n      }\n    });\n    _this62.parser = parser;\n    _this62.ruleIndex = CParser.RULE_identifierList;\n    return _this62;\n  }\n  _inherits(IdentifierListContext, _antlr4$ParserRuleCon61);\n  return _createClass(IdentifierListContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterIdentifierList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitIdentifierList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitIdentifierList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar TypeNameContext = /*#__PURE__*/function (_antlr4$ParserRuleCon62) {\n  function TypeNameContext(parser, parent, invokingState) {\n    var _this63;\n    _classCallCheck(this, TypeNameContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this63 = _callSuper(this, TypeNameContext, [parent, invokingState]);\n    _this63.parser = parser;\n    _this63.ruleIndex = CParser.RULE_typeName;\n    return _this63;\n  }\n  _inherits(TypeNameContext, _antlr4$ParserRuleCon62);\n  return _createClass(TypeNameContext, [{\n    key: \"specifierQualifierList\",\n    value: function specifierQualifierList() {\n      return this.getTypedRuleContext(SpecifierQualifierListContext, 0);\n    }\n  }, {\n    key: \"abstractDeclarator\",\n    value: function abstractDeclarator() {\n      return this.getTypedRuleContext(AbstractDeclaratorContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterTypeName(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitTypeName(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitTypeName(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar AbstractDeclaratorContext = /*#__PURE__*/function (_antlr4$ParserRuleCon63) {\n  function AbstractDeclaratorContext(parser, parent, invokingState) {\n    var _this64;\n    _classCallCheck(this, AbstractDeclaratorContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this64 = _callSuper(this, AbstractDeclaratorContext, [parent, invokingState]);\n    _defineProperty(_this64, \"gccDeclaratorExtension\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(GccDeclaratorExtensionContext);\n      } else {\n        return this.getTypedRuleContext(GccDeclaratorExtensionContext, i);\n      }\n    });\n    _this64.parser = parser;\n    _this64.ruleIndex = CParser.RULE_abstractDeclarator;\n    return _this64;\n  }\n  _inherits(AbstractDeclaratorContext, _antlr4$ParserRuleCon63);\n  return _createClass(AbstractDeclaratorContext, [{\n    key: \"pointer\",\n    value: function pointer() {\n      return this.getTypedRuleContext(PointerContext, 0);\n    }\n  }, {\n    key: \"directAbstractDeclarator\",\n    value: function directAbstractDeclarator() {\n      return this.getTypedRuleContext(DirectAbstractDeclaratorContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterAbstractDeclarator(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitAbstractDeclarator(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitAbstractDeclarator(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar DirectAbstractDeclaratorContext = /*#__PURE__*/function (_antlr4$ParserRuleCon64) {\n  function DirectAbstractDeclaratorContext(parser, parent, invokingState) {\n    var _this65;\n    _classCallCheck(this, DirectAbstractDeclaratorContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this65 = _callSuper(this, DirectAbstractDeclaratorContext, [parent, invokingState]);\n    _defineProperty(_this65, \"gccDeclaratorExtension\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(GccDeclaratorExtensionContext);\n      } else {\n        return this.getTypedRuleContext(GccDeclaratorExtensionContext, i);\n      }\n    });\n    _this65.parser = parser;\n    _this65.ruleIndex = CParser.RULE_directAbstractDeclarator;\n    return _this65;\n  }\n  _inherits(DirectAbstractDeclaratorContext, _antlr4$ParserRuleCon64);\n  return _createClass(DirectAbstractDeclaratorContext, [{\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"abstractDeclarator\",\n    value: function abstractDeclarator() {\n      return this.getTypedRuleContext(AbstractDeclaratorContext, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"LeftBracket\",\n    value: function LeftBracket() {\n      return this.getToken(CParser.LeftBracket, 0);\n    }\n  }, {\n    key: \"RightBracket\",\n    value: function RightBracket() {\n      return this.getToken(CParser.RightBracket, 0);\n    }\n  }, {\n    key: \"typeQualifierList\",\n    value: function typeQualifierList() {\n      return this.getTypedRuleContext(TypeQualifierListContext, 0);\n    }\n  }, {\n    key: \"assignmentExpression\",\n    value: function assignmentExpression() {\n      return this.getTypedRuleContext(AssignmentExpressionContext, 0);\n    }\n  }, {\n    key: \"Static\",\n    value: function Static() {\n      return this.getToken(CParser.Static, 0);\n    }\n  }, {\n    key: \"Star\",\n    value: function Star() {\n      return this.getToken(CParser.Star, 0);\n    }\n  }, {\n    key: \"parameterTypeList\",\n    value: function parameterTypeList() {\n      return this.getTypedRuleContext(ParameterTypeListContext, 0);\n    }\n  }, {\n    key: \"directAbstractDeclarator\",\n    value: function directAbstractDeclarator() {\n      return this.getTypedRuleContext(DirectAbstractDeclaratorContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterDirectAbstractDeclarator(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitDirectAbstractDeclarator(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitDirectAbstractDeclarator(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar TypedefNameContext = /*#__PURE__*/function (_antlr4$ParserRuleCon65) {\n  function TypedefNameContext(parser, parent, invokingState) {\n    var _this66;\n    _classCallCheck(this, TypedefNameContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this66 = _callSuper(this, TypedefNameContext, [parent, invokingState]);\n    _this66.parser = parser;\n    _this66.ruleIndex = CParser.RULE_typedefName;\n    return _this66;\n  }\n  _inherits(TypedefNameContext, _antlr4$ParserRuleCon65);\n  return _createClass(TypedefNameContext, [{\n    key: \"Identifier\",\n    value: function Identifier() {\n      return this.getToken(CParser.Identifier, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterTypedefName(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitTypedefName(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitTypedefName(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar InitializerContext = /*#__PURE__*/function (_antlr4$ParserRuleCon66) {\n  function InitializerContext(parser, parent, invokingState) {\n    var _this67;\n    _classCallCheck(this, InitializerContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this67 = _callSuper(this, InitializerContext, [parent, invokingState]);\n    _this67.parser = parser;\n    _this67.ruleIndex = CParser.RULE_initializer;\n    return _this67;\n  }\n  _inherits(InitializerContext, _antlr4$ParserRuleCon66);\n  return _createClass(InitializerContext, [{\n    key: \"assignmentExpression\",\n    value: function assignmentExpression() {\n      return this.getTypedRuleContext(AssignmentExpressionContext, 0);\n    }\n  }, {\n    key: \"LeftBrace\",\n    value: function LeftBrace() {\n      return this.getToken(CParser.LeftBrace, 0);\n    }\n  }, {\n    key: \"initializerList\",\n    value: function initializerList() {\n      return this.getTypedRuleContext(InitializerListContext, 0);\n    }\n  }, {\n    key: \"RightBrace\",\n    value: function RightBrace() {\n      return this.getToken(CParser.RightBrace, 0);\n    }\n  }, {\n    key: \"Comma\",\n    value: function Comma() {\n      return this.getToken(CParser.Comma, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterInitializer(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitInitializer(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitInitializer(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar InitializerListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon67) {\n  function InitializerListContext(parser, parent, invokingState) {\n    var _this68;\n    _classCallCheck(this, InitializerListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this68 = _callSuper(this, InitializerListContext, [parent, invokingState]);\n    _defineProperty(_this68, \"initializer\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(InitializerContext);\n      } else {\n        return this.getTypedRuleContext(InitializerContext, i);\n      }\n    });\n    _defineProperty(_this68, \"designation\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(DesignationContext);\n      } else {\n        return this.getTypedRuleContext(DesignationContext, i);\n      }\n    });\n    _defineProperty(_this68, \"Comma\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Comma);\n      } else {\n        return this.getToken(CParser.Comma, i);\n      }\n    });\n    _this68.parser = parser;\n    _this68.ruleIndex = CParser.RULE_initializerList;\n    return _this68;\n  }\n  _inherits(InitializerListContext, _antlr4$ParserRuleCon67);\n  return _createClass(InitializerListContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterInitializerList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitInitializerList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitInitializerList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar DesignationContext = /*#__PURE__*/function (_antlr4$ParserRuleCon68) {\n  function DesignationContext(parser, parent, invokingState) {\n    var _this69;\n    _classCallCheck(this, DesignationContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this69 = _callSuper(this, DesignationContext, [parent, invokingState]);\n    _this69.parser = parser;\n    _this69.ruleIndex = CParser.RULE_designation;\n    return _this69;\n  }\n  _inherits(DesignationContext, _antlr4$ParserRuleCon68);\n  return _createClass(DesignationContext, [{\n    key: \"designatorList\",\n    value: function designatorList() {\n      return this.getTypedRuleContext(DesignatorListContext, 0);\n    }\n  }, {\n    key: \"Assign\",\n    value: function Assign() {\n      return this.getToken(CParser.Assign, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterDesignation(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitDesignation(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitDesignation(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar DesignatorListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon69) {\n  function DesignatorListContext(parser, parent, invokingState) {\n    var _this70;\n    _classCallCheck(this, DesignatorListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this70 = _callSuper(this, DesignatorListContext, [parent, invokingState]);\n    _defineProperty(_this70, \"designator\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(DesignatorContext);\n      } else {\n        return this.getTypedRuleContext(DesignatorContext, i);\n      }\n    });\n    _this70.parser = parser;\n    _this70.ruleIndex = CParser.RULE_designatorList;\n    return _this70;\n  }\n  _inherits(DesignatorListContext, _antlr4$ParserRuleCon69);\n  return _createClass(DesignatorListContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterDesignatorList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitDesignatorList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitDesignatorList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar DesignatorContext = /*#__PURE__*/function (_antlr4$ParserRuleCon70) {\n  function DesignatorContext(parser, parent, invokingState) {\n    var _this71;\n    _classCallCheck(this, DesignatorContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this71 = _callSuper(this, DesignatorContext, [parent, invokingState]);\n    _this71.parser = parser;\n    _this71.ruleIndex = CParser.RULE_designator;\n    return _this71;\n  }\n  _inherits(DesignatorContext, _antlr4$ParserRuleCon70);\n  return _createClass(DesignatorContext, [{\n    key: \"LeftBracket\",\n    value: function LeftBracket() {\n      return this.getToken(CParser.LeftBracket, 0);\n    }\n  }, {\n    key: \"constantExpression\",\n    value: function constantExpression() {\n      return this.getTypedRuleContext(ConstantExpressionContext, 0);\n    }\n  }, {\n    key: \"RightBracket\",\n    value: function RightBracket() {\n      return this.getToken(CParser.RightBracket, 0);\n    }\n  }, {\n    key: \"Dot\",\n    value: function Dot() {\n      return this.getToken(CParser.Dot, 0);\n    }\n  }, {\n    key: \"Identifier\",\n    value: function Identifier() {\n      return this.getToken(CParser.Identifier, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterDesignator(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitDesignator(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitDesignator(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar StaticAssertDeclarationContext = /*#__PURE__*/function (_antlr4$ParserRuleCon71) {\n  function StaticAssertDeclarationContext(parser, parent, invokingState) {\n    var _this72;\n    _classCallCheck(this, StaticAssertDeclarationContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this72 = _callSuper(this, StaticAssertDeclarationContext, [parent, invokingState]);\n    _defineProperty(_this72, \"StringLiteral\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.StringLiteral);\n      } else {\n        return this.getToken(CParser.StringLiteral, i);\n      }\n    });\n    _this72.parser = parser;\n    _this72.ruleIndex = CParser.RULE_staticAssertDeclaration;\n    return _this72;\n  }\n  _inherits(StaticAssertDeclarationContext, _antlr4$ParserRuleCon71);\n  return _createClass(StaticAssertDeclarationContext, [{\n    key: \"StaticAssert\",\n    value: function StaticAssert() {\n      return this.getToken(CParser.StaticAssert, 0);\n    }\n  }, {\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"constantExpression\",\n    value: function constantExpression() {\n      return this.getTypedRuleContext(ConstantExpressionContext, 0);\n    }\n  }, {\n    key: \"Comma\",\n    value: function Comma() {\n      return this.getToken(CParser.Comma, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"Semi\",\n    value: function Semi() {\n      return this.getToken(CParser.Semi, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterStaticAssertDeclaration(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitStaticAssertDeclaration(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitStaticAssertDeclaration(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar StatementContext = /*#__PURE__*/function (_antlr4$ParserRuleCon72) {\n  function StatementContext(parser, parent, invokingState) {\n    var _this73;\n    _classCallCheck(this, StatementContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this73 = _callSuper(this, StatementContext, [parent, invokingState]);\n    _defineProperty(_this73, \"logicalOrExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(LogicalOrExpressionContext);\n      } else {\n        return this.getTypedRuleContext(LogicalOrExpressionContext, i);\n      }\n    });\n    _defineProperty(_this73, \"Colon\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Colon);\n      } else {\n        return this.getToken(CParser.Colon, i);\n      }\n    });\n    _defineProperty(_this73, \"Comma\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Comma);\n      } else {\n        return this.getToken(CParser.Comma, i);\n      }\n    });\n    _this73.parser = parser;\n    _this73.ruleIndex = CParser.RULE_statement;\n    return _this73;\n  }\n  _inherits(StatementContext, _antlr4$ParserRuleCon72);\n  return _createClass(StatementContext, [{\n    key: \"labeledStatement\",\n    value: function labeledStatement() {\n      return this.getTypedRuleContext(LabeledStatementContext, 0);\n    }\n  }, {\n    key: \"compoundStatement\",\n    value: function compoundStatement() {\n      return this.getTypedRuleContext(CompoundStatementContext, 0);\n    }\n  }, {\n    key: \"expressionStatement\",\n    value: function expressionStatement() {\n      return this.getTypedRuleContext(ExpressionStatementContext, 0);\n    }\n  }, {\n    key: \"selectionStatement\",\n    value: function selectionStatement() {\n      return this.getTypedRuleContext(SelectionStatementContext, 0);\n    }\n  }, {\n    key: \"iterationStatement\",\n    value: function iterationStatement() {\n      return this.getTypedRuleContext(IterationStatementContext, 0);\n    }\n  }, {\n    key: \"jumpStatement\",\n    value: function jumpStatement() {\n      return this.getTypedRuleContext(JumpStatementContext, 0);\n    }\n  }, {\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"Semi\",\n    value: function Semi() {\n      return this.getToken(CParser.Semi, 0);\n    }\n  }, {\n    key: \"Volatile\",\n    value: function Volatile() {\n      return this.getToken(CParser.Volatile, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterStatement(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitStatement(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitStatement(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar LabeledStatementContext = /*#__PURE__*/function (_antlr4$ParserRuleCon73) {\n  function LabeledStatementContext(parser, parent, invokingState) {\n    var _this74;\n    _classCallCheck(this, LabeledStatementContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this74 = _callSuper(this, LabeledStatementContext, [parent, invokingState]);\n    _this74.parser = parser;\n    _this74.ruleIndex = CParser.RULE_labeledStatement;\n    return _this74;\n  }\n  _inherits(LabeledStatementContext, _antlr4$ParserRuleCon73);\n  return _createClass(LabeledStatementContext, [{\n    key: \"Identifier\",\n    value: function Identifier() {\n      return this.getToken(CParser.Identifier, 0);\n    }\n  }, {\n    key: \"Colon\",\n    value: function Colon() {\n      return this.getToken(CParser.Colon, 0);\n    }\n  }, {\n    key: \"statement\",\n    value: function statement() {\n      return this.getTypedRuleContext(StatementContext, 0);\n    }\n  }, {\n    key: \"Case\",\n    value: function Case() {\n      return this.getToken(CParser.Case, 0);\n    }\n  }, {\n    key: \"constantExpression\",\n    value: function constantExpression() {\n      return this.getTypedRuleContext(ConstantExpressionContext, 0);\n    }\n  }, {\n    key: \"Default\",\n    value: function Default() {\n      return this.getToken(CParser.Default, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterLabeledStatement(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitLabeledStatement(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitLabeledStatement(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar CompoundStatementContext = /*#__PURE__*/function (_antlr4$ParserRuleCon74) {\n  function CompoundStatementContext(parser, parent, invokingState) {\n    var _this75;\n    _classCallCheck(this, CompoundStatementContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this75 = _callSuper(this, CompoundStatementContext, [parent, invokingState]);\n    _this75.parser = parser;\n    _this75.ruleIndex = CParser.RULE_compoundStatement;\n    return _this75;\n  }\n  _inherits(CompoundStatementContext, _antlr4$ParserRuleCon74);\n  return _createClass(CompoundStatementContext, [{\n    key: \"LeftBrace\",\n    value: function LeftBrace() {\n      return this.getToken(CParser.LeftBrace, 0);\n    }\n  }, {\n    key: \"RightBrace\",\n    value: function RightBrace() {\n      return this.getToken(CParser.RightBrace, 0);\n    }\n  }, {\n    key: \"blockItemList\",\n    value: function blockItemList() {\n      return this.getTypedRuleContext(BlockItemListContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterCompoundStatement(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitCompoundStatement(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitCompoundStatement(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar BlockItemListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon75) {\n  function BlockItemListContext(parser, parent, invokingState) {\n    var _this76;\n    _classCallCheck(this, BlockItemListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this76 = _callSuper(this, BlockItemListContext, [parent, invokingState]);\n    _defineProperty(_this76, \"blockItem\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(BlockItemContext);\n      } else {\n        return this.getTypedRuleContext(BlockItemContext, i);\n      }\n    });\n    _this76.parser = parser;\n    _this76.ruleIndex = CParser.RULE_blockItemList;\n    return _this76;\n  }\n  _inherits(BlockItemListContext, _antlr4$ParserRuleCon75);\n  return _createClass(BlockItemListContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterBlockItemList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitBlockItemList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitBlockItemList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar BlockItemContext = /*#__PURE__*/function (_antlr4$ParserRuleCon76) {\n  function BlockItemContext(parser, parent, invokingState) {\n    var _this77;\n    _classCallCheck(this, BlockItemContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this77 = _callSuper(this, BlockItemContext, [parent, invokingState]);\n    _this77.parser = parser;\n    _this77.ruleIndex = CParser.RULE_blockItem;\n    return _this77;\n  }\n  _inherits(BlockItemContext, _antlr4$ParserRuleCon76);\n  return _createClass(BlockItemContext, [{\n    key: \"statement\",\n    value: function statement() {\n      return this.getTypedRuleContext(StatementContext, 0);\n    }\n  }, {\n    key: \"declaration\",\n    value: function declaration() {\n      return this.getTypedRuleContext(DeclarationContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterBlockItem(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitBlockItem(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitBlockItem(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar ExpressionStatementContext = /*#__PURE__*/function (_antlr4$ParserRuleCon77) {\n  function ExpressionStatementContext(parser, parent, invokingState) {\n    var _this78;\n    _classCallCheck(this, ExpressionStatementContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this78 = _callSuper(this, ExpressionStatementContext, [parent, invokingState]);\n    _this78.parser = parser;\n    _this78.ruleIndex = CParser.RULE_expressionStatement;\n    return _this78;\n  }\n  _inherits(ExpressionStatementContext, _antlr4$ParserRuleCon77);\n  return _createClass(ExpressionStatementContext, [{\n    key: \"Semi\",\n    value: function Semi() {\n      return this.getToken(CParser.Semi, 0);\n    }\n  }, {\n    key: \"expression\",\n    value: function expression() {\n      return this.getTypedRuleContext(ExpressionContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterExpressionStatement(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitExpressionStatement(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitExpressionStatement(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar SelectionStatementContext = /*#__PURE__*/function (_antlr4$ParserRuleCon78) {\n  function SelectionStatementContext(parser, parent, invokingState) {\n    var _this79;\n    _classCallCheck(this, SelectionStatementContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this79 = _callSuper(this, SelectionStatementContext, [parent, invokingState]);\n    _defineProperty(_this79, \"statement\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(StatementContext);\n      } else {\n        return this.getTypedRuleContext(StatementContext, i);\n      }\n    });\n    _this79.parser = parser;\n    _this79.ruleIndex = CParser.RULE_selectionStatement;\n    return _this79;\n  }\n  _inherits(SelectionStatementContext, _antlr4$ParserRuleCon78);\n  return _createClass(SelectionStatementContext, [{\n    key: \"If\",\n    value: function If() {\n      return this.getToken(CParser.If, 0);\n    }\n  }, {\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"expression\",\n    value: function expression() {\n      return this.getTypedRuleContext(ExpressionContext, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"Else\",\n    value: function Else() {\n      return this.getToken(CParser.Else, 0);\n    }\n  }, {\n    key: \"Switch\",\n    value: function Switch() {\n      return this.getToken(CParser.Switch, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterSelectionStatement(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitSelectionStatement(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitSelectionStatement(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar IterationStatementContext = /*#__PURE__*/function (_antlr4$ParserRuleCon79) {\n  function IterationStatementContext(parser, parent, invokingState) {\n    var _this80;\n    _classCallCheck(this, IterationStatementContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this80 = _callSuper(this, IterationStatementContext, [parent, invokingState]);\n    _this80.parser = parser;\n    _this80.ruleIndex = CParser.RULE_iterationStatement;\n    return _this80;\n  }\n  _inherits(IterationStatementContext, _antlr4$ParserRuleCon79);\n  return _createClass(IterationStatementContext, [{\n    key: \"While\",\n    value: function While() {\n      return this.getToken(CParser.While, 0);\n    }\n  }, {\n    key: \"LeftParen\",\n    value: function LeftParen() {\n      return this.getToken(CParser.LeftParen, 0);\n    }\n  }, {\n    key: \"expression\",\n    value: function expression() {\n      return this.getTypedRuleContext(ExpressionContext, 0);\n    }\n  }, {\n    key: \"RightParen\",\n    value: function RightParen() {\n      return this.getToken(CParser.RightParen, 0);\n    }\n  }, {\n    key: \"statement\",\n    value: function statement() {\n      return this.getTypedRuleContext(StatementContext, 0);\n    }\n  }, {\n    key: \"Do\",\n    value: function Do() {\n      return this.getToken(CParser.Do, 0);\n    }\n  }, {\n    key: \"Semi\",\n    value: function Semi() {\n      return this.getToken(CParser.Semi, 0);\n    }\n  }, {\n    key: \"For\",\n    value: function For() {\n      return this.getToken(CParser.For, 0);\n    }\n  }, {\n    key: \"forCondition\",\n    value: function forCondition() {\n      return this.getTypedRuleContext(ForConditionContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterIterationStatement(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitIterationStatement(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitIterationStatement(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar ForConditionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon80) {\n  function ForConditionContext(parser, parent, invokingState) {\n    var _this81;\n    _classCallCheck(this, ForConditionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this81 = _callSuper(this, ForConditionContext, [parent, invokingState]);\n    _defineProperty(_this81, \"Semi\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Semi);\n      } else {\n        return this.getToken(CParser.Semi, i);\n      }\n    });\n    _defineProperty(_this81, \"forExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(ForExpressionContext);\n      } else {\n        return this.getTypedRuleContext(ForExpressionContext, i);\n      }\n    });\n    _this81.parser = parser;\n    _this81.ruleIndex = CParser.RULE_forCondition;\n    return _this81;\n  }\n  _inherits(ForConditionContext, _antlr4$ParserRuleCon80);\n  return _createClass(ForConditionContext, [{\n    key: \"forDeclaration\",\n    value: function forDeclaration() {\n      return this.getTypedRuleContext(ForDeclarationContext, 0);\n    }\n  }, {\n    key: \"expression\",\n    value: function expression() {\n      return this.getTypedRuleContext(ExpressionContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterForCondition(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitForCondition(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitForCondition(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar ForDeclarationContext = /*#__PURE__*/function (_antlr4$ParserRuleCon81) {\n  function ForDeclarationContext(parser, parent, invokingState) {\n    var _this82;\n    _classCallCheck(this, ForDeclarationContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this82 = _callSuper(this, ForDeclarationContext, [parent, invokingState]);\n    _this82.parser = parser;\n    _this82.ruleIndex = CParser.RULE_forDeclaration;\n    return _this82;\n  }\n  _inherits(ForDeclarationContext, _antlr4$ParserRuleCon81);\n  return _createClass(ForDeclarationContext, [{\n    key: \"declarationSpecifiers\",\n    value: function declarationSpecifiers() {\n      return this.getTypedRuleContext(DeclarationSpecifiersContext, 0);\n    }\n  }, {\n    key: \"initDeclaratorList\",\n    value: function initDeclaratorList() {\n      return this.getTypedRuleContext(InitDeclaratorListContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterForDeclaration(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitForDeclaration(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitForDeclaration(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar ForExpressionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon82) {\n  function ForExpressionContext(parser, parent, invokingState) {\n    var _this83;\n    _classCallCheck(this, ForExpressionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this83 = _callSuper(this, ForExpressionContext, [parent, invokingState]);\n    _defineProperty(_this83, \"assignmentExpression\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(AssignmentExpressionContext);\n      } else {\n        return this.getTypedRuleContext(AssignmentExpressionContext, i);\n      }\n    });\n    _defineProperty(_this83, \"Comma\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTokens(CParser.Comma);\n      } else {\n        return this.getToken(CParser.Comma, i);\n      }\n    });\n    _this83.parser = parser;\n    _this83.ruleIndex = CParser.RULE_forExpression;\n    return _this83;\n  }\n  _inherits(ForExpressionContext, _antlr4$ParserRuleCon82);\n  return _createClass(ForExpressionContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterForExpression(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitForExpression(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitForExpression(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar JumpStatementContext = /*#__PURE__*/function (_antlr4$ParserRuleCon83) {\n  function JumpStatementContext(parser, parent, invokingState) {\n    var _this84;\n    _classCallCheck(this, JumpStatementContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this84 = _callSuper(this, JumpStatementContext, [parent, invokingState]);\n    _this84.parser = parser;\n    _this84.ruleIndex = CParser.RULE_jumpStatement;\n    return _this84;\n  }\n  _inherits(JumpStatementContext, _antlr4$ParserRuleCon83);\n  return _createClass(JumpStatementContext, [{\n    key: \"Semi\",\n    value: function Semi() {\n      return this.getToken(CParser.Semi, 0);\n    }\n  }, {\n    key: \"Goto\",\n    value: function Goto() {\n      return this.getToken(CParser.Goto, 0);\n    }\n  }, {\n    key: \"Identifier\",\n    value: function Identifier() {\n      return this.getToken(CParser.Identifier, 0);\n    }\n  }, {\n    key: \"Return\",\n    value: function Return() {\n      return this.getToken(CParser.Return, 0);\n    }\n  }, {\n    key: \"unaryExpression\",\n    value: function unaryExpression() {\n      return this.getTypedRuleContext(UnaryExpressionContext, 0);\n    }\n  }, {\n    key: \"Continue\",\n    value: function Continue() {\n      return this.getToken(CParser.Continue, 0);\n    }\n  }, {\n    key: \"Break\",\n    value: function Break() {\n      return this.getToken(CParser.Break, 0);\n    }\n  }, {\n    key: \"expression\",\n    value: function expression() {\n      return this.getTypedRuleContext(ExpressionContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterJumpStatement(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitJumpStatement(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitJumpStatement(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar CompilationUnitContext = /*#__PURE__*/function (_antlr4$ParserRuleCon84) {\n  function CompilationUnitContext(parser, parent, invokingState) {\n    var _this85;\n    _classCallCheck(this, CompilationUnitContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this85 = _callSuper(this, CompilationUnitContext, [parent, invokingState]);\n    _this85.parser = parser;\n    _this85.ruleIndex = CParser.RULE_compilationUnit;\n    return _this85;\n  }\n  _inherits(CompilationUnitContext, _antlr4$ParserRuleCon84);\n  return _createClass(CompilationUnitContext, [{\n    key: \"EOF\",\n    value: function EOF() {\n      return this.getToken(CParser.EOF, 0);\n    }\n  }, {\n    key: \"translationUnit\",\n    value: function translationUnit() {\n      return this.getTypedRuleContext(TranslationUnitContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterCompilationUnit(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitCompilationUnit(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitCompilationUnit(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar TranslationUnitContext = /*#__PURE__*/function (_antlr4$ParserRuleCon85) {\n  function TranslationUnitContext(parser, parent, invokingState) {\n    var _this86;\n    _classCallCheck(this, TranslationUnitContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this86 = _callSuper(this, TranslationUnitContext, [parent, invokingState]);\n    _defineProperty(_this86, \"externalDeclaration\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(ExternalDeclarationContext);\n      } else {\n        return this.getTypedRuleContext(ExternalDeclarationContext, i);\n      }\n    });\n    _this86.parser = parser;\n    _this86.ruleIndex = CParser.RULE_translationUnit;\n    return _this86;\n  }\n  _inherits(TranslationUnitContext, _antlr4$ParserRuleCon85);\n  return _createClass(TranslationUnitContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterTranslationUnit(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitTranslationUnit(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitTranslationUnit(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar ExternalDeclarationContext = /*#__PURE__*/function (_antlr4$ParserRuleCon86) {\n  function ExternalDeclarationContext(parser, parent, invokingState) {\n    var _this87;\n    _classCallCheck(this, ExternalDeclarationContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this87 = _callSuper(this, ExternalDeclarationContext, [parent, invokingState]);\n    _this87.parser = parser;\n    _this87.ruleIndex = CParser.RULE_externalDeclaration;\n    return _this87;\n  }\n  _inherits(ExternalDeclarationContext, _antlr4$ParserRuleCon86);\n  return _createClass(ExternalDeclarationContext, [{\n    key: \"functionDefinition\",\n    value: function functionDefinition() {\n      return this.getTypedRuleContext(FunctionDefinitionContext, 0);\n    }\n  }, {\n    key: \"declaration\",\n    value: function declaration() {\n      return this.getTypedRuleContext(DeclarationContext, 0);\n    }\n  }, {\n    key: \"Semi\",\n    value: function Semi() {\n      return this.getToken(CParser.Semi, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterExternalDeclaration(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitExternalDeclaration(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitExternalDeclaration(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar FunctionDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon87) {\n  function FunctionDefinitionContext(parser, parent, invokingState) {\n    var _this88;\n    _classCallCheck(this, FunctionDefinitionContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this88 = _callSuper(this, FunctionDefinitionContext, [parent, invokingState]);\n    _this88.parser = parser;\n    _this88.ruleIndex = CParser.RULE_functionDefinition;\n    return _this88;\n  }\n  _inherits(FunctionDefinitionContext, _antlr4$ParserRuleCon87);\n  return _createClass(FunctionDefinitionContext, [{\n    key: \"declarator\",\n    value: function declarator() {\n      return this.getTypedRuleContext(DeclaratorContext, 0);\n    }\n  }, {\n    key: \"compoundStatement\",\n    value: function compoundStatement() {\n      return this.getTypedRuleContext(CompoundStatementContext, 0);\n    }\n  }, {\n    key: \"declarationSpecifiers\",\n    value: function declarationSpecifiers() {\n      return this.getTypedRuleContext(DeclarationSpecifiersContext, 0);\n    }\n  }, {\n    key: \"declarationList\",\n    value: function declarationList() {\n      return this.getTypedRuleContext(DeclarationListContext, 0);\n    }\n  }, {\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterFunctionDefinition(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitFunctionDefinition(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitFunctionDefinition(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nvar DeclarationListContext = /*#__PURE__*/function (_antlr4$ParserRuleCon88) {\n  function DeclarationListContext(parser, parent, invokingState) {\n    var _this89;\n    _classCallCheck(this, DeclarationListContext);\n    if (parent === undefined) {\n      parent = null;\n    }\n    if (invokingState === undefined || invokingState === null) {\n      invokingState = -1;\n    }\n    _this89 = _callSuper(this, DeclarationListContext, [parent, invokingState]);\n    _defineProperty(_this89, \"declaration\", function (i) {\n      if (i === undefined) {\n        i = null;\n      }\n      if (i === null) {\n        return this.getTypedRuleContexts(DeclarationContext);\n      } else {\n        return this.getTypedRuleContext(DeclarationContext, i);\n      }\n    });\n    _this89.parser = parser;\n    _this89.ruleIndex = CParser.RULE_declarationList;\n    return _this89;\n  }\n  _inherits(DeclarationListContext, _antlr4$ParserRuleCon88);\n  return _createClass(DeclarationListContext, [{\n    key: \"enterRule\",\n    value: function enterRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.enterDeclarationList(this);\n      }\n    }\n  }, {\n    key: \"exitRule\",\n    value: function exitRule(listener) {\n      if (listener instanceof _CListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        listener.exitDeclarationList(this);\n      }\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(visitor) {\n      if (visitor instanceof _CVisitor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return visitor.visitDeclarationList(this);\n      } else {\n        return visitor.visitChildren(this);\n      }\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext);\nCParser.PrimaryExpressionContext = PrimaryExpressionContext;\nCParser.GenericSelectionContext = GenericSelectionContext;\nCParser.GenericAssocListContext = GenericAssocListContext;\nCParser.GenericAssociationContext = GenericAssociationContext;\nCParser.PostfixExpressionContext = PostfixExpressionContext;\nCParser.ArgumentExpressionListContext = ArgumentExpressionListContext;\nCParser.UnaryExpressionContext = UnaryExpressionContext;\nCParser.UnaryOperatorContext = UnaryOperatorContext;\nCParser.CastExpressionContext = CastExpressionContext;\nCParser.MultiplicativeExpressionContext = MultiplicativeExpressionContext;\nCParser.AdditiveExpressionContext = AdditiveExpressionContext;\nCParser.ShiftExpressionContext = ShiftExpressionContext;\nCParser.RelationalExpressionContext = RelationalExpressionContext;\nCParser.EqualityExpressionContext = EqualityExpressionContext;\nCParser.AndExpressionContext = AndExpressionContext;\nCParser.ExclusiveOrExpressionContext = ExclusiveOrExpressionContext;\nCParser.InclusiveOrExpressionContext = InclusiveOrExpressionContext;\nCParser.LogicalAndExpressionContext = LogicalAndExpressionContext;\nCParser.LogicalOrExpressionContext = LogicalOrExpressionContext;\nCParser.ConditionalExpressionContext = ConditionalExpressionContext;\nCParser.AssignmentExpressionContext = AssignmentExpressionContext;\nCParser.AssignmentOperatorContext = AssignmentOperatorContext;\nCParser.ExpressionContext = ExpressionContext;\nCParser.ConstantExpressionContext = ConstantExpressionContext;\nCParser.DeclarationContext = DeclarationContext;\nCParser.DeclarationSpecifiersContext = DeclarationSpecifiersContext;\nCParser.DeclarationSpecifiers2Context = DeclarationSpecifiers2Context;\nCParser.DeclarationSpecifierContext = DeclarationSpecifierContext;\nCParser.InitDeclaratorListContext = InitDeclaratorListContext;\nCParser.InitDeclaratorContext = InitDeclaratorContext;\nCParser.StorageClassSpecifierContext = StorageClassSpecifierContext;\nCParser.TypeSpecifierContext = TypeSpecifierContext;\nCParser.StructOrUnionSpecifierContext = StructOrUnionSpecifierContext;\nCParser.StructOrUnionContext = StructOrUnionContext;\nCParser.StructDeclarationListContext = StructDeclarationListContext;\nCParser.StructDeclarationContext = StructDeclarationContext;\nCParser.SpecifierQualifierListContext = SpecifierQualifierListContext;\nCParser.StructDeclaratorListContext = StructDeclaratorListContext;\nCParser.StructDeclaratorContext = StructDeclaratorContext;\nCParser.EnumSpecifierContext = EnumSpecifierContext;\nCParser.EnumeratorListContext = EnumeratorListContext;\nCParser.EnumeratorContext = EnumeratorContext;\nCParser.EnumerationConstantContext = EnumerationConstantContext;\nCParser.AtomicTypeSpecifierContext = AtomicTypeSpecifierContext;\nCParser.TypeQualifierContext = TypeQualifierContext;\nCParser.FunctionSpecifierContext = FunctionSpecifierContext;\nCParser.AlignmentSpecifierContext = AlignmentSpecifierContext;\nCParser.DeclaratorContext = DeclaratorContext;\nCParser.DirectDeclaratorContext = DirectDeclaratorContext;\nCParser.VcSpecificModiferContext = VcSpecificModiferContext;\nCParser.GccDeclaratorExtensionContext = GccDeclaratorExtensionContext;\nCParser.GccAttributeSpecifierContext = GccAttributeSpecifierContext;\nCParser.GccAttributeListContext = GccAttributeListContext;\nCParser.GccAttributeContext = GccAttributeContext;\nCParser.NestedParenthesesBlockContext = NestedParenthesesBlockContext;\nCParser.PointerContext = PointerContext;\nCParser.TypeQualifierListContext = TypeQualifierListContext;\nCParser.ParameterTypeListContext = ParameterTypeListContext;\nCParser.ParameterListContext = ParameterListContext;\nCParser.ParameterDeclarationContext = ParameterDeclarationContext;\nCParser.IdentifierListContext = IdentifierListContext;\nCParser.TypeNameContext = TypeNameContext;\nCParser.AbstractDeclaratorContext = AbstractDeclaratorContext;\nCParser.DirectAbstractDeclaratorContext = DirectAbstractDeclaratorContext;\nCParser.TypedefNameContext = TypedefNameContext;\nCParser.InitializerContext = InitializerContext;\nCParser.InitializerListContext = InitializerListContext;\nCParser.DesignationContext = DesignationContext;\nCParser.DesignatorListContext = DesignatorListContext;\nCParser.DesignatorContext = DesignatorContext;\nCParser.StaticAssertDeclarationContext = StaticAssertDeclarationContext;\nCParser.StatementContext = StatementContext;\nCParser.LabeledStatementContext = LabeledStatementContext;\nCParser.CompoundStatementContext = CompoundStatementContext;\nCParser.BlockItemListContext = BlockItemListContext;\nCParser.BlockItemContext = BlockItemContext;\nCParser.ExpressionStatementContext = ExpressionStatementContext;\nCParser.SelectionStatementContext = SelectionStatementContext;\nCParser.IterationStatementContext = IterationStatementContext;\nCParser.ForConditionContext = ForConditionContext;\nCParser.ForDeclarationContext = ForDeclarationContext;\nCParser.ForExpressionContext = ForExpressionContext;\nCParser.JumpStatementContext = JumpStatementContext;\nCParser.CompilationUnitContext = CompilationUnitContext;\nCParser.TranslationUnitContext = TranslationUnitContext;\nCParser.ExternalDeclarationContext = ExternalDeclarationContext;\nCParser.FunctionDefinitionContext = FunctionDefinitionContext;\nCParser.DeclarationListContext = DeclarationListContext;\n\n//# sourceURL=webpack://ForkJS/./src/parser/CParser.js?");

/***/ }),

/***/ "./src/parser/CVisitor.js":
/*!********************************!*\
  !*** ./src/parser/CVisitor.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CVisitor)\n/* harmony export */ });\n/* harmony import */ var antlr4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antlr4 */ \"./node_modules/antlr4/dist/antlr4.web.mjs\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n// Generated from C.g4 by ANTLR 4.12.0\n// jshint ignore: start\n\n\n// This class defines a complete generic visitor for a parse tree produced by CParser.\nvar CVisitor = /*#__PURE__*/function (_antlr4$tree$ParseTre) {\n  function CVisitor() {\n    _classCallCheck(this, CVisitor);\n    return _callSuper(this, CVisitor, arguments);\n  }\n  _inherits(CVisitor, _antlr4$tree$ParseTre);\n  return _createClass(CVisitor, [{\n    key: \"visitPrimaryExpression\",\n    value:\n    // Visit a parse tree produced by CParser#primaryExpression.\n    function visitPrimaryExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#genericSelection.\n  }, {\n    key: \"visitGenericSelection\",\n    value: function visitGenericSelection(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#genericAssocList.\n  }, {\n    key: \"visitGenericAssocList\",\n    value: function visitGenericAssocList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#genericAssociation.\n  }, {\n    key: \"visitGenericAssociation\",\n    value: function visitGenericAssociation(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#postfixExpression.\n  }, {\n    key: \"visitPostfixExpression\",\n    value: function visitPostfixExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#argumentExpressionList.\n  }, {\n    key: \"visitArgumentExpressionList\",\n    value: function visitArgumentExpressionList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#unaryExpression.\n  }, {\n    key: \"visitUnaryExpression\",\n    value: function visitUnaryExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#unaryOperator.\n  }, {\n    key: \"visitUnaryOperator\",\n    value: function visitUnaryOperator(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#castExpression.\n  }, {\n    key: \"visitCastExpression\",\n    value: function visitCastExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#multiplicativeExpression.\n  }, {\n    key: \"visitMultiplicativeExpression\",\n    value: function visitMultiplicativeExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#additiveExpression.\n  }, {\n    key: \"visitAdditiveExpression\",\n    value: function visitAdditiveExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#shiftExpression.\n  }, {\n    key: \"visitShiftExpression\",\n    value: function visitShiftExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#relationalExpression.\n  }, {\n    key: \"visitRelationalExpression\",\n    value: function visitRelationalExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#equalityExpression.\n  }, {\n    key: \"visitEqualityExpression\",\n    value: function visitEqualityExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#andExpression.\n  }, {\n    key: \"visitAndExpression\",\n    value: function visitAndExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#exclusiveOrExpression.\n  }, {\n    key: \"visitExclusiveOrExpression\",\n    value: function visitExclusiveOrExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#inclusiveOrExpression.\n  }, {\n    key: \"visitInclusiveOrExpression\",\n    value: function visitInclusiveOrExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#logicalAndExpression.\n  }, {\n    key: \"visitLogicalAndExpression\",\n    value: function visitLogicalAndExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#logicalOrExpression.\n  }, {\n    key: \"visitLogicalOrExpression\",\n    value: function visitLogicalOrExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#conditionalExpression.\n  }, {\n    key: \"visitConditionalExpression\",\n    value: function visitConditionalExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#assignmentExpression.\n  }, {\n    key: \"visitAssignmentExpression\",\n    value: function visitAssignmentExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#assignmentOperator.\n  }, {\n    key: \"visitAssignmentOperator\",\n    value: function visitAssignmentOperator(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#expression.\n  }, {\n    key: \"visitExpression\",\n    value: function visitExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#constantExpression.\n  }, {\n    key: \"visitConstantExpression\",\n    value: function visitConstantExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#declaration.\n  }, {\n    key: \"visitDeclaration\",\n    value: function visitDeclaration(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#declarationSpecifiers.\n  }, {\n    key: \"visitDeclarationSpecifiers\",\n    value: function visitDeclarationSpecifiers(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#declarationSpecifiers2.\n  }, {\n    key: \"visitDeclarationSpecifiers2\",\n    value: function visitDeclarationSpecifiers2(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#declarationSpecifier.\n  }, {\n    key: \"visitDeclarationSpecifier\",\n    value: function visitDeclarationSpecifier(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#initDeclaratorList.\n  }, {\n    key: \"visitInitDeclaratorList\",\n    value: function visitInitDeclaratorList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#initDeclarator.\n  }, {\n    key: \"visitInitDeclarator\",\n    value: function visitInitDeclarator(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#storageClassSpecifier.\n  }, {\n    key: \"visitStorageClassSpecifier\",\n    value: function visitStorageClassSpecifier(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#typeSpecifier.\n  }, {\n    key: \"visitTypeSpecifier\",\n    value: function visitTypeSpecifier(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#structOrUnionSpecifier.\n  }, {\n    key: \"visitStructOrUnionSpecifier\",\n    value: function visitStructOrUnionSpecifier(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#structOrUnion.\n  }, {\n    key: \"visitStructOrUnion\",\n    value: function visitStructOrUnion(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#structDeclarationList.\n  }, {\n    key: \"visitStructDeclarationList\",\n    value: function visitStructDeclarationList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#structDeclaration.\n  }, {\n    key: \"visitStructDeclaration\",\n    value: function visitStructDeclaration(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#specifierQualifierList.\n  }, {\n    key: \"visitSpecifierQualifierList\",\n    value: function visitSpecifierQualifierList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#structDeclaratorList.\n  }, {\n    key: \"visitStructDeclaratorList\",\n    value: function visitStructDeclaratorList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#structDeclarator.\n  }, {\n    key: \"visitStructDeclarator\",\n    value: function visitStructDeclarator(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#enumSpecifier.\n  }, {\n    key: \"visitEnumSpecifier\",\n    value: function visitEnumSpecifier(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#enumeratorList.\n  }, {\n    key: \"visitEnumeratorList\",\n    value: function visitEnumeratorList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#enumerator.\n  }, {\n    key: \"visitEnumerator\",\n    value: function visitEnumerator(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#enumerationConstant.\n  }, {\n    key: \"visitEnumerationConstant\",\n    value: function visitEnumerationConstant(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#atomicTypeSpecifier.\n  }, {\n    key: \"visitAtomicTypeSpecifier\",\n    value: function visitAtomicTypeSpecifier(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#typeQualifier.\n  }, {\n    key: \"visitTypeQualifier\",\n    value: function visitTypeQualifier(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#functionSpecifier.\n  }, {\n    key: \"visitFunctionSpecifier\",\n    value: function visitFunctionSpecifier(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#alignmentSpecifier.\n  }, {\n    key: \"visitAlignmentSpecifier\",\n    value: function visitAlignmentSpecifier(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#declarator.\n  }, {\n    key: \"visitDeclarator\",\n    value: function visitDeclarator(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#directDeclarator.\n  }, {\n    key: \"visitDirectDeclarator\",\n    value: function visitDirectDeclarator(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#vcSpecificModifer.\n  }, {\n    key: \"visitVcSpecificModifer\",\n    value: function visitVcSpecificModifer(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#gccDeclaratorExtension.\n  }, {\n    key: \"visitGccDeclaratorExtension\",\n    value: function visitGccDeclaratorExtension(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#gccAttributeSpecifier.\n  }, {\n    key: \"visitGccAttributeSpecifier\",\n    value: function visitGccAttributeSpecifier(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#gccAttributeList.\n  }, {\n    key: \"visitGccAttributeList\",\n    value: function visitGccAttributeList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#gccAttribute.\n  }, {\n    key: \"visitGccAttribute\",\n    value: function visitGccAttribute(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#nestedParenthesesBlock.\n  }, {\n    key: \"visitNestedParenthesesBlock\",\n    value: function visitNestedParenthesesBlock(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#pointer.\n  }, {\n    key: \"visitPointer\",\n    value: function visitPointer(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#typeQualifierList.\n  }, {\n    key: \"visitTypeQualifierList\",\n    value: function visitTypeQualifierList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#parameterTypeList.\n  }, {\n    key: \"visitParameterTypeList\",\n    value: function visitParameterTypeList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#parameterList.\n  }, {\n    key: \"visitParameterList\",\n    value: function visitParameterList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#parameterDeclaration.\n  }, {\n    key: \"visitParameterDeclaration\",\n    value: function visitParameterDeclaration(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#identifierList.\n  }, {\n    key: \"visitIdentifierList\",\n    value: function visitIdentifierList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#typeName.\n  }, {\n    key: \"visitTypeName\",\n    value: function visitTypeName(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#abstractDeclarator.\n  }, {\n    key: \"visitAbstractDeclarator\",\n    value: function visitAbstractDeclarator(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#directAbstractDeclarator.\n  }, {\n    key: \"visitDirectAbstractDeclarator\",\n    value: function visitDirectAbstractDeclarator(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#typedefName.\n  }, {\n    key: \"visitTypedefName\",\n    value: function visitTypedefName(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#initializer.\n  }, {\n    key: \"visitInitializer\",\n    value: function visitInitializer(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#initializerList.\n  }, {\n    key: \"visitInitializerList\",\n    value: function visitInitializerList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#designation.\n  }, {\n    key: \"visitDesignation\",\n    value: function visitDesignation(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#designatorList.\n  }, {\n    key: \"visitDesignatorList\",\n    value: function visitDesignatorList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#designator.\n  }, {\n    key: \"visitDesignator\",\n    value: function visitDesignator(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#staticAssertDeclaration.\n  }, {\n    key: \"visitStaticAssertDeclaration\",\n    value: function visitStaticAssertDeclaration(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#statement.\n  }, {\n    key: \"visitStatement\",\n    value: function visitStatement(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#labeledStatement.\n  }, {\n    key: \"visitLabeledStatement\",\n    value: function visitLabeledStatement(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#compoundStatement.\n  }, {\n    key: \"visitCompoundStatement\",\n    value: function visitCompoundStatement(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#blockItemList.\n  }, {\n    key: \"visitBlockItemList\",\n    value: function visitBlockItemList(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#blockItem.\n  }, {\n    key: \"visitBlockItem\",\n    value: function visitBlockItem(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#expressionStatement.\n  }, {\n    key: \"visitExpressionStatement\",\n    value: function visitExpressionStatement(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#selectionStatement.\n  }, {\n    key: \"visitSelectionStatement\",\n    value: function visitSelectionStatement(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#iterationStatement.\n  }, {\n    key: \"visitIterationStatement\",\n    value: function visitIterationStatement(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#forCondition.\n  }, {\n    key: \"visitForCondition\",\n    value: function visitForCondition(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#forDeclaration.\n  }, {\n    key: \"visitForDeclaration\",\n    value: function visitForDeclaration(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#forExpression.\n  }, {\n    key: \"visitForExpression\",\n    value: function visitForExpression(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#jumpStatement.\n  }, {\n    key: \"visitJumpStatement\",\n    value: function visitJumpStatement(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#compilationUnit.\n  }, {\n    key: \"visitCompilationUnit\",\n    value: function visitCompilationUnit(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#translationUnit.\n  }, {\n    key: \"visitTranslationUnit\",\n    value: function visitTranslationUnit(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#externalDeclaration.\n  }, {\n    key: \"visitExternalDeclaration\",\n    value: function visitExternalDeclaration(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#functionDefinition.\n  }, {\n    key: \"visitFunctionDefinition\",\n    value: function visitFunctionDefinition(ctx) {\n      return this.visitChildren(ctx);\n    }\n\n    // Visit a parse tree produced by CParser#declarationList.\n  }, {\n    key: \"visitDeclarationList\",\n    value: function visitDeclarationList(ctx) {\n      return this.visitChildren(ctx);\n    }\n  }]);\n}(antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tree.ParseTreeVisitor);\n\n\n//# sourceURL=webpack://ForkJS/./src/parser/CVisitor.js?");

/***/ }),

/***/ "./src/parser/CVisitorImplemented.js":
/*!*******************************************!*\
  !*** ./src/parser/CVisitorImplemented.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CVisitorImplemented)\n/* harmony export */ });\n/* harmony import */ var _ForkTree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ForkTree */ \"./src/ForkTree/index.js\");\n/* harmony import */ var _CVisitor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CVisitor */ \"./src/parser/CVisitor.js\");\n/* harmony import */ var _Process__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Process */ \"./src/parser/Process.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _readOnlyError(name) { throw new TypeError(\"\\\"\" + name + \"\\\" is read-only\"); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\nvar CVisitorImplemented = /*#__PURE__*/function (_CVisitor) {\n  function CVisitorImplemented() {\n    var _this;\n    _classCallCheck(this, CVisitorImplemented);\n    _this = _callSuper(this, CVisitorImplemented);\n    _this.tree = new _ForkTree__WEBPACK_IMPORTED_MODULE_0__.ForkTree();\n    _this.pidController = _this.tree.pidController;\n    _this.currentProcess = new _Process__WEBPACK_IMPORTED_MODULE_2__.Process(null, _this.tree.root);\n    _this.currentProcess.forkEnabled = true;\n    _this.currentProcess.pid = 1;\n    _this.currentProcess.isSleeping = false;\n    _this.processList = [_this.currentProcess];\n    _this.currentBlockItem = null;\n    _this.blockItemList = null;\n    _this.currentBlockItemList = null;\n    _this.colorsUsed = [];\n    _this.promisses = [];\n    return _this;\n  }\n  _inherits(CVisitorImplemented, _CVisitor);\n  return _createClass(CVisitorImplemented, [{\n    key: \"visitChildren\",\n    value: function visitChildren(ctx) {\n      if (!this.currentProcess.isActivated) {\n        return null;\n      }\n      return _get(_getPrototypeOf(CVisitorImplemented.prototype), \"visitChildren\", this).call(this, ctx);\n    }\n  }, {\n    key: \"cloneMap\",\n    value: function cloneMap(map) {\n      var newMap = new Map();\n      var _iterator = _createForOfIteratorHelper(map.entries()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            k = _step$value[0],\n            v = _step$value[1];\n          newMap.set(k, Object.assign({}, v));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return newMap;\n    }\n  }, {\n    key: \"createProcess\",\n    value: function createProcess() {\n      var node = this.currentProcess.tree.addChild(this.pidController);\n      var color = this.newColor();\n      var newProcess = new _Process__WEBPACK_IMPORTED_MODULE_2__.Process(this.currentBlockItem, node);\n      newProcess.pid = node.pid;\n      newProcess.variables = this.cloneMap(this.currentProcess.variables);\n      newProcess.context = _objectSpread({}, this.currentProcess.context);\n      newProcess.context.iterationsNotExecuted = [];\n      node.color = color;\n      newProcess.color = color;\n      newProcess.messageSequence = this.currentProcess.messageSequence;\n      this.processList.push(newProcess);\n      return node.pid;\n    }\n  }, {\n    key: \"removeVariables\",\n    value: function removeVariables(ctx) {\n      var _this2 = this;\n      this.currentProcess.variables.forEach(function (context) {\n        if (context.blockItem == ctx) {\n          _this2.currentProcess.variables[\"delete\"](context.name);\n        }\n      });\n    }\n  }, {\n    key: \"removeIteration\",\n    value: function removeIteration(ctx) {\n      var list = this.currentProcess.context.iterationsNotExecuted;\n      if (list) {\n        this.currentProcess.context.iterationsNotExecuted = list.filter(function (context) {\n          return context.ctx != ctx;\n        });\n      }\n    }\n  }, {\n    key: \"promiseNode\",\n    value: function promiseNode(message, color, range) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        // O que precisa fazer agora é garantir os nós pai executem antes dos filhos\n        var max = 100 * (range + 1);\n        var min = 100 * range;\n        var time = Math.random() * (max - min) + min;\n        setTimeout(function () {\n          resolve(_this3.printMessage(message, color));\n        }, time);\n      });\n    }\n  }, {\n    key: \"printMessage\",\n    value: function printMessage(message, color) {\n      var p = document.createElement(\"p\");\n      p.textContent = message;\n      if (color) {\n        p.classList.add(\"log\", \"output-color-\".concat(color));\n      } else {\n        p.classList.add(\"log\", \"output-color-white\");\n      }\n      document.getElementById(\"console-container\").appendChild(p);\n    }\n  }, {\n    key: \"newColor\",\n    value: function newColor() {\n      if (this.colorsUsed.length > 49) {\n        this.colorsUsed = [];\n        this.newColor();\n      }\n      var color = null;\n      while (!color) {\n        var h = Math.floor(Math.random() * 50 - 1) + 1;\n        if (!this.colorsUsed.includes(h)) {\n          color = h;\n          this.colorsUsed.push(h);\n        }\n      }\n      return color;\n    }\n  }, {\n    key: \"visitCompilationUnit\",\n    value: function visitCompilationUnit(ctx) {\n      this.visitChildren(ctx);\n      this.currentProcess.isActivated = false;\n    }\n  }, {\n    key: \"visitCompoundStatement\",\n    value: function () {\n      var _visitCompoundStatement = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(ctx) {\n        var process, processIndex;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.currentProcess.pid != 1 && ctx.parentCtx.constructor.name == \"StatementContext\" || ctx.parentCtx.constructor.name != \"FunctionDefinitionContext\")) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", this.visitChildren(ctx)[1]);\n            case 2:\n              this.visitChildren(ctx);\n              process = this.processList[1];\n              processIndex = 1;\n            case 5:\n              if (false) {}\n              if (!(processIndex > this.processList.length - 1)) {\n                _context.next = 8;\n                break;\n              }\n              return _context.abrupt(\"break\", 15);\n            case 8:\n              this.currentProcess = process;\n              this.visitChildren(this.blockItemList);\n              processIndex++;\n              this.currentProcess.isActivated = false;\n              process = this.processList[processIndex];\n              _context.next = 5;\n              break;\n            case 15:\n              document.getElementById(\"apagar\").setAttribute(\"disabled\", true);\n              document.getElementById(\"gerarArvore\").setAttribute(\"disabled\", true);\n              document.getElementById(\"limparConsole\").setAttribute(\"disabled\", true);\n\n              // Imprime no conssole\n              _context.next = 20;\n              return Promise.all(this.promisses);\n            case 20:\n              document.getElementById(\"apagar\").removeAttribute(\"disabled\");\n              document.getElementById(\"gerarArvore\").removeAttribute(\"disabled\");\n              document.getElementById(\"limparConsole\").removeAttribute(\"disabled\");\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function visitCompoundStatement(_x) {\n        return _visitCompoundStatement.apply(this, arguments);\n      }\n      return visitCompoundStatement;\n    }()\n  }, {\n    key: \"visitBlockItemList\",\n    value: function visitBlockItemList(ctx) {\n      if (!this.currentProcess.isActivated) {\n        return null;\n      }\n      if (ctx.parentCtx.parentCtx.constructor.name == \"FunctionDefinitionContext\") {\n        this.blockItemList = ctx;\n      }\n      this.currentBlockItemList = ctx;\n      var result = this.visitChildren(ctx);\n      if (ctx.parentCtx.parentCtx.constructor.name != \"FunctionDefinitionContext\") {\n        this.removeVariables(ctx);\n      }\n      return result;\n    }\n  }, {\n    key: \"visitBlockItem\",\n    value: function visitBlockItem(ctx) {\n      this.currentBlockItem = ctx;\n      if (this.currentProcess.blockItem == ctx) {\n        this.currentProcess.isSleeping = false;\n      }\n      return this.visitChildren(ctx);\n    }\n  }, {\n    key: \"visitExpressionStatement\",\n    value: function visitExpressionStatement(ctx) {\n      return this.visitChildren(ctx)[0];\n    }\n  }, {\n    key: \"visitDeclaration\",\n    value: function visitDeclaration(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      var result = this.visitChildren(ctx);\n      if (ctx.children.length == 2) {\n        var name = ctx.children[0].children[1].getText();\n        var type = ctx.children[0].children[0].getText();\n        if (!this.currentProcess.variables.get(name)) {\n          this.currentProcess.variables.set(name, {\n            type: type,\n            name: name,\n            value: null,\n            blockItem: this.currentBlockItemList\n          });\n        } else {\n          console.error(\"A vari\\xE1vel '\".concat(name, \"' j\\xE1 foi definida. Erro na fun\\xE7\\xE3o visitDeclaration. Linha \").concat(ctx.start.line, \".\"));\n        }\n      } else if (ctx.getText().includes(\"*\")) {\n        if (ctx.children[1].children.length == 1) {\n          var _name = ctx.children[1].children[0].children[0].children[1].getText();\n          var _type = ctx.children[0].children[0].getText();\n          if (!this.currentProcess.variables.get(_name)) {\n            this.currentProcess.variables.set(_name, {\n              type: _type,\n              name: _name,\n              value: null,\n              blockItem: this.currentBlockItemList\n            });\n          } else {\n            console.error(\"A vari\\xE1vel '\".concat(_name, \"' j\\xE1 foi definida. Erro na fun\\xE7\\xE3o visitDeclaration. Linha \").concat(ctx.start.line, \".\"));\n          }\n        } else {\n          var _type2 = ctx.children[0].getText();\n          var _iterator2 = _createForOfIteratorHelper(result[1]),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var variable = _step2.value;\n              if (!this.currentProcess.variables.get(variable.name)) {\n                variable.type = _type2;\n                variable.blockItem = this.currentBlockItemList;\n                this.currentProcess.variables.set(variable.name, variable);\n              } else {\n                console.error(\"A vari\\xE1vel '\".concat(variable.name, \"' j\\xE1 foi definida. Erro na fun\\xE7\\xE3o visitDeclaration. Linha \").concat(ctx.start.line, \".\"));\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } else {\n        var _type3 = ctx.children[0].getText();\n        var _iterator3 = _createForOfIteratorHelper(result[1]),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _variable = _step3.value;\n            if (!this.currentProcess.variables.get(_variable.name)) {\n              _variable.type = _type3;\n              _variable.blockItem = this.currentBlockItemList;\n              this.currentProcess.variables.set(_variable.name, _variable);\n            } else {\n              console.error(\"A vari\\xE1vel '\".concat(_variable.name, \"' j\\xE1 foi definida. Erro na fun\\xE7\\xE3o visitDeclaration. Linha \").concat(ctx.start.line, \".\"));\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n    }\n  }, {\n    key: \"visitInitDeclaratorList\",\n    value: function visitInitDeclaratorList(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      var result = this.visitChildren(ctx);\n      var newResult = [];\n      var _iterator4 = _createForOfIteratorHelper(result),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var r = _step4.value;\n          if (r != undefined) {\n            newResult.push(r);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return newResult;\n    }\n  }, {\n    key: \"visitInitDeclarator\",\n    value: function visitInitDeclarator(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      var result = this.visitChildren(ctx);\n      if (ctx.children.length > 1 && ctx.children.length < 4) {\n        result[0].value = result[2];\n      }\n      return result[0];\n    }\n  }, {\n    key: \"visitDeclarator\",\n    value: function visitDeclarator(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      var result = this.visitChildren(ctx);\n      if (ctx.getText().includes(\"*\")) {\n        return result[1];\n      }\n      return result[0];\n    }\n  }, {\n    key: \"visitForDeclaration\",\n    value: function visitForDeclaration(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      var result = this.visitChildren(ctx);\n      var resultVar = result[1][0];\n      if (ctx.children.length == 2) {\n        var name = ctx.children[1].children[0].children[0].getText();\n        var type = ctx.children[0].getText();\n        if (!this.currentProcess.variables.get(name)) {\n          var variable = {\n            type: type,\n            name: name,\n            value: null,\n            blockItem: this.currentIterationCtx ? this.currentIterationCtx : this.currentBlockItemList\n          };\n          if (resultVar) {\n            variable.value = resultVar.value;\n          }\n          this.currentProcess.variables.set(name, variable);\n          return variable;\n        } else {\n          console.error(\"A vari\\xE1vel '\".concat(name, \"' j\\xE1 foi definida. Erro na fun\\xE7\\xE3o visitDeclaration. Linha \").concat(ctx.start.line, \".\"));\n        }\n      } else {\n        var _type4 = ctx.children[0].getText();\n        var _iterator5 = _createForOfIteratorHelper(result[1]),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var _variable2 = _step5.value;\n            if (!this.currentProcess.variables.get(_variable2.name)) {\n              _variable2.type = _type4;\n              _variable2.blockItem = this.currentIterationCtx ? this.currentIterationCtx : this.currentBlockItemList;\n              this.currentProcess.variables.set(_variable2.name, _variable2);\n            } else {\n              console.error(\"A vari\\xE1vel '\".concat(_variable2.name, \"' j\\xE1 foi definida. Erro na fun\\xE7\\xE3o visitDeclaration. Linha \").concat(ctx.start.line, \".\"));\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n    }\n  }, {\n    key: \"visitDirectDeclarator\",\n    value: function visitDirectDeclarator(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      return {\n        type: null,\n        name: ctx.getText(),\n        value: null\n      };\n    }\n  }, {\n    key: \"visitInitializer\",\n    value: function visitInitializer(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      if (ctx.children.length > 1) {\n        console.error(\"Erro na fun\\xE7\\xE3o 'visitInitializer'. Essa express\\xE3o n\\xE3o est\\xE1 dispon\\xEDvel. Linha \".concat(ctx.start.line, \".\"));\n      }\n      return this.visitChildren(ctx)[0];\n    }\n  }, {\n    key: \"visitStatement\",\n    value: function visitStatement(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      if (this.currentProcess.pid != 1 && ctx.parentCtx.children.indexOf(ctx) == 6 && ctx.parentCtx.ifCondition) {\n        return null;\n      }\n      return this.visitChildren(ctx)[0];\n    }\n  }, {\n    key: \"visitIterationStatement\",\n    value: function visitIterationStatement(ctx) {\n      if (!this.currentProcess.isActivated) {\n        return null;\n      }\n\n      // Verifica se o processo ainda está \"dormindo\"\n      if (this.currentProcess.isSleeping) {\n        // Adiciona o ctx atual na primeira posição da fila\n        this.currentProcess.context.iterationsNotExecuted.unshift({\n          ctx: ctx,\n          visited: false\n        });\n        var result = this.visitChildren(ctx);\n\n        // Esta verificação é responsável por executar um IterationStatement que não foi executado\n        if (this.currentProcess.pid != 1 &&\n        // É um processo filho\n        this.currentProcess.isActivated &&\n        // O processo ainda está ativo\n        !this.currentProcess.isSleeping &&\n        // O processo não está \"dormindo\"\n        this.currentProcess.context.iterationsNotExecuted.length != 0 &&\n        // O número de iterações não executadas é > 0\n        this.currentProcess.context.iterationsNotExecuted[0].ctx == ctx &&\n        // A primeira iteração não executada da fila corresponde ao nó atual\n        !this.currentProcess.context.iterationsNotExecuted[0].visited // A primeira iteração da fila ainda não foi executada\n        ) {\n          this.currentProcess.context.iterationsNotExecuted[0].visited = true; // Altera o estado da iteração, para não entrar em loop\n          result = this.visitIterationStatement(ctx); // Chamada recursiva, para que, assim, todo o processo seja executado\n          this.removeIteration(ctx); // Remove a iteração da fila\n        }\n        return result;\n      }\n\n      // Significa que não possui uma iteração\n      if (ctx.children.length == 1) {\n        return this.visitChildren(ctx);\n      }\n      if (ctx.children[0].getText() == \"while\") {\n        var conditionState = this.visitChildren(ctx.children[2])[0];\n        var _result;\n        while (conditionState) {\n          _result = this.visitChildren(ctx.children[4]);\n          try {\n            conditionState = this.visitChildren(ctx.children[2])[0];\n          } catch (_unused) {\n            return null;\n          }\n        }\n        return _result;\n      } else if (ctx.children[0].getText() == \"for\") {\n        this.currentIterationCtx = ctx;\n        var forDecl;\n        if (this.currentProcess.pid == 1) {\n          var varName = ctx.children[2].children[0].children.length == 2 ? ctx.children[2].children[0].children[1].children[0].children[0].getText() : ctx.children[2].children[0].children[0].getText();\n          forDecl = this.currentProcess.variables.get(varName);\n          if (!forDecl) {\n            forDecl = this.visitForDeclaration(ctx.children[2].children[0]);\n          }\n        } else {\n          // Verifica se é realizada uma declaração de variável no for ou apenas atribuída uma variável\n          // Por exemplo, se foi realizado: for(int i = 0) ou apenas for (i), com i sendo uma variável já instanciada\n          var _varName = ctx.children[2].children[0].children.length == 2 ? ctx.children[2].children[0].children[1].children[0].children[0].getText() : ctx.children[2].children[0].children[0].getText();\n          forDecl = this.currentProcess.variables.get(_varName);\n          if (!forDecl) {\n            forDecl = this.visitForDeclaration(ctx.children[2].children[0]);\n          }\n        }\n        if (this.currentProcess.pid != 1 && this.currentProcess.context.iterationsNotExecuted.length != 0 && this.currentProcess.context.iterationsNotExecuted[0].ctx == ctx) {\n          this.visitUnaryExpression(ctx.children[2].children[4]);\n        }\n        var forExp = this.visitChildren(ctx.children[2].children[2])[0];\n        var _result2;\n        while (forExp) {\n          _result2 = this.visitChildren(ctx.children[4]);\n          this.visitChildren(ctx.children[2].children[4]);\n          try {\n            forExp = this.visitChildren(ctx.children[2].children[2])[0];\n          } catch (_unused2) {\n            return null;\n          }\n        }\n        this.currentProcess.variables[\"delete\"](forDecl.name);\n        this.currentIterationCtx = null;\n        return _result2;\n      }\n      return this.visitChildren(ctx);\n    }\n  }, {\n    key: \"visitSelectionStatement\",\n    value: function visitSelectionStatement(ctx) {\n      if (!this.currentProcess.isActivated) {\n        return null;\n      }\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      if (ctx.children[0].getText() == \"if\") {\n        var state = this.visitChildren(ctx.children[2])[0];\n        if (state) {\n          ctx.ifCondition = true;\n          var result = this.visitChildren(ctx.children[4]);\n          ctx.ifCondition = false;\n          return result;\n        } else if (ctx.children.length == 7) {\n          return this.visitChildren(ctx.children[6]);\n        }\n        return null;\n      }\n      return ctx.visitChildren(ctx)[0];\n    }\n  }, {\n    key: \"visitExpression\",\n    value: function visitExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      if (ctx.children.length > 1) {\n        console.error(\"Erro na fun\\xE7\\xE3o 'visitExpression'. Essa express\\xE3o n\\xE3o est\\xE1 dispon\\xEDvel. Linha \".concat(ctx.start.line));\n      }\n      return this.visitChildren(ctx)[0];\n    }\n  }, {\n    key: \"visitAssignmentExpression\",\n    value: function visitAssignmentExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      var result = this.visitChildren(ctx);\n      if (ctx.children.length > 1 && ctx.children.length < 4) {\n        var elements = ctx.children;\n        var variable = this.currentProcess.variables.get(elements[0].getText());\n        var number = Number(elements[0].getText());\n        if (variable) {\n          var operator = elements[1].getText();\n          try {\n            switch (operator) {\n              case \"=\":\n                variable.value = result[2];\n                break;\n              case \"*=\":\n                variable.value *= result[2];\n                break;\n              case \"/=\":\n                variable.value /= result[2];\n                break;\n              case \"%=\":\n                variable.value %= result[2];\n                break;\n              case \"+=\":\n                variable.value += result[2];\n                break;\n              case \"-=\":\n                variable.value -= result[2];\n                break;\n              default:\n                console.error(\"Logical And\", elements[i].getText());\n                break;\n            }\n          } catch (err) {\n            console.error(\"Erro ao tentar usar o operador \".concat(operator, \". Linha \").concat(ctx.start.line));\n          }\n          return variable.value;\n        } else if (number.toString() != \"NaN\") {\n          var _operator = elements[1].getText();\n          try {\n            switch (_operator) {\n              case \"=\":\n                number = result[2];\n                break;\n              case \"*=\":\n                number *= result[2];\n                break;\n              case \"/=\":\n                number /= result[2];\n                break;\n              case \"%=\":\n                number %= result[2];\n                break;\n              case \"+=\":\n                number += result[2];\n                break;\n              case \"-=\":\n                number -= result[2];\n                break;\n              default:\n                console.error(\"Logical And\", elements[i].getText());\n                break;\n            }\n          } catch (err) {\n            console.error(\"Erro ao tentar usar o operador \".concat(_operator, \". Linha \").concat(ctx.start.line));\n          }\n          return number;\n        } else {\n          console.error(\"Erro ao executar AssignmentExpression\");\n        }\n      } else if (ctx.children.length > 3) {\n        console.error(\"Erro ao executar AssignmentExpression. Sintaxe errada.\");\n      }\n      return result[0];\n    }\n  }, {\n    key: \"visitConditionalExpression\",\n    value: function visitConditionalExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      if (ctx.children.length > 1) {\n        console.error(\"Erro na fun\\xE7\\xE3o 'visitConditionalExpression'. Essa express\\xE3o n\\xE3o est\\xE1 dispon\\xEDvel. Linha \".concat(ctx.start.line));\n      }\n      return this.visitChildren(ctx)[0];\n    }\n  }, {\n    key: \"visitLogicalOrExpression\",\n    value: function visitLogicalOrExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      var result = this.visitChildren(ctx);\n      if (ctx.children.length > 1) {\n        var state = result[0];\n        for (var _i = 0; _i < ctx.children.length; _i++) {\n          if ((_i + 1) % 2 == 0) {\n            var elements = ctx.children;\n            var operator = elements[_i].getText();\n            switch (operator) {\n              case \"||\":\n                state = state || result[_i + 1];\n                break;\n              default:\n                break;\n            }\n            _i++;\n          }\n        }\n        return state;\n      }\n      return result[0];\n    }\n  }, {\n    key: \"visitLogicalAndExpression\",\n    value: function visitLogicalAndExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      var result = this.visitChildren(ctx);\n      if (ctx.children.length > 1) {\n        var state = result[0];\n        for (var _i2 = 0; _i2 < ctx.children.length; _i2++) {\n          if ((_i2 + 1) % 2 == 0) {\n            var elements = ctx.children;\n            var operator = elements[_i2].getText();\n            switch (operator) {\n              case \"&&\":\n                state = state && result[_i2 + 1];\n                break;\n              default:\n                break;\n            }\n            _i2++;\n          }\n        }\n        return state;\n      }\n      return result[0];\n    }\n  }, {\n    key: \"visitInclusiveOrExpression\",\n    value: function visitInclusiveOrExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      if (ctx.children.length > 1) {\n        console.error(\"Erro na fun\\xE7\\xE3o 'visitInclusiveOrExpression'. Essa express\\xE3o n\\xE3o est\\xE1 dispon\\xEDvel. Linha \".concat(ctx.start.line));\n      }\n      return this.visitChildren(ctx)[0];\n    }\n  }, {\n    key: \"visitExclusiveOrExpression\",\n    value: function visitExclusiveOrExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      if (ctx.children.length > 1) {\n        console.error(\"Erro na fun\\xE7\\xE3o 'visitExclusiveOrExpression'. Essa express\\xE3o Cast n\\xE3o est\\xE1 dispon\\xEDvel. Linha \".concat(ctx.start.line));\n      }\n      return this.visitChildren(ctx)[0];\n    }\n  }, {\n    key: \"visitAndExpression\",\n    value: function visitAndExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      if (ctx.children.length > 1) {\n        console.error(\"Erro na fun\\xE7\\xE3o 'visitAndExpression'. Essa express\\xE3o  n\\xE3o est\\xE1 dispon\\xEDvel. Linha \".concat(ctx.start.line));\n      }\n      return this.visitChildren(ctx)[0];\n    }\n  }, {\n    key: \"visitEqualityExpression\",\n    value: function visitEqualityExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      var result = this.visitChildren(ctx);\n      if (ctx.children.length > 1) {\n        var state = result[0];\n        for (var _i3 = 0; _i3 < ctx.children.length; _i3++) {\n          if ((_i3 + 1) % 2 == 0) {\n            var elements = ctx.children;\n            var operator = elements[_i3].getText();\n            switch (operator) {\n              case \"==\":\n                state = state == result[_i3 + 1];\n                break;\n              case \"!=\":\n                state = state != result[_i3 + 1];\n                break;\n              default:\n                break;\n            }\n            _i3++;\n          }\n        }\n        return state;\n      }\n      return result[0];\n    }\n  }, {\n    key: \"visitRelationalExpression\",\n    value: function visitRelationalExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      var result = this.visitChildren(ctx);\n      if (ctx.children.length > 1) {\n        var state = result[0];\n        for (var _i4 = 0; _i4 < ctx.children.length; _i4++) {\n          if ((_i4 + 1) % 2 == 0) {\n            var elements = ctx.children;\n            var operator = elements[_i4].getText();\n            switch (operator) {\n              case \"<\":\n                state = state < result[_i4 + 1];\n                break;\n              case \">\":\n                state = state > result[_i4 + 1];\n                break;\n              case \"<=\":\n                state = state <= result[_i4 + 1];\n                break;\n              case \">=\":\n                state = state >= result[_i4 + 1];\n                break;\n              default:\n                break;\n            }\n            _i4++;\n          }\n        }\n        return state;\n      }\n      return result[0];\n    }\n  }, {\n    key: \"visitShiftExpression\",\n    value: function visitShiftExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      if (ctx.children.length > 1) {\n        console.error(\"Erro na fun\\xE7\\xE3o 'visitShiftExpression'. Express\\xE3o de Shift n\\xE3o est\\xE1 dispon\\xEDvel. Linha \".concat(ctx.start.line));\n      }\n      return this.visitChildren(ctx)[0];\n    }\n  }, {\n    key: \"visitAdditiveExpression\",\n    value: function visitAdditiveExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      var result = this.visitChildren(ctx);\n      if (ctx.children.length > 1) {\n        var product = result[0];\n        for (var _i5 = 0; _i5 < ctx.children.length; _i5++) {\n          if ((_i5 + 1) % 2 == 0) {\n            var elements = ctx.children;\n            var operator = elements[_i5].getText();\n            switch (operator) {\n              case \"+\":\n                product += result[_i5 + 1];\n                break;\n              case \"-\":\n                product -= result[_i5 + 1];\n                break;\n              default:\n                break;\n            }\n            _i5++;\n          }\n        }\n        return product;\n      }\n      return result[0];\n    }\n  }, {\n    key: \"visitMultiplicativeExpression\",\n    value: function visitMultiplicativeExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      var result = this.visitChildren(ctx);\n      if (ctx.children.length > 1) {\n        var product = result[0];\n        for (var _i6 = 0; _i6 < ctx.children.length; _i6++) {\n          if ((_i6 + 1) % 2 == 0) {\n            var elements = ctx.children;\n            var operator = elements[_i6].getText();\n            switch (operator) {\n              case \"*\":\n                product *= result[_i6 + 1];\n                break;\n              case \"/\":\n                product /= result[_i6 + 1];\n                break;\n              case \"%\":\n                product %= result[_i6 + 1];\n                break;\n              default:\n                break;\n            }\n            _i6++;\n          }\n        }\n        return product;\n      }\n      return result[0];\n    }\n  }, {\n    key: \"visitCastExpression\",\n    value: function visitCastExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      if (ctx.children.length > 1) {\n        console.error(\"Erro na fun\\xE7\\xE3o 'visitCastExpression'. Express\\xE3o de Cast n\\xE3o est\\xE1 dispon\\xEDvel. Linha \".concat(ctx.start.line));\n      }\n      return this.visitChildren(ctx)[0];\n    }\n  }, {\n    key: \"visitUnaryExpression\",\n    value: function visitUnaryExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      var result = this.visitChildren(ctx);\n      var element = result[0];\n      var variable = result[1];\n      if (ctx.children.length === 2) {\n        if (_typeof(element) === Number) {\n          switch (ctx.children[0].getText()) {\n            case \"++\":\n              +element, _readOnlyError(\"element\");\n              break;\n            case \"--\":\n              +element, _readOnlyError(\"element\");\n              break;\n            default:\n              console.error(\"Não foi possível processar a informação:\", ctx.children[0].getText());\n          }\n          return element;\n        } else if (_typeof(variable) === _typeof(Object())) {\n          switch (ctx.children[0].getText()) {\n            case \"++\":\n              variable.value++;\n              break;\n            case \"--\":\n              variable.value--;\n              break;\n            default:\n              console.error(\"Não foi possível processar a informação:\", ctx.children[0].getText());\n          }\n          return variable.value;\n        } else if (element == null) {\n          console.error(\"A vari\\xE1vel \\\"\".concat(ctx.children[0].getText(), \"\\\" n\\xE3o foi iniciada. N\\xE3o \\xE9 poss\\xEDvel realizar esse tipo de opera\\xE7\\xE3o antes da inicializa\\xE7\\xE3o da vari\\xE1vel. Erro Linha \").concat(ctx.start.line, \".\"));\n        } else {\n          console.error(\"O termo \\\"\".concat(ctx.children[1].getText(), \"\\\" n\\xE3o foi definida ou n\\xE3o \\xE9 compat\\xEDvel com a opera\\xE7\\xE3o. Erro Linha \").concat(ctx.start.line, \".\"));\n        }\n      } else if (_typeof(element) == _typeof(Object()) && element != null) {\n        return element.value;\n      }\n      return element;\n    }\n  }, {\n    key: \"visitPostfixExpression\",\n    value: function visitPostfixExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      var result = this.visitChildren(ctx);\n      var element = result[0];\n      if (this.currentProcess.isActivated) {\n        if (ctx.getText() === \"exit(0)\") {\n          this.currentProcess.isActivated = false;\n          return null;\n        } else if (ctx.getText() === \"fork()\") {\n          if (!this.currentProcess.forkEnabled) {\n            this.currentProcess.forkEnabled = true;\n            return 0;\n          }\n          return this.createProcess();\n        } else if (element === \"printf\" || element === \"puts\") {\n          var argumentsList = result[2].filter(function (e) {\n            return e !== undefined;\n          });\n          var output = argumentsList[0];\n          var args = argumentsList.slice(1);\n          if (output.includes(\"%\")) {\n            var pos = 0;\n            output = output.replace(/%[sd]/g, function (match) {\n              var arg = args[pos++];\n              if (match === \"%s\" && typeof arg !== \"string\") {\n                console.error(\"Tipo de argumento incorreto para %s: \".concat(_typeof(arg), \". Linha \").concat(ctx.start.line));\n                throw new Error(\"Tipo de argumento incorreto para %s: \".concat(_typeof(arg), \". Linha \").concat(ctx.start.line));\n              } else if (match === \"%d\" && typeof arg !== \"number\") {\n                console.error(\"Tipo de argumento incorreto para %d: \".concat(_typeof(arg), \". Linha \").concat(ctx.start.line));\n                throw new Error(\"Tipo de argumento incorreto para %d: \".concat(_typeof(arg), \". Linha \").concat(ctx.start.line));\n              }\n              if (match === \"%s\") {\n                return String(arg);\n              } else if (match === \"%d\") {\n                return Number(arg);\n              }\n              return match;\n            });\n          }\n          output = output.trim().replaceAll('\"', \"\").replaceAll(\"\\\\n\", \"\");\n          this.promisses.push(this.promiseNode(output, this.currentProcess.color, this.currentProcess.messageSequence));\n          this.currentProcess.messageSequence++;\n        } else if (ctx.getText() === \"getpid()\") {\n          return this.currentProcess.tree.pid;\n        } else if (ctx.getText() === \"getppid()\") {\n          return this.currentProcess.tree.ppid;\n        } else if (element === \"sleep\") {\n          this.currentProcess.messageSequence += 10 * parseInt(result[2]);\n        } else if (ctx.children.length === 2) {\n          if (_typeof(element) === _typeof(Number())) {\n            switch (ctx.children[1].getText()) {\n              case \"++\":\n                element++;\n                break;\n              case \"--\":\n                element--;\n                break;\n              default:\n                console.error(\"Não foi possível processar a informação:\", ctx.children[1].getText());\n            }\n            return element;\n          } else if (_typeof(element) === _typeof(Object())) {\n            switch (ctx.children[1].getText()) {\n              case \"++\":\n                element.value++;\n                break;\n              case \"--\":\n                element.value--;\n                break;\n              default:\n                console.error(\"Não foi possível processar a informação:\", ctx.children[1].getText());\n            }\n            return element.value;\n          } else if (element == null) {\n            console.error(\"A vari\\xE1vel \\\"\".concat(ctx.children[0].getText(), \"\\\" n\\xE3o foi iniciada. N\\xE3o \\xE9 poss\\xEDvel realizar esse tipo de opera\\xE7\\xE3o antes da inicializa\\xE7\\xE3o da vari\\xE1vel. Erro Linha \").concat(ctx.start.line, \".\"));\n          } else {\n            console.error(\"O termo \\\"\".concat(ctx.children[0].getText(), \"\\\" n\\xE3o foi definida ou n\\xE3o \\xE9 compat\\xEDvel com a opera\\xE7\\xE3o. Erro Linha \").concat(ctx.start.line, \".\"));\n          }\n        } else {\n          return element;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"visitPrimaryExpression\",\n    value: function visitPrimaryExpression(ctx) {\n      if (this.currentProcess.isSleeping) {\n        return this.visitChildren(ctx);\n      }\n      if (ctx.children.length > 1) {\n        var element = ctx.children;\n        if (element[0].getText() === \"(\" && element[2].getText() === \")\") {\n          var result = this.visitChildren(element[1]);\n          return result[0];\n        } else {\n          console.error(\"Erro na fun\\xE7\\xE3o '\".concat(ctx.constructor.name, \"'. Essa express\\xE3o n\\xE3o est\\xE1 dispon\\xEDvel. Linha \").concat(ctx.start.line));\n          return this.visitChildren(ctx);\n        }\n      } else {\n        var variable = this.currentProcess.variables.get(ctx.getText());\n        var number = Number(ctx.getText());\n        if (variable) {\n          return variable;\n        } else if (number.toString() != \"NaN\") {\n          return number;\n        }\n        return ctx.getText();\n      }\n    }\n  }]);\n}(_CVisitor__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n\n\n//# sourceURL=webpack://ForkJS/./src/parser/CVisitorImplemented.js?");

/***/ }),

/***/ "./src/parser/Process.js":
/*!*******************************!*\
  !*** ./src/parser/Process.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Process: () => (/* binding */ Process)\n/* harmony export */ });\n/* harmony import */ var _ForkTree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ForkTree */ \"./src/ForkTree/index.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Process = /*#__PURE__*/_createClass(\n/**\r\n *\r\n * @param {blockItem} number\r\n * @param {ForkTree} node\r\n */\nfunction Process(blockItem, node) {\n  _classCallCheck(this, Process);\n  this.blockItem = blockItem;\n  this.variables = new Map();\n  this.isActivated = true;\n  this.isSleeping = true;\n  this.tree = node;\n  this.forkEnabled = false;\n  this.pid = node.pid;\n  this.context = {};\n  this.messageSequence = 0;\n  this.color;\n});\n\n//# sourceURL=webpack://ForkJS/./src/parser/Process.js?");

/***/ }),

/***/ "./node_modules/antlr4/dist/antlr4.web.mjs":
/*!*************************************************!*\
  !*** ./node_modules/antlr4/dist/antlr4.web.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ATN: () => (/* binding */ i),\n/* harmony export */   ATNDeserializer: () => (/* binding */ r),\n/* harmony export */   BailErrorStrategy: () => (/* binding */ o),\n/* harmony export */   CharStream: () => (/* binding */ a),\n/* harmony export */   CharStreams: () => (/* binding */ l),\n/* harmony export */   CommonToken: () => (/* binding */ h),\n/* harmony export */   CommonTokenStream: () => (/* binding */ c),\n/* harmony export */   DFA: () => (/* binding */ u),\n/* harmony export */   DiagnosticErrorListener: () => (/* binding */ d),\n/* harmony export */   ErrorListener: () => (/* binding */ p),\n/* harmony export */   FailedPredicateException: () => (/* binding */ g),\n/* harmony export */   InputStream: () => (/* binding */ f),\n/* harmony export */   Interval: () => (/* binding */ x),\n/* harmony export */   IntervalSet: () => (/* binding */ T),\n/* harmony export */   LL1Analyzer: () => (/* binding */ S),\n/* harmony export */   Lexer: () => (/* binding */ m),\n/* harmony export */   LexerATNSimulator: () => (/* binding */ E),\n/* harmony export */   NoViableAltException: () => (/* binding */ _),\n/* harmony export */   ParseTreeListener: () => (/* binding */ A),\n/* harmony export */   ParseTreeVisitor: () => (/* binding */ C),\n/* harmony export */   ParseTreeWalker: () => (/* binding */ N),\n/* harmony export */   Parser: () => (/* binding */ I),\n/* harmony export */   ParserATNSimulator: () => (/* binding */ y),\n/* harmony export */   ParserRuleContext: () => (/* binding */ k),\n/* harmony export */   PredictionContextCache: () => (/* binding */ L),\n/* harmony export */   PredictionMode: () => (/* binding */ O),\n/* harmony export */   RecognitionException: () => (/* binding */ R),\n/* harmony export */   RuleContext: () => (/* binding */ v),\n/* harmony export */   RuleNode: () => (/* binding */ w),\n/* harmony export */   TerminalNode: () => (/* binding */ P),\n/* harmony export */   Token: () => (/* binding */ D),\n/* harmony export */   arrayToString: () => (/* binding */ b),\n/* harmony export */   \"default\": () => (/* binding */ F)\n/* harmony export */ });\nvar t={92:()=>{}},e={};function n(s){var i=e[s];if(void 0!==i)return i.exports;var r=e[s]={exports:{}};return t[s](r,r.exports,n),r.exports}n.d=(t,e)=>{for(var s in e)n.o(e,s)&&!n.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var s={};(()=>{n.d(s,{dx:()=>$,q2:()=>Lt,FO:()=>Ce,xf:()=>ye,Gy:()=>Re,s4:()=>Pt,c7:()=>De,_7:()=>le,gp:()=>me,cK:()=>Ot,zs:()=>Te,AV:()=>ye,Xp:()=>m,VS:()=>E,ul:()=>j,hW:()=>Ut,x1:()=>Xt,z5:()=>ee,oN:()=>de,TB:()=>pe,u1:()=>ge,_b:()=>Fe,$F:()=>se,_T:()=>Be,db:()=>ie,Zx:()=>te,_x:()=>Ft,r8:()=>M,JI:()=>w,TP:()=>P,WU:()=>t,Nj:()=>c,ZP:()=>Ye});class t{constructor(){this.source=null,this.type=null,this.channel=null,this.start=null,this.stop=null,this.tokenIndex=null,this.line=null,this.column=null,this._text=null}getTokenSource(){return this.source[0]}getInputStream(){return this.source[1]}get text(){return this._text}set text(t){this._text=t}}function e(t,e){if(!Array.isArray(t)||!Array.isArray(e))return!1;if(t===e)return!0;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(!(t[n]===e[n]||t[n].equals&&t[n].equals(e[n])))return!1;return!0}t.INVALID_TYPE=0,t.EPSILON=-2,t.MIN_USER_TOKEN_TYPE=1,t.EOF=-1,t.DEFAULT_CHANNEL=0,t.HIDDEN_CHANNEL=1;const i=Math.round(Math.random()*Math.pow(2,32));function r(t){if(!t)return 0;const e=typeof t,n=\"string\"===e?t:!(\"object\"!==e||!t.toString)&&t.toString();if(!n)return 0;let s,r;const o=3&n.length,a=n.length-o;let l=i;const h=3432918353,c=461845907;let u=0;for(;u<a;)r=255&n.charCodeAt(u)|(255&n.charCodeAt(++u))<<8|(255&n.charCodeAt(++u))<<16|(255&n.charCodeAt(++u))<<24,++u,r=(65535&r)*h+(((r>>>16)*h&65535)<<16)&4294967295,r=r<<15|r>>>17,r=(65535&r)*c+(((r>>>16)*c&65535)<<16)&4294967295,l^=r,l=l<<13|l>>>19,s=5*(65535&l)+((5*(l>>>16)&65535)<<16)&4294967295,l=27492+(65535&s)+((58964+(s>>>16)&65535)<<16);switch(r=0,o){case 3:r^=(255&n.charCodeAt(u+2))<<16;case 2:r^=(255&n.charCodeAt(u+1))<<8;case 1:r^=255&n.charCodeAt(u),r=(65535&r)*h+(((r>>>16)*h&65535)<<16)&4294967295,r=r<<15|r>>>17,r=(65535&r)*c+(((r>>>16)*c&65535)<<16)&4294967295,l^=r}return l^=n.length,l^=l>>>16,l=2246822507*(65535&l)+((2246822507*(l>>>16)&65535)<<16)&4294967295,l^=l>>>13,l=3266489909*(65535&l)+((3266489909*(l>>>16)&65535)<<16)&4294967295,l^=l>>>16,l>>>0}class o{constructor(){this.count=0,this.hash=0}update(){for(let t=0;t<arguments.length;t++){const e=arguments[t];if(null!=e)if(Array.isArray(e))this.update.apply(this,e);else{let t=0;switch(typeof e){case\"undefined\":case\"function\":continue;case\"number\":case\"boolean\":t=e;break;case\"string\":t=r(e);break;default:e.updateHashCode?e.updateHashCode(this):console.log(\"No updateHashCode for \"+e.toString());continue}t*=3432918353,t=t<<15|t>>>17,t*=461845907,this.count=this.count+1;let n=this.hash^t;n=n<<13|n>>>19,n=5*n+3864292196,this.hash=n}}}finish(){let t=this.hash^4*this.count;return t^=t>>>16,t*=2246822507,t^=t>>>13,t*=3266489909,t^=t>>>16,t}static hashStuff(){const t=new o;return t.update.apply(t,arguments),t.finish()}}function a(t){return t?\"string\"==typeof t?r(t):t.hashCode():-1}function l(t,e){return t?t.equals(e):t===e}function h(t){return null===t?\"null\":t}function c(t){return Array.isArray(t)?\"[\"+t.map(h).join(\", \")+\"]\":\"null\"}const u=\"h-\";class d{constructor(t,e){this.data={},this.hashFunction=t||a,this.equalsFunction=e||l}add(t){const e=u+this.hashFunction(t);if(e in this.data){const n=this.data[e];for(let e=0;e<n.length;e++)if(this.equalsFunction(t,n[e]))return n[e];return n.push(t),t}return this.data[e]=[t],t}has(t){return null!=this.get(t)}get(t){const e=u+this.hashFunction(t);if(e in this.data){const n=this.data[e];for(let e=0;e<n.length;e++)if(this.equalsFunction(t,n[e]))return n[e]}return null}values(){return Object.keys(this.data).filter((t=>t.startsWith(u))).flatMap((t=>this.data[t]),this)}toString(){return c(this.values())}get length(){return Object.keys(this.data).filter((t=>t.startsWith(u))).map((t=>this.data[t].length),this).reduce(((t,e)=>t+e),0)}}class p{hashCode(){const t=new o;return this.updateHashCode(t),t.finish()}evaluate(t,e){}evalPrecedence(t,e){return this}static andContext(t,e){if(null===t||t===p.NONE)return e;if(null===e||e===p.NONE)return t;const n=new g(t,e);return 1===n.opnds.length?n.opnds[0]:n}static orContext(t,e){if(null===t)return e;if(null===e)return t;if(t===p.NONE||e===p.NONE)return p.NONE;const n=new f(t,e);return 1===n.opnds.length?n.opnds[0]:n}}class g extends p{constructor(t,e){super();const n=new d;t instanceof g?t.opnds.map((function(t){n.add(t)})):n.add(t),e instanceof g?e.opnds.map((function(t){n.add(t)})):n.add(e);const s=x(n);if(s.length>0){let t=null;s.map((function(e){(null===t||e.precedence<t.precedence)&&(t=e)})),n.add(t)}this.opnds=Array.from(n.values())}equals(t){return this===t||t instanceof g&&e(this.opnds,t.opnds)}updateHashCode(t){t.update(this.opnds,\"AND\")}evaluate(t,e){for(let n=0;n<this.opnds.length;n++)if(!this.opnds[n].evaluate(t,e))return!1;return!0}evalPrecedence(t,e){let n=!1;const s=[];for(let i=0;i<this.opnds.length;i++){const r=this.opnds[i],o=r.evalPrecedence(t,e);if(n|=o!==r,null===o)return null;o!==p.NONE&&s.push(o)}if(!n)return this;if(0===s.length)return p.NONE;let i=null;return s.map((function(t){i=null===i?t:p.andContext(i,t)})),i}toString(){const t=this.opnds.map((t=>t.toString()));return(t.length>3?t.slice(3):t).join(\"&&\")}}class f extends p{constructor(t,e){super();const n=new d;t instanceof f?t.opnds.map((function(t){n.add(t)})):n.add(t),e instanceof f?e.opnds.map((function(t){n.add(t)})):n.add(e);const s=x(n);if(s.length>0){const t=s.sort((function(t,e){return t.compareTo(e)})),e=t[t.length-1];n.add(e)}this.opnds=Array.from(n.values())}equals(t){return this===t||t instanceof f&&e(this.opnds,t.opnds)}updateHashCode(t){t.update(this.opnds,\"OR\")}evaluate(t,e){for(let n=0;n<this.opnds.length;n++)if(this.opnds[n].evaluate(t,e))return!0;return!1}evalPrecedence(t,e){let n=!1;const s=[];for(let i=0;i<this.opnds.length;i++){const r=this.opnds[i],o=r.evalPrecedence(t,e);if(n|=o!==r,o===p.NONE)return p.NONE;null!==o&&s.push(o)}if(!n)return this;if(0===s.length)return null;return s.map((function(t){return t})),null}toString(){const t=this.opnds.map((t=>t.toString()));return(t.length>3?t.slice(3):t).join(\"||\")}}function x(t){const e=[];return t.values().map((function(t){t instanceof p.PrecedencePredicate&&e.push(t)})),e}function T(t,e){if(null===t){const t={state:null,alt:null,context:null,semanticContext:null};return e&&(t.reachesIntoOuterContext=0),t}{const n={};return n.state=t.state||null,n.alt=void 0===t.alt?null:t.alt,n.context=t.context||null,n.semanticContext=t.semanticContext||null,e&&(n.reachesIntoOuterContext=t.reachesIntoOuterContext||0,n.precedenceFilterSuppressed=t.precedenceFilterSuppressed||!1),n}}class S{constructor(t,e){this.checkContext(t,e),t=T(t),e=T(e,!0),this.state=null!==t.state?t.state:e.state,this.alt=null!==t.alt?t.alt:e.alt,this.context=null!==t.context?t.context:e.context,this.semanticContext=null!==t.semanticContext?t.semanticContext:null!==e.semanticContext?e.semanticContext:p.NONE,this.reachesIntoOuterContext=e.reachesIntoOuterContext,this.precedenceFilterSuppressed=e.precedenceFilterSuppressed}checkContext(t,e){null!==t.context&&void 0!==t.context||null!==e&&null!==e.context&&void 0!==e.context||(this.context=null)}hashCode(){const t=new o;return this.updateHashCode(t),t.finish()}updateHashCode(t){t.update(this.state.stateNumber,this.alt,this.context,this.semanticContext)}equals(t){return this===t||t instanceof S&&this.state.stateNumber===t.state.stateNumber&&this.alt===t.alt&&(null===this.context?null===t.context:this.context.equals(t.context))&&this.semanticContext.equals(t.semanticContext)&&this.precedenceFilterSuppressed===t.precedenceFilterSuppressed}hashCodeForConfigSet(){const t=new o;return t.update(this.state.stateNumber,this.alt,this.semanticContext),t.finish()}equalsForConfigSet(t){return this===t||t instanceof S&&this.state.stateNumber===t.state.stateNumber&&this.alt===t.alt&&this.semanticContext.equals(t.semanticContext)}toString(){return\"(\"+this.state+\",\"+this.alt+(null!==this.context?\",[\"+this.context.toString()+\"]\":\"\")+(this.semanticContext!==p.NONE?\",\"+this.semanticContext.toString():\"\")+(this.reachesIntoOuterContext>0?\",up=\"+this.reachesIntoOuterContext:\"\")+\")\"}}class m{constructor(t,e){this.start=t,this.stop=e}clone(){return new m(this.start,this.stop)}contains(t){return t>=this.start&&t<this.stop}toString(){return this.start===this.stop-1?this.start.toString():this.start.toString()+\"..\"+(this.stop-1).toString()}get length(){return this.stop-this.start}}m.INVALID_INTERVAL=new m(-1,-2);class E{constructor(){this.intervals=null,this.readOnly=!1}first(e){return null===this.intervals||0===this.intervals.length?t.INVALID_TYPE:this.intervals[0].start}addOne(t){this.addInterval(new m(t,t+1))}addRange(t,e){this.addInterval(new m(t,e+1))}addInterval(t){if(null===this.intervals)this.intervals=[],this.intervals.push(t.clone());else{for(let e=0;e<this.intervals.length;e++){const n=this.intervals[e];if(t.stop<n.start)return void this.intervals.splice(e,0,t);if(t.stop===n.start)return void(this.intervals[e]=new m(t.start,n.stop));if(t.start<=n.stop)return this.intervals[e]=new m(Math.min(n.start,t.start),Math.max(n.stop,t.stop)),void this.reduce(e)}this.intervals.push(t.clone())}}addSet(t){return null!==t.intervals&&t.intervals.forEach((t=>this.addInterval(t)),this),this}reduce(t){if(t<this.intervals.length-1){const e=this.intervals[t],n=this.intervals[t+1];e.stop>=n.stop?(this.intervals.splice(t+1,1),this.reduce(t)):e.stop>=n.start&&(this.intervals[t]=new m(e.start,n.stop),this.intervals.splice(t+1,1))}}complement(t,e){const n=new E;return n.addInterval(new m(t,e+1)),null!==this.intervals&&this.intervals.forEach((t=>n.removeRange(t))),n}contains(t){if(null===this.intervals)return!1;for(let e=0;e<this.intervals.length;e++)if(this.intervals[e].contains(t))return!0;return!1}removeRange(t){if(t.start===t.stop-1)this.removeOne(t.start);else if(null!==this.intervals){let e=0;for(let n=0;n<this.intervals.length;n++){const n=this.intervals[e];if(t.stop<=n.start)return;if(t.start>n.start&&t.stop<n.stop){this.intervals[e]=new m(n.start,t.start);const s=new m(t.stop,n.stop);return void this.intervals.splice(e,0,s)}t.start<=n.start&&t.stop>=n.stop?(this.intervals.splice(e,1),e-=1):t.start<n.stop?this.intervals[e]=new m(n.start,t.start):t.stop<n.stop&&(this.intervals[e]=new m(t.stop,n.stop)),e+=1}}}removeOne(t){if(null!==this.intervals)for(let e=0;e<this.intervals.length;e++){const n=this.intervals[e];if(t<n.start)return;if(t===n.start&&t===n.stop-1)return void this.intervals.splice(e,1);if(t===n.start)return void(this.intervals[e]=new m(n.start+1,n.stop));if(t===n.stop-1)return void(this.intervals[e]=new m(n.start,n.stop-1));if(t<n.stop-1){const s=new m(n.start,t);return n.start=t+1,void this.intervals.splice(e,0,s)}}}toString(t,e,n){return t=t||null,e=e||null,n=n||!1,null===this.intervals?\"{}\":null!==t||null!==e?this.toTokenString(t,e):n?this.toCharString():this.toIndexString()}toCharString(){const e=[];for(let n=0;n<this.intervals.length;n++){const s=this.intervals[n];s.stop===s.start+1?s.start===t.EOF?e.push(\"<EOF>\"):e.push(\"'\"+String.fromCharCode(s.start)+\"'\"):e.push(\"'\"+String.fromCharCode(s.start)+\"'..'\"+String.fromCharCode(s.stop-1)+\"'\")}return e.length>1?\"{\"+e.join(\", \")+\"}\":e[0]}toIndexString(){const e=[];for(let n=0;n<this.intervals.length;n++){const s=this.intervals[n];s.stop===s.start+1?s.start===t.EOF?e.push(\"<EOF>\"):e.push(s.start.toString()):e.push(s.start.toString()+\"..\"+(s.stop-1).toString())}return e.length>1?\"{\"+e.join(\", \")+\"}\":e[0]}toTokenString(t,e){const n=[];for(let s=0;s<this.intervals.length;s++){const i=this.intervals[s];for(let s=i.start;s<i.stop;s++)n.push(this.elementName(t,e,s))}return n.length>1?\"{\"+n.join(\", \")+\"}\":n[0]}elementName(e,n,s){return s===t.EOF?\"<EOF>\":s===t.EPSILON?\"<EPSILON>\":e[s]||n[s]}get length(){return this.intervals.map((t=>t.length)).reduce(((t,e)=>t+e))}}class _{constructor(){this.atn=null,this.stateNumber=_.INVALID_STATE_NUMBER,this.stateType=null,this.ruleIndex=0,this.epsilonOnlyTransitions=!1,this.transitions=[],this.nextTokenWithinRule=null}toString(){return this.stateNumber}equals(t){return t instanceof _&&this.stateNumber===t.stateNumber}isNonGreedyExitState(){return!1}addTransition(t,e){void 0===e&&(e=-1),0===this.transitions.length?this.epsilonOnlyTransitions=t.isEpsilon:this.epsilonOnlyTransitions!==t.isEpsilon&&(this.epsilonOnlyTransitions=!1),-1===e?this.transitions.push(t):this.transitions.splice(e,1,t)}}_.INVALID_TYPE=0,_.BASIC=1,_.RULE_START=2,_.BLOCK_START=3,_.PLUS_BLOCK_START=4,_.STAR_BLOCK_START=5,_.TOKEN_START=6,_.RULE_STOP=7,_.BLOCK_END=8,_.STAR_LOOP_BACK=9,_.STAR_LOOP_ENTRY=10,_.PLUS_LOOP_BACK=11,_.LOOP_END=12,_.serializationNames=[\"INVALID\",\"BASIC\",\"RULE_START\",\"BLOCK_START\",\"PLUS_BLOCK_START\",\"STAR_BLOCK_START\",\"TOKEN_START\",\"RULE_STOP\",\"BLOCK_END\",\"STAR_LOOP_BACK\",\"STAR_LOOP_ENTRY\",\"PLUS_LOOP_BACK\",\"LOOP_END\"],_.INVALID_STATE_NUMBER=-1;class A extends _{constructor(){return super(),this.stateType=_.RULE_STOP,this}}class C{constructor(t){if(null==t)throw\"target cannot be null.\";this.target=t,this.isEpsilon=!1,this.label=null}}C.EPSILON=1,C.RANGE=2,C.RULE=3,C.PREDICATE=4,C.ATOM=5,C.ACTION=6,C.SET=7,C.NOT_SET=8,C.WILDCARD=9,C.PRECEDENCE=10,C.serializationNames=[\"INVALID\",\"EPSILON\",\"RANGE\",\"RULE\",\"PREDICATE\",\"ATOM\",\"ACTION\",\"SET\",\"NOT_SET\",\"WILDCARD\",\"PRECEDENCE\"],C.serializationTypes={EpsilonTransition:C.EPSILON,RangeTransition:C.RANGE,RuleTransition:C.RULE,PredicateTransition:C.PREDICATE,AtomTransition:C.ATOM,ActionTransition:C.ACTION,SetTransition:C.SET,NotSetTransition:C.NOT_SET,WildcardTransition:C.WILDCARD,PrecedencePredicateTransition:C.PRECEDENCE};class N extends C{constructor(t,e,n,s){super(t),this.ruleIndex=e,this.precedence=n,this.followState=s,this.serializationType=C.RULE,this.isEpsilon=!0}matches(t,e,n){return!1}}class I extends C{constructor(e,n){super(e),this.serializationType=C.SET,null!=n?this.label=n:(this.label=new E,this.label.addOne(t.INVALID_TYPE))}matches(t,e,n){return this.label.contains(t)}toString(){return this.label.toString()}}class y extends I{constructor(t,e){super(t,e),this.serializationType=C.NOT_SET}matches(t,e,n){return t>=e&&t<=n&&!super.matches(t,e,n)}toString(){return\"~\"+super.toString()}}class k extends C{constructor(t){super(t),this.serializationType=C.WILDCARD}matches(t,e,n){return t>=e&&t<=n}toString(){return\".\"}}class L extends C{constructor(t){super(t)}}class O{}class R extends O{}class v extends R{}class w extends v{get ruleContext(){throw new Error(\"missing interface implementation\")}}class P extends v{}class D extends P{}const b={toStringTree:function(t,e,n){e=e||null,null!==(n=n||null)&&(e=n.ruleNames);let s=b.getNodeText(t,e);s=function(t,e){return t=t.replace(/\\t/g,\"\\\\t\").replace(/\\n/g,\"\\\\n\").replace(/\\r/g,\"\\\\r\")}(s);const i=t.getChildCount();if(0===i)return s;let r=\"(\"+s+\" \";i>0&&(s=b.toStringTree(t.getChild(0),e),r=r.concat(s));for(let n=1;n<i;n++)s=b.toStringTree(t.getChild(n),e),r=r.concat(\" \"+s);return r=r.concat(\")\"),r},getNodeText:function(e,n,s){if(n=n||null,null!==(s=s||null)&&(n=s.ruleNames),null!==n){if(e instanceof w){const t=e.ruleContext.getAltNumber();return 0!=t?n[e.ruleIndex]+\":\"+t:n[e.ruleIndex]}if(e instanceof D)return e.toString();if(e instanceof P&&null!==e.symbol)return e.symbol.text}const i=e.getPayload();return i instanceof t?i.text:e.getPayload().toString()},getChildren:function(t){const e=[];for(let n=0;n<t.getChildCount();n++)e.push(t.getChild(n));return e},getAncestors:function(t){let e=[];for(t=t.getParent();null!==t;)e=[t].concat(e),t=t.getParent();return e},findAllTokenNodes:function(t,e){return b.findAllNodes(t,e,!0)},findAllRuleNodes:function(t,e){return b.findAllNodes(t,e,!1)},findAllNodes:function(t,e,n){const s=[];return b._findAllNodes(t,e,n,s),s},_findAllNodes:function(t,e,n,s){n&&t instanceof P?t.symbol.type===e&&s.push(t):!n&&t instanceof w&&t.ruleIndex===e&&s.push(t);for(let i=0;i<t.getChildCount();i++)b._findAllNodes(t.getChild(i),e,n,s)},descendants:function(t){let e=[t];for(let n=0;n<t.getChildCount();n++)e=e.concat(b.descendants(t.getChild(n)));return e}},F=b;class M extends w{constructor(t,e){super(),this.parentCtx=t||null,this.invokingState=e||-1}depth(){let t=0,e=this;for(;null!==e;)e=e.parentCtx,t+=1;return t}isEmpty(){return-1===this.invokingState}getSourceInterval(){return m.INVALID_INTERVAL}get ruleContext(){return this}getPayload(){return this}getText(){return 0===this.getChildCount()?\"\":this.children.map((function(t){return t.getText()})).join(\"\")}getAltNumber(){return 0}setAltNumber(t){}getChild(t){return null}getChildCount(){return 0}accept(t){return t.visitChildren(this)}toStringTree(t,e){return F.toStringTree(this,t,e)}toString(t,e){t=t||null,e=e||null;let n=this,s=\"[\";for(;null!==n&&n!==e;){if(null===t)n.isEmpty()||(s+=n.invokingState);else{const e=n.ruleIndex;s+=e>=0&&e<t.length?t[e]:\"\"+e}null===n.parentCtx||null===t&&n.parentCtx.isEmpty()||(s+=\" \"),n=n.parentCtx}return s+=\"]\",s}}class U{constructor(t){this.cachedHashCode=t}isEmpty(){return this===U.EMPTY}hasEmptyPath(){return this.getReturnState(this.length-1)===U.EMPTY_RETURN_STATE}hashCode(){return this.cachedHashCode}updateHashCode(t){t.update(this.cachedHashCode)}}U.EMPTY=null,U.EMPTY_RETURN_STATE=2147483647,U.globalNodeCount=1,U.id=U.globalNodeCount,U.trace_atn_sim=!1;class B extends U{constructor(t,e){const n=new o;return n.update(t,e),super(n.finish()),this.parents=t,this.returnStates=e,this}isEmpty(){return this.returnStates[0]===U.EMPTY_RETURN_STATE}getParent(t){return this.parents[t]}getReturnState(t){return this.returnStates[t]}equals(t){return this===t||t instanceof B&&this.hashCode()===t.hashCode()&&e(this.returnStates,t.returnStates)&&e(this.parents,t.parents)}toString(){if(this.isEmpty())return\"[]\";{let t=\"[\";for(let e=0;e<this.returnStates.length;e++)e>0&&(t+=\", \"),this.returnStates[e]!==U.EMPTY_RETURN_STATE?(t+=this.returnStates[e],null!==this.parents[e]?t=t+\" \"+this.parents[e]:t+=\"null\"):t+=\"$\";return t+\"]\"}}get length(){return this.returnStates.length}}class V extends U{constructor(t,e){let n=0;const s=new o;null!==t?s.update(t,e):s.update(1),n=s.finish(),super(n),this.parentCtx=t,this.returnState=e}getParent(t){return this.parentCtx}getReturnState(t){return this.returnState}equals(t){return this===t||t instanceof V&&this.hashCode()===t.hashCode()&&this.returnState===t.returnState&&(null==this.parentCtx?null==t.parentCtx:this.parentCtx.equals(t.parentCtx))}toString(){const t=null===this.parentCtx?\"\":this.parentCtx.toString();return 0===t.length?this.returnState===U.EMPTY_RETURN_STATE?\"$\":\"\"+this.returnState:this.returnState+\" \"+t}get length(){return 1}static create(t,e){return e===U.EMPTY_RETURN_STATE&&null===t?U.EMPTY:new V(t,e)}}class z extends V{constructor(){super(null,U.EMPTY_RETURN_STATE)}isEmpty(){return!0}getParent(t){return null}getReturnState(t){return this.returnState}equals(t){return this===t}toString(){return\"$\"}}U.EMPTY=new z;const q=\"h-\";class H{constructor(t,e){this.data={},this.hashFunction=t||a,this.equalsFunction=e||l}set(t,e){const n=q+this.hashFunction(t);if(n in this.data){const s=this.data[n];for(let n=0;n<s.length;n++){const i=s[n];if(this.equalsFunction(t,i.key)){const t=i.value;return i.value=e,t}}return s.push({key:t,value:e}),e}return this.data[n]=[{key:t,value:e}],e}containsKey(t){const e=q+this.hashFunction(t);if(e in this.data){const n=this.data[e];for(let e=0;e<n.length;e++){const s=n[e];if(this.equalsFunction(t,s.key))return!0}}return!1}get(t){const e=q+this.hashFunction(t);if(e in this.data){const n=this.data[e];for(let e=0;e<n.length;e++){const s=n[e];if(this.equalsFunction(t,s.key))return s.value}}return null}entries(){return Object.keys(this.data).filter((t=>t.startsWith(q))).flatMap((t=>this.data[t]),this)}getKeys(){return this.entries().map((t=>t.key))}getValues(){return this.entries().map((t=>t.value))}toString(){return\"[\"+this.entries().map((t=>\"{\"+t.key+\":\"+t.value+\"}\")).join(\", \")+\"]\"}get length(){return Object.keys(this.data).filter((t=>t.startsWith(q))).map((t=>this.data[t].length),this).reduce(((t,e)=>t+e),0)}}function K(t,e){if(null==e&&(e=M.EMPTY),null===e.parentCtx||e===M.EMPTY)return U.EMPTY;const n=K(t,e.parentCtx),s=t.states[e.invokingState].transitions[0];return V.create(n,s.followState.stateNumber)}function Y(t,e,n){if(t.isEmpty())return t;let s=n.get(t)||null;if(null!==s)return s;if(s=e.get(t),null!==s)return n.set(t,s),s;let i=!1,r=[];for(let s=0;s<r.length;s++){const o=Y(t.getParent(s),e,n);if(i||o!==t.getParent(s)){if(!i){r=[];for(let e=0;e<t.length;e++)r[e]=t.getParent(e);i=!0}r[s]=o}}if(!i)return e.add(t),n.set(t,t),t;let o=null;return o=0===r.length?U.EMPTY:1===r.length?V.create(r[0],t.getReturnState(0)):new B(r,t.returnStates),e.add(o),n.set(o,o),n.set(t,o),o}function G(t,e,n,s){if(t===e)return t;if(t instanceof V&&e instanceof V)return function(t,e,n,s){if(null!==s){let n=s.get(t,e);if(null!==n)return n;if(n=s.get(e,t),null!==n)return n}const i=function(t,e,n){if(n){if(t===U.EMPTY)return U.EMPTY;if(e===U.EMPTY)return U.EMPTY}else{if(t===U.EMPTY&&e===U.EMPTY)return U.EMPTY;if(t===U.EMPTY){const t=[e.returnState,U.EMPTY_RETURN_STATE],n=[e.parentCtx,null];return new B(n,t)}if(e===U.EMPTY){const e=[t.returnState,U.EMPTY_RETURN_STATE],n=[t.parentCtx,null];return new B(n,e)}}return null}(t,e,n);if(null!==i)return null!==s&&s.set(t,e,i),i;if(t.returnState===e.returnState){const i=G(t.parentCtx,e.parentCtx,n,s);if(i===t.parentCtx)return t;if(i===e.parentCtx)return e;const r=V.create(i,t.returnState);return null!==s&&s.set(t,e,r),r}{let n=null;if((t===e||null!==t.parentCtx&&t.parentCtx===e.parentCtx)&&(n=t.parentCtx),null!==n){const i=[t.returnState,e.returnState];t.returnState>e.returnState&&(i[0]=e.returnState,i[1]=t.returnState);const r=new B([n,n],i);return null!==s&&s.set(t,e,r),r}const i=[t.returnState,e.returnState];let r=[t.parentCtx,e.parentCtx];t.returnState>e.returnState&&(i[0]=e.returnState,i[1]=t.returnState,r=[e.parentCtx,t.parentCtx]);const o=new B(r,i);return null!==s&&s.set(t,e,o),o}}(t,e,n,s);if(n){if(t instanceof z)return t;if(e instanceof z)return e}return t instanceof V&&(t=new B([t.getParent()],[t.returnState])),e instanceof V&&(e=new B([e.getParent()],[e.returnState])),function(t,e,n,s){if(null!==s){let n=s.get(t,e);if(null!==n)return U.trace_atn_sim&&console.log(\"mergeArrays a=\"+t+\",b=\"+e+\" -> previous\"),n;if(n=s.get(e,t),null!==n)return U.trace_atn_sim&&console.log(\"mergeArrays a=\"+t+\",b=\"+e+\" -> previous\"),n}let i=0,r=0,o=0,a=new Array(t.returnStates.length+e.returnStates.length).fill(0),l=new Array(t.returnStates.length+e.returnStates.length).fill(null);for(;i<t.returnStates.length&&r<e.returnStates.length;){const h=t.parents[i],c=e.parents[r];if(t.returnStates[i]===e.returnStates[r]){const e=t.returnStates[i];e===U.EMPTY_RETURN_STATE&&null===h&&null===c||null!==h&&null!==c&&h===c?(l[o]=h,a[o]=e):(l[o]=G(h,c,n,s),a[o]=e),i+=1,r+=1}else t.returnStates[i]<e.returnStates[r]?(l[o]=h,a[o]=t.returnStates[i],i+=1):(l[o]=c,a[o]=e.returnStates[r],r+=1);o+=1}if(i<t.returnStates.length)for(let e=i;e<t.returnStates.length;e++)l[o]=t.parents[e],a[o]=t.returnStates[e],o+=1;else for(let t=r;t<e.returnStates.length;t++)l[o]=e.parents[t],a[o]=e.returnStates[t],o+=1;if(o<l.length){if(1===o){const n=V.create(l[0],a[0]);return null!==s&&s.set(t,e,n),n}l=l.slice(0,o),a=a.slice(0,o)}const h=new B(l,a);return h.equals(t)?(null!==s&&s.set(t,e,t),U.trace_atn_sim&&console.log(\"mergeArrays a=\"+t+\",b=\"+e+\" -> a\"),t):h.equals(e)?(null!==s&&s.set(t,e,e),U.trace_atn_sim&&console.log(\"mergeArrays a=\"+t+\",b=\"+e+\" -> b\"),e):(function(t){const e=new H;for(let n=0;n<t.length;n++){const s=t[n];e.containsKey(s)||e.set(s,s)}for(let n=0;n<t.length;n++)t[n]=e.get(t[n])}(l),null!==s&&s.set(t,e,h),U.trace_atn_sim&&console.log(\"mergeArrays a=\"+t+\",b=\"+e+\" -> \"+h),h)}(t,e,n,s)}class W{constructor(){this.data=[]}add(t){this.data[t]=!0}or(t){Object.keys(t.data).map((t=>this.add(t)),this)}remove(t){delete this.data[t]}has(t){return!0===this.data[t]}values(){return Object.keys(this.data)}minValue(){return Math.min.apply(null,this.values())}hashCode(){return o.hashStuff(this.values())}equals(t){return t instanceof W&&e(this.data,t.data)}toString(){return\"{\"+this.values().join(\", \")+\"}\"}get length(){return this.values().length}}class j{constructor(t){this.atn=t}getDecisionLookahead(t){if(null===t)return null;const e=t.transitions.length,n=[];for(let s=0;s<e;s++){n[s]=new E;const e=new d,i=!1;this._LOOK(t.transition(s).target,null,U.EMPTY,n[s],e,new W,i,!1),(0===n[s].length||n[s].contains(j.HIT_PRED))&&(n[s]=null)}return n}LOOK(t,e,n){const s=new E,i=null!==(n=n||null)?K(t.atn,n):null;return this._LOOK(t,e,i,s,new d,new W,!0,!0),s}_LOOK(e,n,s,i,r,o,a,l){const h=new S({state:e,alt:0,context:s},null);if(!r.has(h)){if(r.add(h),e===n){if(null===s)return void i.addOne(t.EPSILON);if(s.isEmpty()&&l)return void i.addOne(t.EOF)}if(e instanceof A){if(null===s)return void i.addOne(t.EPSILON);if(s.isEmpty()&&l)return void i.addOne(t.EOF);if(s!==U.EMPTY){const t=o.has(e.ruleIndex);try{o.remove(e.ruleIndex);for(let t=0;t<s.length;t++){const e=this.atn.states[s.getReturnState(t)];this._LOOK(e,n,s.getParent(t),i,r,o,a,l)}}finally{t&&o.add(e.ruleIndex)}return}}for(let h=0;h<e.transitions.length;h++){const c=e.transitions[h];if(c.constructor===N){if(o.has(c.target.ruleIndex))continue;const t=V.create(s,c.followState.stateNumber);try{o.add(c.target.ruleIndex),this._LOOK(c.target,n,t,i,r,o,a,l)}finally{o.remove(c.target.ruleIndex)}}else if(c instanceof L)a?this._LOOK(c.target,n,s,i,r,o,a,l):i.addOne(j.HIT_PRED);else if(c.isEpsilon)this._LOOK(c.target,n,s,i,r,o,a,l);else if(c.constructor===k)i.addRange(t.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType);else{let e=c.label;null!==e&&(c instanceof y&&(e=e.complement(t.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType)),i.addSet(e))}}}}}j.HIT_PRED=t.INVALID_TYPE;class ${constructor(t,e){this.grammarType=t,this.maxTokenType=e,this.states=[],this.decisionToState=[],this.ruleToStartState=[],this.ruleToStopState=null,this.modeNameToStartState={},this.ruleToTokenType=null,this.lexerActions=null,this.modeToStartState=[]}nextTokensInContext(t,e){return new j(this).LOOK(t,null,e)}nextTokensNoContext(t){return null!==t.nextTokenWithinRule||(t.nextTokenWithinRule=this.nextTokensInContext(t,null),t.nextTokenWithinRule.readOnly=!0),t.nextTokenWithinRule}nextTokens(t,e){return void 0===e?this.nextTokensNoContext(t):this.nextTokensInContext(t,e)}addState(t){null!==t&&(t.atn=this,t.stateNumber=this.states.length),this.states.push(t)}removeState(t){this.states[t.stateNumber]=null}defineDecisionState(t){return this.decisionToState.push(t),t.decision=this.decisionToState.length-1,t.decision}getDecisionState(t){return 0===this.decisionToState.length?null:this.decisionToState[t]}getExpectedTokens(e,n){if(e<0||e>=this.states.length)throw\"Invalid state number.\";const s=this.states[e];let i=this.nextTokens(s);if(!i.contains(t.EPSILON))return i;const r=new E;for(r.addSet(i),r.removeOne(t.EPSILON);null!==n&&n.invokingState>=0&&i.contains(t.EPSILON);){const e=this.states[n.invokingState].transitions[0];i=this.nextTokens(e.followState),r.addSet(i),r.removeOne(t.EPSILON),n=n.parentCtx}return i.contains(t.EPSILON)&&r.addOne(t.EOF),r}}$.INVALID_ALT_NUMBER=0;class X extends _{constructor(){super(),this.stateType=_.BASIC}}class J extends _{constructor(){return super(),this.decision=-1,this.nonGreedy=!1,this}}class Z extends J{constructor(){return super(),this.endState=null,this}}class Q extends _{constructor(){return super(),this.stateType=_.BLOCK_END,this.startState=null,this}}class tt extends _{constructor(){return super(),this.stateType=_.LOOP_END,this.loopBackState=null,this}}class et extends _{constructor(){return super(),this.stateType=_.RULE_START,this.stopState=null,this.isPrecedenceRule=!1,this}}class nt extends J{constructor(){return super(),this.stateType=_.TOKEN_START,this}}class st extends J{constructor(){return super(),this.stateType=_.PLUS_LOOP_BACK,this}}class it extends _{constructor(){return super(),this.stateType=_.STAR_LOOP_BACK,this}}class rt extends J{constructor(){return super(),this.stateType=_.STAR_LOOP_ENTRY,this.loopBackState=null,this.isPrecedenceDecision=null,this}}class ot extends Z{constructor(){return super(),this.stateType=_.PLUS_BLOCK_START,this.loopBackState=null,this}}class at extends Z{constructor(){return super(),this.stateType=_.STAR_BLOCK_START,this}}class lt extends Z{constructor(){return super(),this.stateType=_.BLOCK_START,this}}class ht extends C{constructor(t,e){super(t),this.label_=e,this.label=this.makeLabel(),this.serializationType=C.ATOM}makeLabel(){const t=new E;return t.addOne(this.label_),t}matches(t,e,n){return this.label_===t}toString(){return this.label_}}class ct extends C{constructor(t,e,n){super(t),this.serializationType=C.RANGE,this.start=e,this.stop=n,this.label=this.makeLabel()}makeLabel(){const t=new E;return t.addRange(this.start,this.stop),t}matches(t,e,n){return t>=this.start&&t<=this.stop}toString(){return\"'\"+String.fromCharCode(this.start)+\"'..'\"+String.fromCharCode(this.stop)+\"'\"}}class ut extends C{constructor(t,e,n,s){super(t),this.serializationType=C.ACTION,this.ruleIndex=e,this.actionIndex=void 0===n?-1:n,this.isCtxDependent=void 0!==s&&s,this.isEpsilon=!0}matches(t,e,n){return!1}toString(){return\"action_\"+this.ruleIndex+\":\"+this.actionIndex}}class dt extends C{constructor(t,e){super(t),this.serializationType=C.EPSILON,this.isEpsilon=!0,this.outermostPrecedenceReturn=e}matches(t,e,n){return!1}toString(){return\"epsilon\"}}class pt extends p{constructor(t,e,n){super(),this.ruleIndex=void 0===t?-1:t,this.predIndex=void 0===e?-1:e,this.isCtxDependent=void 0!==n&&n}evaluate(t,e){const n=this.isCtxDependent?e:null;return t.sempred(n,this.ruleIndex,this.predIndex)}updateHashCode(t){t.update(this.ruleIndex,this.predIndex,this.isCtxDependent)}equals(t){return this===t||t instanceof pt&&this.ruleIndex===t.ruleIndex&&this.predIndex===t.predIndex&&this.isCtxDependent===t.isCtxDependent}toString(){return\"{\"+this.ruleIndex+\":\"+this.predIndex+\"}?\"}}p.NONE=new pt;class gt extends L{constructor(t,e,n,s){super(t),this.serializationType=C.PREDICATE,this.ruleIndex=e,this.predIndex=n,this.isCtxDependent=s,this.isEpsilon=!0}matches(t,e,n){return!1}getPredicate(){return new pt(this.ruleIndex,this.predIndex,this.isCtxDependent)}toString(){return\"pred_\"+this.ruleIndex+\":\"+this.predIndex}}class ft extends p{constructor(t){super(),this.precedence=void 0===t?0:t}evaluate(t,e){return t.precpred(e,this.precedence)}evalPrecedence(t,e){return t.precpred(e,this.precedence)?p.NONE:null}compareTo(t){return this.precedence-t.precedence}updateHashCode(t){t.update(this.precedence)}equals(t){return this===t||t instanceof ft&&this.precedence===t.precedence}toString(){return\"{\"+this.precedence+\">=prec}?\"}}p.PrecedencePredicate=ft;class xt extends L{constructor(t,e){super(t),this.serializationType=C.PRECEDENCE,this.precedence=e,this.isEpsilon=!0}matches(t,e,n){return!1}getPredicate(){return new ft(this.precedence)}toString(){return this.precedence+\" >= _p\"}}class Tt{constructor(t){void 0===t&&(t=null),this.readOnly=!1,this.verifyATN=null===t||t.verifyATN,this.generateRuleBypassTransitions=null!==t&&t.generateRuleBypassTransitions}}Tt.defaultOptions=new Tt,Tt.defaultOptions.readOnly=!0;class St{constructor(t){this.actionType=t,this.isPositionDependent=!1}hashCode(){const t=new o;return this.updateHashCode(t),t.finish()}updateHashCode(t){t.update(this.actionType)}equals(t){return this===t}}class mt extends St{constructor(){super(6)}execute(t){t.skip()}toString(){return\"skip\"}}mt.INSTANCE=new mt;class Et extends St{constructor(t){super(0),this.channel=t}execute(t){t._channel=this.channel}updateHashCode(t){t.update(this.actionType,this.channel)}equals(t){return this===t||t instanceof Et&&this.channel===t.channel}toString(){return\"channel(\"+this.channel+\")\"}}class _t extends St{constructor(t,e){super(1),this.ruleIndex=t,this.actionIndex=e,this.isPositionDependent=!0}execute(t){t.action(null,this.ruleIndex,this.actionIndex)}updateHashCode(t){t.update(this.actionType,this.ruleIndex,this.actionIndex)}equals(t){return this===t||t instanceof _t&&this.ruleIndex===t.ruleIndex&&this.actionIndex===t.actionIndex}}class At extends St{constructor(){super(3)}execute(t){t.more()}toString(){return\"more\"}}At.INSTANCE=new At;class Ct extends St{constructor(t){super(7),this.type=t}execute(t){t.type=this.type}updateHashCode(t){t.update(this.actionType,this.type)}equals(t){return this===t||t instanceof Ct&&this.type===t.type}toString(){return\"type(\"+this.type+\")\"}}class Nt extends St{constructor(t){super(5),this.mode=t}execute(t){t.pushMode(this.mode)}updateHashCode(t){t.update(this.actionType,this.mode)}equals(t){return this===t||t instanceof Nt&&this.mode===t.mode}toString(){return\"pushMode(\"+this.mode+\")\"}}class It extends St{constructor(){super(4)}execute(t){t.popMode()}toString(){return\"popMode\"}}It.INSTANCE=new It;class yt extends St{constructor(t){super(2),this.mode=t}execute(t){t.mode(this.mode)}updateHashCode(t){t.update(this.actionType,this.mode)}equals(t){return this===t||t instanceof yt&&this.mode===t.mode}toString(){return\"mode(\"+this.mode+\")\"}}function kt(t,e){const n=[];return n[t-1]=e,n.map((function(t){return e}))}class Lt{constructor(t){null==t&&(t=Tt.defaultOptions),this.deserializationOptions=t,this.stateFactories=null,this.actionFactories=null}deserialize(t){const e=this.reset(t);this.checkVersion(e),e&&this.skipUUID();const n=this.readATN();this.readStates(n,e),this.readRules(n,e),this.readModes(n);const s=[];return this.readSets(n,s,this.readInt.bind(this)),e&&this.readSets(n,s,this.readInt32.bind(this)),this.readEdges(n,s),this.readDecisions(n),this.readLexerActions(n,e),this.markPrecedenceDecisions(n),this.verifyATN(n),this.deserializationOptions.generateRuleBypassTransitions&&1===n.grammarType&&(this.generateRuleBypassTransitions(n),this.verifyATN(n)),n}reset(t){if(3===(t.charCodeAt?t.charCodeAt(0):t[0])){const e=function(t){const e=t.charCodeAt(0);return e>1?e-2:e+65534},n=t.split(\"\").map(e);return n[0]=t.charCodeAt(0),this.data=n,this.pos=0,!0}return this.data=t,this.pos=0,!1}skipUUID(){let t=0;for(;t++<8;)this.readInt()}checkVersion(t){const e=this.readInt();if(!t&&4!==e)throw\"Could not deserialize ATN with version \"+e+\" (expected 4).\"}readATN(){const t=this.readInt(),e=this.readInt();return new $(t,e)}readStates(t,e){let n,s,i;const r=[],o=[],a=this.readInt();for(let n=0;n<a;n++){const n=this.readInt();if(n===_.INVALID_TYPE){t.addState(null);continue}let s=this.readInt();e&&65535===s&&(s=-1);const i=this.stateFactory(n,s);if(n===_.LOOP_END){const t=this.readInt();r.push([i,t])}else if(i instanceof Z){const t=this.readInt();o.push([i,t])}t.addState(i)}for(n=0;n<r.length;n++)s=r[n],s[0].loopBackState=t.states[s[1]];for(n=0;n<o.length;n++)s=o[n],s[0].endState=t.states[s[1]];let l=this.readInt();for(n=0;n<l;n++)i=this.readInt(),t.states[i].nonGreedy=!0;let h=this.readInt();for(n=0;n<h;n++)i=this.readInt(),t.states[i].isPrecedenceRule=!0}readRules(e,n){let s;const i=this.readInt();for(0===e.grammarType&&(e.ruleToTokenType=kt(i,0)),e.ruleToStartState=kt(i,0),s=0;s<i;s++){const i=this.readInt();if(e.ruleToStartState[s]=e.states[i],0===e.grammarType){let i=this.readInt();n&&65535===i&&(i=t.EOF),e.ruleToTokenType[s]=i}}for(e.ruleToStopState=kt(i,0),s=0;s<e.states.length;s++){const t=e.states[s];t instanceof A&&(e.ruleToStopState[t.ruleIndex]=t,e.ruleToStartState[t.ruleIndex].stopState=t)}}readModes(t){const e=this.readInt();for(let n=0;n<e;n++){let e=this.readInt();t.modeToStartState.push(t.states[e])}}readSets(t,e,n){const s=this.readInt();for(let t=0;t<s;t++){const t=new E;e.push(t);const s=this.readInt();0!==this.readInt()&&t.addOne(-1);for(let e=0;e<s;e++){const e=n(),s=n();t.addRange(e,s)}}}readEdges(t,e){let n,s,i,r,o;const a=this.readInt();for(n=0;n<a;n++){const n=this.readInt(),s=this.readInt(),i=this.readInt(),o=this.readInt(),a=this.readInt(),l=this.readInt();r=this.edgeFactory(t,i,n,s,o,a,l,e),t.states[n].addTransition(r)}for(n=0;n<t.states.length;n++)for(i=t.states[n],s=0;s<i.transitions.length;s++){const e=i.transitions[s];if(!(e instanceof N))continue;let n=-1;t.ruleToStartState[e.target.ruleIndex].isPrecedenceRule&&0===e.precedence&&(n=e.target.ruleIndex),r=new dt(e.followState,n),t.ruleToStopState[e.target.ruleIndex].addTransition(r)}for(n=0;n<t.states.length;n++){if(i=t.states[n],i instanceof Z){if(null===i.endState)throw\"IllegalState\";if(null!==i.endState.startState)throw\"IllegalState\";i.endState.startState=i}if(i instanceof st)for(s=0;s<i.transitions.length;s++)o=i.transitions[s].target,o instanceof ot&&(o.loopBackState=i);else if(i instanceof it)for(s=0;s<i.transitions.length;s++)o=i.transitions[s].target,o instanceof rt&&(o.loopBackState=i)}}readDecisions(t){const e=this.readInt();for(let n=0;n<e;n++){const e=this.readInt(),s=t.states[e];t.decisionToState.push(s),s.decision=n}}readLexerActions(t,e){if(0===t.grammarType){const n=this.readInt();t.lexerActions=kt(n,null);for(let s=0;s<n;s++){const n=this.readInt();let i=this.readInt();e&&65535===i&&(i=-1);let r=this.readInt();e&&65535===r&&(r=-1),t.lexerActions[s]=this.lexerActionFactory(n,i,r)}}}generateRuleBypassTransitions(t){let e;const n=t.ruleToStartState.length;for(e=0;e<n;e++)t.ruleToTokenType[e]=t.maxTokenType+e+1;for(e=0;e<n;e++)this.generateRuleBypassTransition(t,e)}generateRuleBypassTransition(t,e){let n,s;const i=new lt;i.ruleIndex=e,t.addState(i);const r=new Q;r.ruleIndex=e,t.addState(r),i.endState=r,t.defineDecisionState(i),r.startState=i;let o=null,a=null;if(t.ruleToStartState[e].isPrecedenceRule){for(a=null,n=0;n<t.states.length;n++)if(s=t.states[n],this.stateIsEndStateFor(s,e)){a=s,o=s.loopBackState.transitions[0];break}if(null===o)throw\"Couldn't identify final state of the precedence rule prefix section.\"}else a=t.ruleToStopState[e];for(n=0;n<t.states.length;n++){s=t.states[n];for(let t=0;t<s.transitions.length;t++){const e=s.transitions[t];e!==o&&e.target===a&&(e.target=r)}}const l=t.ruleToStartState[e],h=l.transitions.length;for(;h>0;)i.addTransition(l.transitions[h-1]),l.transitions=l.transitions.slice(-1);t.ruleToStartState[e].addTransition(new dt(i)),r.addTransition(new dt(a));const c=new X;t.addState(c),c.addTransition(new ht(r,t.ruleToTokenType[e])),i.addTransition(new dt(c))}stateIsEndStateFor(t,e){if(t.ruleIndex!==e)return null;if(!(t instanceof rt))return null;const n=t.transitions[t.transitions.length-1].target;return n instanceof tt&&n.epsilonOnlyTransitions&&n.transitions[0].target instanceof A?t:null}markPrecedenceDecisions(t){for(let e=0;e<t.states.length;e++){const n=t.states[e];if(n instanceof rt&&t.ruleToStartState[n.ruleIndex].isPrecedenceRule){const t=n.transitions[n.transitions.length-1].target;t instanceof tt&&t.epsilonOnlyTransitions&&t.transitions[0].target instanceof A&&(n.isPrecedenceDecision=!0)}}}verifyATN(t){if(this.deserializationOptions.verifyATN)for(let e=0;e<t.states.length;e++){const n=t.states[e];if(null!==n)if(this.checkCondition(n.epsilonOnlyTransitions||n.transitions.length<=1),n instanceof ot)this.checkCondition(null!==n.loopBackState);else if(n instanceof rt)if(this.checkCondition(null!==n.loopBackState),this.checkCondition(2===n.transitions.length),n.transitions[0].target instanceof at)this.checkCondition(n.transitions[1].target instanceof tt),this.checkCondition(!n.nonGreedy);else{if(!(n.transitions[0].target instanceof tt))throw\"IllegalState\";this.checkCondition(n.transitions[1].target instanceof at),this.checkCondition(n.nonGreedy)}else n instanceof it?(this.checkCondition(1===n.transitions.length),this.checkCondition(n.transitions[0].target instanceof rt)):n instanceof tt?this.checkCondition(null!==n.loopBackState):n instanceof et?this.checkCondition(null!==n.stopState):n instanceof Z?this.checkCondition(null!==n.endState):n instanceof Q?this.checkCondition(null!==n.startState):n instanceof J?this.checkCondition(n.transitions.length<=1||n.decision>=0):this.checkCondition(n.transitions.length<=1||n instanceof A)}}checkCondition(t,e){if(!t)throw null==e&&(e=\"IllegalState\"),e}readInt(){return this.data[this.pos++]}readInt32(){return this.readInt()|this.readInt()<<16}edgeFactory(e,n,s,i,r,o,a,l){const h=e.states[i];switch(n){case C.EPSILON:return new dt(h);case C.RANGE:return new ct(h,0!==a?t.EOF:r,o);case C.RULE:return new N(e.states[r],o,a,h);case C.PREDICATE:return new gt(h,r,o,0!==a);case C.PRECEDENCE:return new xt(h,r);case C.ATOM:return new ht(h,0!==a?t.EOF:r);case C.ACTION:return new ut(h,r,o,0!==a);case C.SET:return new I(h,l[r]);case C.NOT_SET:return new y(h,l[r]);case C.WILDCARD:return new k(h);default:throw\"The specified transition type: \"+n+\" is not valid.\"}}stateFactory(t,e){if(null===this.stateFactories){const t=[];t[_.INVALID_TYPE]=null,t[_.BASIC]=()=>new X,t[_.RULE_START]=()=>new et,t[_.BLOCK_START]=()=>new lt,t[_.PLUS_BLOCK_START]=()=>new ot,t[_.STAR_BLOCK_START]=()=>new at,t[_.TOKEN_START]=()=>new nt,t[_.RULE_STOP]=()=>new A,t[_.BLOCK_END]=()=>new Q,t[_.STAR_LOOP_BACK]=()=>new it,t[_.STAR_LOOP_ENTRY]=()=>new rt,t[_.PLUS_LOOP_BACK]=()=>new st,t[_.LOOP_END]=()=>new tt,this.stateFactories=t}if(t>this.stateFactories.length||null===this.stateFactories[t])throw\"The specified state type \"+t+\" is not valid.\";{const n=this.stateFactories[t]();if(null!==n)return n.ruleIndex=e,n}}lexerActionFactory(t,e,n){if(null===this.actionFactories){const t=[];t[0]=(t,e)=>new Et(t),t[1]=(t,e)=>new _t(t,e),t[2]=(t,e)=>new yt(t),t[3]=(t,e)=>At.INSTANCE,t[4]=(t,e)=>It.INSTANCE,t[5]=(t,e)=>new Nt(t),t[6]=(t,e)=>mt.INSTANCE,t[7]=(t,e)=>new Ct(t),this.actionFactories=t}if(t>this.actionFactories.length||null===this.actionFactories[t])throw\"The specified lexer action type \"+t+\" is not valid.\";return this.actionFactories[t](e,n)}}class Ot{syntaxError(t,e,n,s,i,r){}reportAmbiguity(t,e,n,s,i,r,o){}reportAttemptingFullContext(t,e,n,s,i,r){}reportContextSensitivity(t,e,n,s,i,r){}}class Rt extends Ot{constructor(){super()}syntaxError(t,e,n,s,i,r){console.error(\"line \"+n+\":\"+s+\" \"+i)}}Rt.INSTANCE=new Rt;class vt extends Ot{constructor(t){if(super(),null===t)throw\"delegates\";return this.delegates=t,this}syntaxError(t,e,n,s,i,r){this.delegates.map((o=>o.syntaxError(t,e,n,s,i,r)))}reportAmbiguity(t,e,n,s,i,r,o){this.delegates.map((a=>a.reportAmbiguity(t,e,n,s,i,r,o)))}reportAttemptingFullContext(t,e,n,s,i,r){this.delegates.map((o=>o.reportAttemptingFullContext(t,e,n,s,i,r)))}reportContextSensitivity(t,e,n,s,i,r){this.delegates.map((o=>o.reportContextSensitivity(t,e,n,s,i,r)))}}class wt{constructor(){this._listeners=[Rt.INSTANCE],this._interp=null,this._stateNumber=-1}checkVersion(t){const e=\"4.13.1\";e!==t&&console.log(\"ANTLR runtime and generated code versions disagree: \"+e+\"!=\"+t)}addErrorListener(t){this._listeners.push(t)}removeErrorListeners(){this._listeners=[]}getLiteralNames(){return Object.getPrototypeOf(this).constructor.literalNames||[]}getSymbolicNames(){return Object.getPrototypeOf(this).constructor.symbolicNames||[]}getTokenNames(){if(!this.tokenNames){const t=this.getLiteralNames(),e=this.getSymbolicNames(),n=t.length>e.length?t.length:e.length;this.tokenNames=[];for(let s=0;s<n;s++)this.tokenNames[s]=t[s]||e[s]||\"<INVALID\"}return this.tokenNames}getTokenTypeMap(){const e=this.getTokenNames();if(null===e)throw\"The current recognizer does not provide a list of token names.\";let n=this.tokenTypeMapCache[e];return void 0===n&&(n=e.reduce((function(t,e,n){t[e]=n})),n.EOF=t.EOF,this.tokenTypeMapCache[e]=n),n}getRuleIndexMap(){const t=this.ruleNames;if(null===t)throw\"The current recognizer does not provide a list of rule names.\";let e=this.ruleIndexMapCache[t];return void 0===e&&(e=t.reduce((function(t,e,n){t[e]=n})),this.ruleIndexMapCache[t]=e),e}getTokenType(e){const n=this.getTokenTypeMap()[e];return void 0!==n?n:t.INVALID_TYPE}getErrorHeader(t){return\"line \"+t.getOffendingToken().line+\":\"+t.getOffendingToken().column}getTokenErrorDisplay(e){if(null===e)return\"<no token>\";let n=e.text;return null===n&&(n=e.type===t.EOF?\"<EOF>\":\"<\"+e.type+\">\"),n=n.replace(\"\\n\",\"\\\\n\").replace(\"\\r\",\"\\\\r\").replace(\"\\t\",\"\\\\t\"),\"'\"+n+\"'\"}getErrorListenerDispatch(){return new vt(this._listeners)}sempred(t,e,n){return!0}precpred(t,e){return!0}get atn(){return this._interp.atn}get state(){return this._stateNumber}set state(t){this._stateNumber=t}}wt.tokenTypeMapCache={},wt.ruleIndexMapCache={};class Pt extends t{constructor(e,n,s,i,r){super(),this.source=void 0!==e?e:Pt.EMPTY_SOURCE,this.type=void 0!==n?n:null,this.channel=void 0!==s?s:t.DEFAULT_CHANNEL,this.start=void 0!==i?i:-1,this.stop=void 0!==r?r:-1,this.tokenIndex=-1,null!==this.source[0]?(this.line=e[0].line,this.column=e[0].column):this.column=-1}clone(){const t=new Pt(this.source,this.type,this.channel,this.start,this.stop);return t.tokenIndex=this.tokenIndex,t.line=this.line,t.column=this.column,t.text=this.text,t}cloneWithType(e){const n=new Pt(this.source,e,this.channel,this.start,this.stop);return n.tokenIndex=this.tokenIndex,n.line=this.line,n.column=this.column,e===t.EOF&&(n.text=\"\"),n}toString(){let t=this.text;return t=null!==t?t.replace(/\\n/g,\"\\\\n\").replace(/\\r/g,\"\\\\r\").replace(/\\t/g,\"\\\\t\"):\"<no text>\",\"[@\"+this.tokenIndex+\",\"+this.start+\":\"+this.stop+\"='\"+t+\"',<\"+this.type+\">\"+(this.channel>0?\",channel=\"+this.channel:\"\")+\",\"+this.line+\":\"+this.column+\"]\"}get text(){if(null!==this._text)return this._text;const t=this.getInputStream();if(null===t)return null;const e=t.size;return this.start<e&&this.stop<e?t.getText(this.start,this.stop):\"<EOF>\"}set text(t){this._text=t}}Pt.EMPTY_SOURCE=[null,null];class Dt{}class bt extends Dt{constructor(t){super(),this.copyText=void 0!==t&&t}create(t,e,n,s,i,r,o,a){const l=new Pt(t,e,s,i,r);return l.line=o,l.column=a,null!==n?l.text=n:this.copyText&&null!==t[1]&&(l.text=t[1].getText(i,r)),l}createThin(t,e){const n=new Pt(null,t);return n.text=e,n}}bt.DEFAULT=new bt;class Ft extends Error{constructor(t){super(t.message),Error.captureStackTrace&&Error.captureStackTrace(this,Ft),this.message=t.message,this.recognizer=t.recognizer,this.input=t.input,this.ctx=t.ctx,this.offendingToken=null,this.offendingState=-1,null!==this.recognizer&&(this.offendingState=this.recognizer.state)}getExpectedTokens(){return null!==this.recognizer?this.recognizer.atn.getExpectedTokens(this.offendingState,this.ctx):null}toString(){return this.message}}class Mt extends Ft{constructor(t,e,n,s){super({message:\"\",recognizer:t,input:e,ctx:null}),this.startIndex=n,this.deadEndConfigs=s}toString(){let t=\"\";return this.startIndex>=0&&this.startIndex<this.input.size&&(t=this.input.getText(new m(this.startIndex,this.startIndex))),\"LexerNoViableAltException\"+t}}class Ut extends wt{constructor(e){super(),this._input=e,this._factory=bt.DEFAULT,this._tokenFactorySourcePair=[this,e],this._interp=null,this._token=null,this._tokenStartCharIndex=-1,this._tokenStartLine=-1,this._tokenStartColumn=-1,this._hitEOF=!1,this._channel=t.DEFAULT_CHANNEL,this._type=t.INVALID_TYPE,this._modeStack=[],this._mode=Ut.DEFAULT_MODE,this._text=null}reset(){null!==this._input&&this._input.seek(0),this._token=null,this._type=t.INVALID_TYPE,this._channel=t.DEFAULT_CHANNEL,this._tokenStartCharIndex=-1,this._tokenStartColumn=-1,this._tokenStartLine=-1,this._text=null,this._hitEOF=!1,this._mode=Ut.DEFAULT_MODE,this._modeStack=[],this._interp.reset()}nextToken(){if(null===this._input)throw\"nextToken requires a non-null input stream.\";const e=this._input.mark();try{for(;;){if(this._hitEOF)return this.emitEOF(),this._token;this._token=null,this._channel=t.DEFAULT_CHANNEL,this._tokenStartCharIndex=this._input.index,this._tokenStartColumn=this._interp.column,this._tokenStartLine=this._interp.line,this._text=null;let e=!1;for(;;){this._type=t.INVALID_TYPE;let n=Ut.SKIP;try{n=this._interp.match(this._input,this._mode)}catch(t){if(!(t instanceof Ft))throw console.log(t.stack),t;this.notifyListeners(t),this.recover(t)}if(this._input.LA(1)===t.EOF&&(this._hitEOF=!0),this._type===t.INVALID_TYPE&&(this._type=n),this._type===Ut.SKIP){e=!0;break}if(this._type!==Ut.MORE)break}if(!e)return null===this._token&&this.emit(),this._token}}finally{this._input.release(e)}}skip(){this._type=Ut.SKIP}more(){this._type=Ut.MORE}mode(t){this._mode=t}pushMode(t){this._interp.debug&&console.log(\"pushMode \"+t),this._modeStack.push(this._mode),this.mode(t)}popMode(){if(0===this._modeStack.length)throw\"Empty Stack\";return this._interp.debug&&console.log(\"popMode back to \"+this._modeStack.slice(0,-1)),this.mode(this._modeStack.pop()),this._mode}emitToken(t){this._token=t}emit(){const t=this._factory.create(this._tokenFactorySourcePair,this._type,this._text,this._channel,this._tokenStartCharIndex,this.getCharIndex()-1,this._tokenStartLine,this._tokenStartColumn);return this.emitToken(t),t}emitEOF(){const e=this.column,n=this.line,s=this._factory.create(this._tokenFactorySourcePair,t.EOF,null,t.DEFAULT_CHANNEL,this._input.index,this._input.index-1,n,e);return this.emitToken(s),s}getCharIndex(){return this._input.index}getAllTokens(){const e=[];let n=this.nextToken();for(;n.type!==t.EOF;)e.push(n),n=this.nextToken();return e}notifyListeners(t){const e=this._tokenStartCharIndex,n=this._input.index,s=this._input.getText(e,n),i=\"token recognition error at: '\"+this.getErrorDisplay(s)+\"'\";this.getErrorListenerDispatch().syntaxError(this,null,this._tokenStartLine,this._tokenStartColumn,i,t)}getErrorDisplay(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n]);return e.join(\"\")}getErrorDisplayForChar(e){return e.charCodeAt(0)===t.EOF?\"<EOF>\":\"\\n\"===e?\"\\\\n\":\"\\t\"===e?\"\\\\t\":\"\\r\"===e?\"\\\\r\":e}getCharErrorDisplay(t){return\"'\"+this.getErrorDisplayForChar(t)+\"'\"}recover(e){this._input.LA(1)!==t.EOF&&(e instanceof Mt?this._interp.consume(this._input):this._input.consume())}get inputStream(){return this._input}set inputStream(t){this._input=null,this._tokenFactorySourcePair=[this,this._input],this.reset(),this._input=t,this._tokenFactorySourcePair=[this,this._input]}get sourceName(){return this._input.sourceName}get type(){return this._type}set type(t){this._type=t}get line(){return this._interp.line}set line(t){this._interp.line=t}get column(){return this._interp.column}set column(t){this._interp.column=t}get text(){return null!==this._text?this._text:this._interp.getText(this._input)}set text(t){this._text=t}}function Bt(t){return t.hashCodeForConfigSet()}function Vt(t,e){return t===e||null!==t&&null!==e&&t.equalsForConfigSet(e)}Ut.DEFAULT_MODE=0,Ut.MORE=-2,Ut.SKIP=-3,Ut.DEFAULT_TOKEN_CHANNEL=t.DEFAULT_CHANNEL,Ut.HIDDEN=t.HIDDEN_CHANNEL,Ut.MIN_CHAR_VALUE=0,Ut.MAX_CHAR_VALUE=1114111;class zt{constructor(t){this.configLookup=new d(Bt,Vt),this.fullCtx=void 0===t||t,this.readOnly=!1,this.configs=[],this.uniqueAlt=0,this.conflictingAlts=null,this.hasSemanticContext=!1,this.dipsIntoOuterContext=!1,this.cachedHashCode=-1}add(t,e){if(void 0===e&&(e=null),this.readOnly)throw\"This set is readonly\";t.semanticContext!==p.NONE&&(this.hasSemanticContext=!0),t.reachesIntoOuterContext>0&&(this.dipsIntoOuterContext=!0);const n=this.configLookup.add(t);if(n===t)return this.cachedHashCode=-1,this.configs.push(t),!0;const s=!this.fullCtx,i=G(n.context,t.context,s,e);return n.reachesIntoOuterContext=Math.max(n.reachesIntoOuterContext,t.reachesIntoOuterContext),t.precedenceFilterSuppressed&&(n.precedenceFilterSuppressed=!0),n.context=i,!0}getStates(){const t=new d;for(let e=0;e<this.configs.length;e++)t.add(this.configs[e].state);return t}getPredicates(){const t=[];for(let e=0;e<this.configs.length;e++){const n=this.configs[e].semanticContext;n!==p.NONE&&t.push(n.semanticContext)}return t}optimizeConfigs(t){if(this.readOnly)throw\"This set is readonly\";if(0!==this.configLookup.length)for(let e=0;e<this.configs.length;e++){const n=this.configs[e];n.context=t.getCachedContext(n.context)}}addAll(t){for(let e=0;e<t.length;e++)this.add(t[e]);return!1}equals(t){return this===t||t instanceof zt&&e(this.configs,t.configs)&&this.fullCtx===t.fullCtx&&this.uniqueAlt===t.uniqueAlt&&this.conflictingAlts===t.conflictingAlts&&this.hasSemanticContext===t.hasSemanticContext&&this.dipsIntoOuterContext===t.dipsIntoOuterContext}hashCode(){const t=new o;return t.update(this.configs),t.finish()}updateHashCode(t){this.readOnly?(-1===this.cachedHashCode&&(this.cachedHashCode=this.hashCode()),t.update(this.cachedHashCode)):t.update(this.hashCode())}isEmpty(){return 0===this.configs.length}contains(t){if(null===this.configLookup)throw\"This method is not implemented for readonly sets.\";return this.configLookup.contains(t)}containsFast(t){if(null===this.configLookup)throw\"This method is not implemented for readonly sets.\";return this.configLookup.containsFast(t)}clear(){if(this.readOnly)throw\"This set is readonly\";this.configs=[],this.cachedHashCode=-1,this.configLookup=new d}setReadonly(t){this.readOnly=t,t&&(this.configLookup=null)}toString(){return c(this.configs)+(this.hasSemanticContext?\",hasSemanticContext=\"+this.hasSemanticContext:\"\")+(this.uniqueAlt!==$.INVALID_ALT_NUMBER?\",uniqueAlt=\"+this.uniqueAlt:\"\")+(null!==this.conflictingAlts?\",conflictingAlts=\"+this.conflictingAlts:\"\")+(this.dipsIntoOuterContext?\",dipsIntoOuterContext\":\"\")}get items(){return this.configs}get length(){return this.configs.length}}class qt{constructor(t,e){return null===t&&(t=-1),null===e&&(e=new zt),this.stateNumber=t,this.configs=e,this.edges=null,this.isAcceptState=!1,this.prediction=0,this.lexerActionExecutor=null,this.requiresFullContext=!1,this.predicates=null,this}getAltSet(){const t=new d;if(null!==this.configs)for(let e=0;e<this.configs.length;e++){const n=this.configs[e];t.add(n.alt)}return 0===t.length?null:t}equals(t){return this===t||t instanceof qt&&this.configs.equals(t.configs)}toString(){let t=this.stateNumber+\":\"+this.configs;return this.isAcceptState&&(t+=\"=>\",null!==this.predicates?t+=this.predicates:t+=this.prediction),t}hashCode(){const t=new o;return t.update(this.configs),t.finish()}}class Ht{constructor(t,e){return this.atn=t,this.sharedContextCache=e,this}getCachedContext(t){if(null===this.sharedContextCache)return t;const e=new H;return Y(t,this.sharedContextCache,e)}}Ht.ERROR=new qt(2147483647,new zt);class Kt extends zt{constructor(){super(),this.configLookup=new d}}class Yt extends S{constructor(t,e){super(t,e);const n=t.lexerActionExecutor||null;return this.lexerActionExecutor=n||(null!==e?e.lexerActionExecutor:null),this.passedThroughNonGreedyDecision=null!==e&&this.checkNonGreedyDecision(e,this.state),this.hashCodeForConfigSet=Yt.prototype.hashCode,this.equalsForConfigSet=Yt.prototype.equals,this}updateHashCode(t){t.update(this.state.stateNumber,this.alt,this.context,this.semanticContext,this.passedThroughNonGreedyDecision,this.lexerActionExecutor)}equals(t){return this===t||t instanceof Yt&&this.passedThroughNonGreedyDecision===t.passedThroughNonGreedyDecision&&(this.lexerActionExecutor?this.lexerActionExecutor.equals(t.lexerActionExecutor):!t.lexerActionExecutor)&&super.equals(t)}checkNonGreedyDecision(t,e){return t.passedThroughNonGreedyDecision||e instanceof J&&e.nonGreedy}}class Gt extends St{constructor(t,e){super(e.actionType),this.offset=t,this.action=e,this.isPositionDependent=!0}execute(t){this.action.execute(t)}updateHashCode(t){t.update(this.actionType,this.offset,this.action)}equals(t){return this===t||t instanceof Gt&&this.offset===t.offset&&this.action===t.action}}class Wt{constructor(t){return this.lexerActions=null===t?[]:t,this.cachedHashCode=o.hashStuff(t),this}fixOffsetBeforeMatch(t){let e=null;for(let n=0;n<this.lexerActions.length;n++)!this.lexerActions[n].isPositionDependent||this.lexerActions[n]instanceof Gt||(null===e&&(e=this.lexerActions.concat([])),e[n]=new Gt(t,this.lexerActions[n]));return null===e?this:new Wt(e)}execute(t,e,n){let s=!1;const i=e.index;try{for(let r=0;r<this.lexerActions.length;r++){let o=this.lexerActions[r];if(o instanceof Gt){const t=o.offset;e.seek(n+t),o=o.action,s=n+t!==i}else o.isPositionDependent&&(e.seek(i),s=!1);o.execute(t)}}finally{s&&e.seek(i)}}hashCode(){return this.cachedHashCode}updateHashCode(t){t.update(this.cachedHashCode)}equals(t){if(this===t)return!0;if(t instanceof Wt){if(this.cachedHashCode!=t.cachedHashCode)return!1;if(this.lexerActions.length!=t.lexerActions.length)return!1;{const e=this.lexerActions.length;for(let n=0;n<e;++n)if(!this.lexerActions[n].equals(t.lexerActions[n]))return!1;return!0}}return!1}static append(t,e){if(null===t)return new Wt([e]);const n=t.lexerActions.concat([e]);return new Wt(n)}}function jt(t){t.index=-1,t.line=0,t.column=-1,t.dfaState=null}class $t{constructor(){jt(this)}reset(){jt(this)}}class Xt extends Ht{constructor(t,e,n,s){super(e,s),this.decisionToDFA=n,this.recog=t,this.startIndex=-1,this.line=1,this.column=0,this.mode=Ut.DEFAULT_MODE,this.prevAccept=new $t}copyState(t){this.column=t.column,this.line=t.line,this.mode=t.mode,this.startIndex=t.startIndex}match(t,e){this.mode=e;const n=t.mark();try{this.startIndex=t.index,this.prevAccept.reset();const n=this.decisionToDFA[e];return null===n.s0?this.matchATN(t):this.execATN(t,n.s0)}finally{t.release(n)}}reset(){this.prevAccept.reset(),this.startIndex=-1,this.line=1,this.column=0,this.mode=Ut.DEFAULT_MODE}matchATN(t){const e=this.atn.modeToStartState[this.mode];Xt.debug&&console.log(\"matchATN mode \"+this.mode+\" start: \"+e);const n=this.mode,s=this.computeStartState(t,e),i=s.hasSemanticContext;s.hasSemanticContext=!1;const r=this.addDFAState(s);i||(this.decisionToDFA[this.mode].s0=r);const o=this.execATN(t,r);return Xt.debug&&console.log(\"DFA after matchATN: \"+this.decisionToDFA[n].toLexerString()),o}execATN(e,n){Xt.debug&&console.log(\"start state closure=\"+n.configs),n.isAcceptState&&this.captureSimState(this.prevAccept,e,n);let s=e.LA(1),i=n;for(;;){Xt.debug&&console.log(\"execATN loop starting closure: \"+i.configs);let n=this.getExistingTargetState(i,s);if(null===n&&(n=this.computeTargetState(e,i,s)),n===Ht.ERROR)break;if(s!==t.EOF&&this.consume(e),n.isAcceptState&&(this.captureSimState(this.prevAccept,e,n),s===t.EOF))break;s=e.LA(1),i=n}return this.failOrAccept(this.prevAccept,e,i.configs,s)}getExistingTargetState(t,e){if(null===t.edges||e<Xt.MIN_DFA_EDGE||e>Xt.MAX_DFA_EDGE)return null;let n=t.edges[e-Xt.MIN_DFA_EDGE];return void 0===n&&(n=null),Xt.debug&&null!==n&&console.log(\"reuse state \"+t.stateNumber+\" edge to \"+n.stateNumber),n}computeTargetState(t,e,n){const s=new Kt;return this.getReachableConfigSet(t,e.configs,s,n),0===s.items.length?(s.hasSemanticContext||this.addDFAEdge(e,n,Ht.ERROR),Ht.ERROR):this.addDFAEdge(e,n,null,s)}failOrAccept(e,n,s,i){if(null!==this.prevAccept.dfaState){const t=e.dfaState.lexerActionExecutor;return this.accept(n,t,this.startIndex,e.index,e.line,e.column),e.dfaState.prediction}if(i===t.EOF&&n.index===this.startIndex)return t.EOF;throw new Mt(this.recog,n,this.startIndex,s)}getReachableConfigSet(e,n,s,i){let r=$.INVALID_ALT_NUMBER;for(let o=0;o<n.items.length;o++){const a=n.items[o],l=a.alt===r;if(!l||!a.passedThroughNonGreedyDecision){Xt.debug&&console.log(\"testing %s at %s\\n\",this.getTokenName(i),a.toString(this.recog,!0));for(let n=0;n<a.state.transitions.length;n++){const o=a.state.transitions[n],h=this.getReachableTarget(o,i);if(null!==h){let n=a.lexerActionExecutor;null!==n&&(n=n.fixOffsetBeforeMatch(e.index-this.startIndex));const o=i===t.EOF,c=new Yt({state:h,lexerActionExecutor:n},a);this.closure(e,c,s,l,!0,o)&&(r=a.alt)}}}}}accept(t,e,n,s,i,r){Xt.debug&&console.log(\"ACTION %s\\n\",e),t.seek(s),this.line=i,this.column=r,null!==e&&null!==this.recog&&e.execute(this.recog,t,n)}getReachableTarget(t,e){return t.matches(e,0,Ut.MAX_CHAR_VALUE)?t.target:null}computeStartState(t,e){const n=U.EMPTY,s=new Kt;for(let i=0;i<e.transitions.length;i++){const r=e.transitions[i].target,o=new Yt({state:r,alt:i+1,context:n},null);this.closure(t,o,s,!1,!1,!1)}return s}closure(t,e,n,s,i,r){let o=null;if(Xt.debug&&console.log(\"closure(\"+e.toString(this.recog,!0)+\")\"),e.state instanceof A){if(Xt.debug&&(null!==this.recog?console.log(\"closure at %s rule stop %s\\n\",this.recog.ruleNames[e.state.ruleIndex],e):console.log(\"closure at rule stop %s\\n\",e)),null===e.context||e.context.hasEmptyPath()){if(null===e.context||e.context.isEmpty())return n.add(e),!0;n.add(new Yt({state:e.state,context:U.EMPTY},e)),s=!0}if(null!==e.context&&!e.context.isEmpty())for(let a=0;a<e.context.length;a++)if(e.context.getReturnState(a)!==U.EMPTY_RETURN_STATE){const l=e.context.getParent(a),h=this.atn.states[e.context.getReturnState(a)];o=new Yt({state:h,context:l},e),s=this.closure(t,o,n,s,i,r)}return s}e.state.epsilonOnlyTransitions||s&&e.passedThroughNonGreedyDecision||n.add(e);for(let a=0;a<e.state.transitions.length;a++){const l=e.state.transitions[a];o=this.getEpsilonTarget(t,e,l,n,i,r),null!==o&&(s=this.closure(t,o,n,s,i,r))}return s}getEpsilonTarget(e,n,s,i,r,o){let a=null;if(s.serializationType===C.RULE){const t=V.create(n.context,s.followState.stateNumber);a=new Yt({state:s.target,context:t},n)}else{if(s.serializationType===C.PRECEDENCE)throw\"Precedence predicates are not supported in lexers.\";if(s.serializationType===C.PREDICATE)Xt.debug&&console.log(\"EVAL rule \"+s.ruleIndex+\":\"+s.predIndex),i.hasSemanticContext=!0,this.evaluatePredicate(e,s.ruleIndex,s.predIndex,r)&&(a=new Yt({state:s.target},n));else if(s.serializationType===C.ACTION)if(null===n.context||n.context.hasEmptyPath()){const t=Wt.append(n.lexerActionExecutor,this.atn.lexerActions[s.actionIndex]);a=new Yt({state:s.target,lexerActionExecutor:t},n)}else a=new Yt({state:s.target},n);else s.serializationType===C.EPSILON?a=new Yt({state:s.target},n):s.serializationType!==C.ATOM&&s.serializationType!==C.RANGE&&s.serializationType!==C.SET||o&&s.matches(t.EOF,0,Ut.MAX_CHAR_VALUE)&&(a=new Yt({state:s.target},n))}return a}evaluatePredicate(t,e,n,s){if(null===this.recog)return!0;if(!s)return this.recog.sempred(null,e,n);const i=this.column,r=this.line,o=t.index,a=t.mark();try{return this.consume(t),this.recog.sempred(null,e,n)}finally{this.column=i,this.line=r,t.seek(o),t.release(a)}}captureSimState(t,e,n){t.index=e.index,t.line=this.line,t.column=this.column,t.dfaState=n}addDFAEdge(t,e,n,s){if(void 0===n&&(n=null),void 0===s&&(s=null),null===n&&null!==s){const t=s.hasSemanticContext;if(s.hasSemanticContext=!1,n=this.addDFAState(s),t)return n}return e<Xt.MIN_DFA_EDGE||e>Xt.MAX_DFA_EDGE||(Xt.debug&&console.log(\"EDGE \"+t+\" -> \"+n+\" upon \"+e),null===t.edges&&(t.edges=[]),t.edges[e-Xt.MIN_DFA_EDGE]=n),n}addDFAState(t){const e=new qt(null,t);let n=null;for(let e=0;e<t.items.length;e++){const s=t.items[e];if(s.state instanceof A){n=s;break}}null!==n&&(e.isAcceptState=!0,e.lexerActionExecutor=n.lexerActionExecutor,e.prediction=this.atn.ruleToTokenType[n.state.ruleIndex]);const s=this.decisionToDFA[this.mode],i=s.states.get(e);if(null!==i)return i;const r=e;return r.stateNumber=s.states.length,t.setReadonly(!0),r.configs=t,s.states.add(r),r}getDFA(t){return this.decisionToDFA[t]}getText(t){return t.getText(this.startIndex,t.index-1)}consume(t){t.LA(1)===\"\\n\".charCodeAt(0)?(this.line+=1,this.column=0):this.column+=1,t.consume()}getTokenName(t){return-1===t?\"EOF\":\"'\"+String.fromCharCode(t)+\"'\"}}Xt.debug=!1,Xt.dfa_debug=!1,Xt.MIN_DFA_EDGE=0,Xt.MAX_DFA_EDGE=127;class Jt{constructor(t,e){this.alt=e,this.pred=t}toString(){return\"(\"+this.pred+\", \"+this.alt+\")\"}}class Zt{constructor(){this.data={}}get(t){return this.data[\"k-\"+t]||null}set(t,e){this.data[\"k-\"+t]=e}values(){return Object.keys(this.data).filter((t=>t.startsWith(\"k-\"))).map((t=>this.data[t]),this)}}const Qt={SLL:0,LL:1,LL_EXACT_AMBIG_DETECTION:2,hasSLLConflictTerminatingPrediction:function(t,e){if(Qt.allConfigsInRuleStopStates(e))return!0;if(t===Qt.SLL&&e.hasSemanticContext){const t=new zt;for(let n=0;n<e.items.length;n++){let s=e.items[n];s=new S({semanticContext:p.NONE},s),t.add(s)}e=t}const n=Qt.getConflictingAltSubsets(e);return Qt.hasConflictingAltSet(n)&&!Qt.hasStateAssociatedWithOneAlt(e)},hasConfigInRuleStopState:function(t){for(let e=0;e<t.items.length;e++)if(t.items[e].state instanceof A)return!0;return!1},allConfigsInRuleStopStates:function(t){for(let e=0;e<t.items.length;e++)if(!(t.items[e].state instanceof A))return!1;return!0},resolvesToJustOneViableAlt:function(t){return Qt.getSingleViableAlt(t)},allSubsetsConflict:function(t){return!Qt.hasNonConflictingAltSet(t)},hasNonConflictingAltSet:function(t){for(let e=0;e<t.length;e++)if(1===t[e].length)return!0;return!1},hasConflictingAltSet:function(t){for(let e=0;e<t.length;e++)if(t[e].length>1)return!0;return!1},allSubsetsEqual:function(t){let e=null;for(let n=0;n<t.length;n++){const s=t[n];if(null===e)e=s;else if(s!==e)return!1}return!0},getUniqueAlt:function(t){const e=Qt.getAlts(t);return 1===e.length?e.minValue():$.INVALID_ALT_NUMBER},getAlts:function(t){const e=new W;return t.map((function(t){e.or(t)})),e},getConflictingAltSubsets:function(t){const e=new H;return e.hashFunction=function(t){o.hashStuff(t.state.stateNumber,t.context)},e.equalsFunction=function(t,e){return t.state.stateNumber===e.state.stateNumber&&t.context.equals(e.context)},t.items.map((function(t){let n=e.get(t);null===n&&(n=new W,e.set(t,n)),n.add(t.alt)})),e.getValues()},getStateToAltMap:function(t){const e=new Zt;return t.items.map((function(t){let n=e.get(t.state);null===n&&(n=new W,e.set(t.state,n)),n.add(t.alt)})),e},hasStateAssociatedWithOneAlt:function(t){const e=Qt.getStateToAltMap(t).values();for(let t=0;t<e.length;t++)if(1===e[t].length)return!0;return!1},getSingleViableAlt:function(t){let e=null;for(let n=0;n<t.length;n++){const s=t[n].minValue();if(null===e)e=s;else if(e!==s)return $.INVALID_ALT_NUMBER}return e}},te=Qt;class ee extends Ft{constructor(t,e,n,s,i,r){r=r||t._ctx,s=s||t.getCurrentToken(),n=n||t.getCurrentToken(),e=e||t.getInputStream(),super({message:\"\",recognizer:t,input:e,ctx:r}),this.deadEndConfigs=i,this.startToken=n,this.offendingToken=s}}class ne{constructor(t){this.defaultMapCtor=t||H,this.cacheMap=new this.defaultMapCtor}get(t,e){const n=this.cacheMap.get(t)||null;return null===n?null:n.get(e)||null}set(t,e,n){let s=this.cacheMap.get(t)||null;null===s&&(s=new this.defaultMapCtor,this.cacheMap.set(t,s)),s.set(e,n)}}class se extends Ht{constructor(t,e,n,s){super(e,s),this.parser=t,this.decisionToDFA=n,this.predictionMode=te.LL,this._input=null,this._startIndex=0,this._outerContext=null,this._dfa=null,this.mergeCache=null,this.debug=!1,this.debug_closure=!1,this.debug_add=!1,this.trace_atn_sim=!1,this.dfa_debug=!1,this.retry_debug=!1}reset(){}adaptivePredict(t,e,n){(this.debug||this.trace_atn_sim)&&console.log(\"adaptivePredict decision \"+e+\" exec LA(1)==\"+this.getLookaheadName(t)+\" line \"+t.LT(1).line+\":\"+t.LT(1).column),this._input=t,this._startIndex=t.index,this._outerContext=n;const s=this.decisionToDFA[e];this._dfa=s;const i=t.mark(),r=t.index;try{let e;if(e=s.precedenceDfa?s.getPrecedenceStartState(this.parser.getPrecedence()):s.s0,null===e){null===n&&(n=M.EMPTY),this.debug&&console.log(\"predictATN decision \"+s.decision+\" exec LA(1)==\"+this.getLookaheadName(t)+\", outerContext=\"+n.toString(this.parser.ruleNames));const i=!1;let r=this.computeStartState(s.atnStartState,M.EMPTY,i);s.precedenceDfa?(s.s0.configs=r,r=this.applyPrecedenceFilter(r),e=this.addDFAState(s,new qt(null,r)),s.setPrecedenceStartState(this.parser.getPrecedence(),e)):(e=this.addDFAState(s,new qt(null,r)),s.s0=e)}const i=this.execATN(s,e,t,r,n);return this.debug&&console.log(\"DFA after predictATN: \"+s.toString(this.parser.literalNames,this.parser.symbolicNames)),i}finally{this._dfa=null,this.mergeCache=null,t.seek(r),t.release(i)}}execATN(e,n,s,i,r){let o;(this.debug||this.trace_atn_sim)&&console.log(\"execATN decision \"+e.decision+\", DFA state \"+n+\", LA(1)==\"+this.getLookaheadName(s)+\" line \"+s.LT(1).line+\":\"+s.LT(1).column);let a=n;this.debug&&console.log(\"s0 = \"+n);let l=s.LA(1);for(;;){let n=this.getExistingTargetState(a,l);if(null===n&&(n=this.computeTargetState(e,a,l)),n===Ht.ERROR){const t=this.noViableAlt(s,r,a.configs,i);if(s.seek(i),o=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(a.configs,r),o!==$.INVALID_ALT_NUMBER)return o;throw t}if(n.requiresFullContext&&this.predictionMode!==te.SLL){let t=null;if(null!==n.predicates){this.debug&&console.log(\"DFA state has preds in DFA sim LL failover\");const e=s.index;if(e!==i&&s.seek(i),t=this.evalSemanticContext(n.predicates,r,!0),1===t.length)return this.debug&&console.log(\"Full LL avoided\"),t.minValue();e!==i&&s.seek(e)}this.dfa_debug&&console.log(\"ctx sensitive state \"+r+\" in \"+n);const a=!0,l=this.computeStartState(e.atnStartState,r,a);return this.reportAttemptingFullContext(e,t,n.configs,i,s.index),o=this.execATNWithFullContext(e,n,l,s,i,r),o}if(n.isAcceptState){if(null===n.predicates)return n.prediction;const t=s.index;s.seek(i);const o=this.evalSemanticContext(n.predicates,r,!0);if(0===o.length)throw this.noViableAlt(s,r,n.configs,i);return 1===o.length||this.reportAmbiguity(e,n,i,t,!1,o,n.configs),o.minValue()}a=n,l!==t.EOF&&(s.consume(),l=s.LA(1))}}getExistingTargetState(t,e){const n=t.edges;return null===n?null:n[e+1]||null}computeTargetState(t,e,n){const s=this.computeReachSet(e.configs,n,!1);if(null===s)return this.addDFAEdge(t,e,n,Ht.ERROR),Ht.ERROR;let i=new qt(null,s);const r=this.getUniqueAlt(s);if(this.debug){const t=te.getConflictingAltSubsets(s);console.log(\"SLL altSubSets=\"+c(t)+\", configs=\"+s+\", predict=\"+r+\", allSubsetsConflict=\"+te.allSubsetsConflict(t)+\", conflictingAlts=\"+this.getConflictingAlts(s))}return r!==$.INVALID_ALT_NUMBER?(i.isAcceptState=!0,i.configs.uniqueAlt=r,i.prediction=r):te.hasSLLConflictTerminatingPrediction(this.predictionMode,s)&&(i.configs.conflictingAlts=this.getConflictingAlts(s),i.requiresFullContext=!0,i.isAcceptState=!0,i.prediction=i.configs.conflictingAlts.minValue()),i.isAcceptState&&i.configs.hasSemanticContext&&(this.predicateDFAState(i,this.atn.getDecisionState(t.decision)),null!==i.predicates&&(i.prediction=$.INVALID_ALT_NUMBER)),i=this.addDFAEdge(t,e,n,i),i}predicateDFAState(t,e){const n=e.transitions.length,s=this.getConflictingAltsOrUniqueAlt(t.configs),i=this.getPredsForAmbigAlts(s,t.configs,n);null!==i?(t.predicates=this.getPredicatePredictions(s,i),t.prediction=$.INVALID_ALT_NUMBER):t.prediction=s.minValue()}execATNWithFullContext(e,n,s,i,r,o){(this.debug||this.trace_atn_sim)&&console.log(\"execATNWithFullContext \"+s);let a,l=!1,h=s;i.seek(r);let c=i.LA(1),u=-1;for(;;){if(a=this.computeReachSet(h,c,!0),null===a){const t=this.noViableAlt(i,o,h,r);i.seek(r);const e=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(h,o);if(e!==$.INVALID_ALT_NUMBER)return e;throw t}const e=te.getConflictingAltSubsets(a);if(this.debug&&console.log(\"LL altSubSets=\"+e+\", predict=\"+te.getUniqueAlt(e)+\", resolvesToJustOneViableAlt=\"+te.resolvesToJustOneViableAlt(e)),a.uniqueAlt=this.getUniqueAlt(a),a.uniqueAlt!==$.INVALID_ALT_NUMBER){u=a.uniqueAlt;break}if(this.predictionMode!==te.LL_EXACT_AMBIG_DETECTION){if(u=te.resolvesToJustOneViableAlt(e),u!==$.INVALID_ALT_NUMBER)break}else if(te.allSubsetsConflict(e)&&te.allSubsetsEqual(e)){l=!0,u=te.getSingleViableAlt(e);break}h=a,c!==t.EOF&&(i.consume(),c=i.LA(1))}return a.uniqueAlt!==$.INVALID_ALT_NUMBER?(this.reportContextSensitivity(e,u,a,r,i.index),u):(this.reportAmbiguity(e,n,r,i.index,l,null,a),u)}computeReachSet(e,n,s){this.debug&&console.log(\"in computeReachSet, starting closure: \"+e),null===this.mergeCache&&(this.mergeCache=new ne);const i=new zt(s);let r=null;for(let o=0;o<e.items.length;o++){const a=e.items[o];if(this.debug&&console.log(\"testing \"+this.getTokenName(n)+\" at \"+a),a.state instanceof A)(s||n===t.EOF)&&(null===r&&(r=[]),r.push(a),this.debug_add&&console.log(\"added \"+a+\" to skippedStopStates\"));else for(let t=0;t<a.state.transitions.length;t++){const e=a.state.transitions[t],s=this.getReachableTarget(e,n);if(null!==s){const t=new S({state:s},a);i.add(t,this.mergeCache),this.debug_add&&console.log(\"added \"+t+\" to intermediate\")}}}let o=null;if(null===r&&n!==t.EOF&&(1===i.items.length||this.getUniqueAlt(i)!==$.INVALID_ALT_NUMBER)&&(o=i),null===o){o=new zt(s);const e=new d,r=n===t.EOF;for(let t=0;t<i.items.length;t++)this.closure(i.items[t],o,e,!1,s,r)}if(n===t.EOF&&(o=this.removeAllConfigsNotInRuleStopState(o,o===i)),!(null===r||s&&te.hasConfigInRuleStopState(o)))for(let t=0;t<r.length;t++)o.add(r[t],this.mergeCache);return this.trace_atn_sim&&console.log(\"computeReachSet \"+e+\" -> \"+o),0===o.items.length?null:o}removeAllConfigsNotInRuleStopState(e,n){if(te.allConfigsInRuleStopStates(e))return e;const s=new zt(e.fullCtx);for(let i=0;i<e.items.length;i++){const r=e.items[i];if(r.state instanceof A)s.add(r,this.mergeCache);else if(n&&r.state.epsilonOnlyTransitions&&this.atn.nextTokens(r.state).contains(t.EPSILON)){const t=this.atn.ruleToStopState[r.state.ruleIndex];s.add(new S({state:t},r),this.mergeCache)}}return s}computeStartState(t,e,n){const s=K(this.atn,e),i=new zt(n);this.trace_atn_sim&&console.log(\"computeStartState from ATN state \"+t+\" initialContext=\"+s.toString(this.parser));for(let e=0;e<t.transitions.length;e++){const r=t.transitions[e].target,o=new S({state:r,alt:e+1,context:s},null),a=new d;this.closure(o,i,a,!0,n,!1)}return i}applyPrecedenceFilter(t){let e;const n=[],s=new zt(t.fullCtx);for(let i=0;i<t.items.length;i++){if(e=t.items[i],1!==e.alt)continue;const r=e.semanticContext.evalPrecedence(this.parser,this._outerContext);null!==r&&(n[e.state.stateNumber]=e.context,r!==e.semanticContext?s.add(new S({semanticContext:r},e),this.mergeCache):s.add(e,this.mergeCache))}for(let i=0;i<t.items.length;i++)if(e=t.items[i],1!==e.alt){if(!e.precedenceFilterSuppressed){const t=n[e.state.stateNumber]||null;if(null!==t&&t.equals(e.context))continue}s.add(e,this.mergeCache)}return s}getReachableTarget(t,e){return t.matches(e,0,this.atn.maxTokenType)?t.target:null}getPredsForAmbigAlts(t,e,n){let s=[];for(let n=0;n<e.items.length;n++){const i=e.items[n];t.has(i.alt)&&(s[i.alt]=p.orContext(s[i.alt]||null,i.semanticContext))}let i=0;for(let t=1;t<n+1;t++){const e=s[t]||null;null===e?s[t]=p.NONE:e!==p.NONE&&(i+=1)}return 0===i&&(s=null),this.debug&&console.log(\"getPredsForAmbigAlts result \"+c(s)),s}getPredicatePredictions(t,e){const n=[];let s=!1;for(let i=1;i<e.length;i++){const r=e[i];null!==t&&t.has(i)&&n.push(new Jt(r,i)),r!==p.NONE&&(s=!0)}return s?n:null}getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(t,e){const n=this.splitAccordingToSemanticValidity(t,e),s=n[0],i=n[1];let r=this.getAltThatFinishedDecisionEntryRule(s);return r!==$.INVALID_ALT_NUMBER||i.items.length>0&&(r=this.getAltThatFinishedDecisionEntryRule(i),r!==$.INVALID_ALT_NUMBER)?r:$.INVALID_ALT_NUMBER}getAltThatFinishedDecisionEntryRule(t){const e=[];for(let n=0;n<t.items.length;n++){const s=t.items[n];(s.reachesIntoOuterContext>0||s.state instanceof A&&s.context.hasEmptyPath())&&e.indexOf(s.alt)<0&&e.push(s.alt)}return 0===e.length?$.INVALID_ALT_NUMBER:Math.min.apply(null,e)}splitAccordingToSemanticValidity(t,e){const n=new zt(t.fullCtx),s=new zt(t.fullCtx);for(let i=0;i<t.items.length;i++){const r=t.items[i];r.semanticContext!==p.NONE?r.semanticContext.evaluate(this.parser,e)?n.add(r):s.add(r):n.add(r)}return[n,s]}evalSemanticContext(t,e,n){const s=new W;for(let i=0;i<t.length;i++){const r=t[i];if(r.pred===p.NONE){if(s.add(r.alt),!n)break;continue}const o=r.pred.evaluate(this.parser,e);if((this.debug||this.dfa_debug)&&console.log(\"eval pred \"+r+\"=\"+o),o&&((this.debug||this.dfa_debug)&&console.log(\"PREDICT \"+r.alt),s.add(r.alt),!n))break}return s}closure(t,e,n,s,i,r){this.closureCheckingStopState(t,e,n,s,i,0,r)}closureCheckingStopState(t,e,n,s,i,r,o){if((this.trace_atn_sim||this.debug_closure)&&console.log(\"closure(\"+t.toString(this.parser,!0)+\")\"),t.state instanceof A){if(!t.context.isEmpty()){for(let a=0;a<t.context.length;a++){if(t.context.getReturnState(a)===U.EMPTY_RETURN_STATE){if(i){e.add(new S({state:t.state,context:U.EMPTY},t),this.mergeCache);continue}this.debug&&console.log(\"FALLING off rule \"+this.getRuleName(t.state.ruleIndex)),this.closure_(t,e,n,s,i,r,o);continue}const l=this.atn.states[t.context.getReturnState(a)],h=t.context.getParent(a),c={state:l,alt:t.alt,context:h,semanticContext:t.semanticContext},u=new S(c,null);u.reachesIntoOuterContext=t.reachesIntoOuterContext,this.closureCheckingStopState(u,e,n,s,i,r-1,o)}return}if(i)return void e.add(t,this.mergeCache);this.debug&&console.log(\"FALLING off rule \"+this.getRuleName(t.state.ruleIndex))}this.closure_(t,e,n,s,i,r,o)}closure_(t,e,n,s,i,r,o){const a=t.state;a.epsilonOnlyTransitions||e.add(t,this.mergeCache);for(let l=0;l<a.transitions.length;l++){if(0===l&&this.canDropLoopEntryEdgeInLeftRecursiveRule(t))continue;const h=a.transitions[l],c=s&&!(h instanceof ut),u=this.getEpsilonTarget(t,h,c,0===r,i,o);if(null!==u){let s=r;if(t.state instanceof A){if(null!==this._dfa&&this._dfa.precedenceDfa&&h.outermostPrecedenceReturn===this._dfa.atnStartState.ruleIndex&&(u.precedenceFilterSuppressed=!0),u.reachesIntoOuterContext+=1,n.add(u)!==u)continue;e.dipsIntoOuterContext=!0,s-=1,this.debug&&console.log(\"dips into outer ctx: \"+u)}else{if(!h.isEpsilon&&n.add(u)!==u)continue;h instanceof N&&s>=0&&(s+=1)}this.closureCheckingStopState(u,e,n,c,i,s,o)}}}canDropLoopEntryEdgeInLeftRecursiveRule(t){const e=t.state;if(e.stateType!==_.STAR_LOOP_ENTRY)return!1;if(e.stateType!==_.STAR_LOOP_ENTRY||!e.isPrecedenceDecision||t.context.isEmpty()||t.context.hasEmptyPath())return!1;const n=t.context.length;for(let s=0;s<n;s++)if(this.atn.states[t.context.getReturnState(s)].ruleIndex!==e.ruleIndex)return!1;const s=e.transitions[0].target.endState.stateNumber,i=this.atn.states[s];for(let s=0;s<n;s++){const n=t.context.getReturnState(s),r=this.atn.states[n];if(1!==r.transitions.length||!r.transitions[0].isEpsilon)return!1;const o=r.transitions[0].target;if(!(r.stateType===_.BLOCK_END&&o===e||r===i||o===i||o.stateType===_.BLOCK_END&&1===o.transitions.length&&o.transitions[0].isEpsilon&&o.transitions[0].target===e))return!1}return!0}getRuleName(t){return null!==this.parser&&t>=0?this.parser.ruleNames[t]:\"<rule \"+t+\">\"}getEpsilonTarget(e,n,s,i,r,o){switch(n.serializationType){case C.RULE:return this.ruleTransition(e,n);case C.PRECEDENCE:return this.precedenceTransition(e,n,s,i,r);case C.PREDICATE:return this.predTransition(e,n,s,i,r);case C.ACTION:return this.actionTransition(e,n);case C.EPSILON:return new S({state:n.target},e);case C.ATOM:case C.RANGE:case C.SET:return o&&n.matches(t.EOF,0,1)?new S({state:n.target},e):null;default:return null}}actionTransition(t,e){if(this.debug){const t=-1===e.actionIndex?65535:e.actionIndex;console.log(\"ACTION edge \"+e.ruleIndex+\":\"+t)}return new S({state:e.target},t)}precedenceTransition(t,e,n,s,i){this.debug&&(console.log(\"PRED (collectPredicates=\"+n+\") \"+e.precedence+\">=_p, ctx dependent=true\"),null!==this.parser&&console.log(\"context surrounding pred is \"+c(this.parser.getRuleInvocationStack())));let r=null;if(n&&s)if(i){const n=this._input.index;this._input.seek(this._startIndex);const s=e.getPredicate().evaluate(this.parser,this._outerContext);this._input.seek(n),s&&(r=new S({state:e.target},t))}else{const n=p.andContext(t.semanticContext,e.getPredicate());r=new S({state:e.target,semanticContext:n},t)}else r=new S({state:e.target},t);return this.debug&&console.log(\"config from pred transition=\"+r),r}predTransition(t,e,n,s,i){this.debug&&(console.log(\"PRED (collectPredicates=\"+n+\") \"+e.ruleIndex+\":\"+e.predIndex+\", ctx dependent=\"+e.isCtxDependent),null!==this.parser&&console.log(\"context surrounding pred is \"+c(this.parser.getRuleInvocationStack())));let r=null;if(n&&(e.isCtxDependent&&s||!e.isCtxDependent))if(i){const n=this._input.index;this._input.seek(this._startIndex);const s=e.getPredicate().evaluate(this.parser,this._outerContext);this._input.seek(n),s&&(r=new S({state:e.target},t))}else{const n=p.andContext(t.semanticContext,e.getPredicate());r=new S({state:e.target,semanticContext:n},t)}else r=new S({state:e.target},t);return this.debug&&console.log(\"config from pred transition=\"+r),r}ruleTransition(t,e){this.debug&&console.log(\"CALL rule \"+this.getRuleName(e.target.ruleIndex)+\", ctx=\"+t.context);const n=e.followState,s=V.create(t.context,n.stateNumber);return new S({state:e.target,context:s},t)}getConflictingAlts(t){const e=te.getConflictingAltSubsets(t);return te.getAlts(e)}getConflictingAltsOrUniqueAlt(t){let e=null;return t.uniqueAlt!==$.INVALID_ALT_NUMBER?(e=new W,e.add(t.uniqueAlt)):e=t.conflictingAlts,e}getTokenName(e){if(e===t.EOF)return\"EOF\";if(null!==this.parser&&null!==this.parser.literalNames){if(!(e>=this.parser.literalNames.length&&e>=this.parser.symbolicNames.length))return(this.parser.literalNames[e]||this.parser.symbolicNames[e])+\"<\"+e+\">\";console.log(e+\" ttype out of range: \"+this.parser.literalNames),console.log(\"\"+this.parser.getInputStream().getTokens())}return\"\"+e}getLookaheadName(t){return this.getTokenName(t.LA(1))}dumpDeadEndConfigs(t){console.log(\"dead end configs: \");const e=t.getDeadEndConfigs();for(let t=0;t<e.length;t++){const n=e[t];let s=\"no edges\";if(n.state.transitions.length>0){const t=n.state.transitions[0];t instanceof ht?s=\"Atom \"+this.getTokenName(t.label):t instanceof I&&(s=(t instanceof y?\"~\":\"\")+\"Set \"+t.set)}console.error(n.toString(this.parser,!0)+\":\"+s)}}noViableAlt(t,e,n,s){return new ee(this.parser,t,t.get(s),t.LT(1),n,e)}getUniqueAlt(t){let e=$.INVALID_ALT_NUMBER;for(let n=0;n<t.items.length;n++){const s=t.items[n];if(e===$.INVALID_ALT_NUMBER)e=s.alt;else if(s.alt!==e)return $.INVALID_ALT_NUMBER}return e}addDFAEdge(t,e,n,s){if(this.debug&&console.log(\"EDGE \"+e+\" -> \"+s+\" upon \"+this.getTokenName(n)),null===s)return null;if(s=this.addDFAState(t,s),null===e||n<-1||n>this.atn.maxTokenType)return s;if(null===e.edges&&(e.edges=[]),e.edges[n+1]=s,this.debug){const e=null===this.parser?null:this.parser.literalNames,n=null===this.parser?null:this.parser.symbolicNames;console.log(\"DFA=\\n\"+t.toString(e,n))}return s}addDFAState(t,e){if(e===Ht.ERROR)return e;const n=t.states.get(e);return null!==n?(this.trace_atn_sim&&console.log(\"addDFAState \"+e+\" exists\"),n):(e.stateNumber=t.states.length,e.configs.readOnly||(e.configs.optimizeConfigs(this),e.configs.setReadonly(!0)),this.trace_atn_sim&&console.log(\"addDFAState new \"+e),t.states.add(e),this.debug&&console.log(\"adding new DFA state: \"+e),e)}reportAttemptingFullContext(t,e,n,s,i){if(this.debug||this.retry_debug){const e=new m(s,i+1);console.log(\"reportAttemptingFullContext decision=\"+t.decision+\":\"+n+\", input=\"+this.parser.getTokenStream().getText(e))}null!==this.parser&&this.parser.getErrorListenerDispatch().reportAttemptingFullContext(this.parser,t,s,i,e,n)}reportContextSensitivity(t,e,n,s,i){if(this.debug||this.retry_debug){const e=new m(s,i+1);console.log(\"reportContextSensitivity decision=\"+t.decision+\":\"+n+\", input=\"+this.parser.getTokenStream().getText(e))}null!==this.parser&&this.parser.getErrorListenerDispatch().reportContextSensitivity(this.parser,t,s,i,e,n)}reportAmbiguity(t,e,n,s,i,r,o){if(this.debug||this.retry_debug){const t=new m(n,s+1);console.log(\"reportAmbiguity \"+r+\":\"+o+\", input=\"+this.parser.getTokenStream().getText(t))}null!==this.parser&&this.parser.getErrorListenerDispatch().reportAmbiguity(this.parser,t,n,s,i,r,o)}}class ie{constructor(){this.cache=new H}add(t){if(t===U.EMPTY)return U.EMPTY;const e=this.cache.get(t)||null;return null!==e?e:(this.cache.set(t,t),t)}get(t){return this.cache.get(t)||null}get length(){return this.cache.length}}const re={ATN:$,ATNDeserializer:Lt,LexerATNSimulator:Xt,ParserATNSimulator:se,PredictionMode:te,PredictionContextCache:ie};class oe{constructor(t,e,n){this.dfa=t,this.literalNames=e||[],this.symbolicNames=n||[]}toString(){if(null===this.dfa.s0)return null;let t=\"\";const e=this.dfa.sortedStates();for(let n=0;n<e.length;n++){const s=e[n];if(null!==s.edges){const e=s.edges.length;for(let n=0;n<e;n++){const e=s.edges[n]||null;null!==e&&2147483647!==e.stateNumber&&(t=t.concat(this.getStateString(s)),t=t.concat(\"-\"),t=t.concat(this.getEdgeLabel(n)),t=t.concat(\"->\"),t=t.concat(this.getStateString(e)),t=t.concat(\"\\n\"))}}}return 0===t.length?null:t}getEdgeLabel(t){return 0===t?\"EOF\":null!==this.literalNames||null!==this.symbolicNames?this.literalNames[t-1]||this.symbolicNames[t-1]:String.fromCharCode(t-1)}getStateString(t){const e=(t.isAcceptState?\":\":\"\")+\"s\"+t.stateNumber+(t.requiresFullContext?\"^\":\"\");return t.isAcceptState?null!==t.predicates?e+\"=>\"+c(t.predicates):e+\"=>\"+t.prediction.toString():e}}class ae extends oe{constructor(t){super(t,null)}getEdgeLabel(t){return\"'\"+String.fromCharCode(t)+\"'\"}}class le{constructor(t,e){if(void 0===e&&(e=0),this.atnStartState=t,this.decision=e,this._states=new d,this.s0=null,this.precedenceDfa=!1,t instanceof rt&&t.isPrecedenceDecision){this.precedenceDfa=!0;const t=new qt(null,new zt);t.edges=[],t.isAcceptState=!1,t.requiresFullContext=!1,this.s0=t}}getPrecedenceStartState(t){if(!this.precedenceDfa)throw\"Only precedence DFAs may contain a precedence start state.\";return t<0||t>=this.s0.edges.length?null:this.s0.edges[t]||null}setPrecedenceStartState(t,e){if(!this.precedenceDfa)throw\"Only precedence DFAs may contain a precedence start state.\";t<0||(this.s0.edges[t]=e)}setPrecedenceDfa(t){if(this.precedenceDfa!==t){if(this._states=new d,t){const t=new qt(null,new zt);t.edges=[],t.isAcceptState=!1,t.requiresFullContext=!1,this.s0=t}else this.s0=null;this.precedenceDfa=t}}sortedStates(){return this._states.values().sort((function(t,e){return t.stateNumber-e.stateNumber}))}toString(t,e){return t=t||null,e=e||null,null===this.s0?\"\":new oe(this,t,e).toString()}toLexerString(){return null===this.s0?\"\":new ae(this).toString()}get states(){return this._states}}const he={DFA:le,DFASerializer:oe,LexerDFASerializer:ae,PredPrediction:Jt},ce={PredictionContext:U},ue={Interval:m,IntervalSet:E};class de{visitTerminal(t){}visitErrorNode(t){}enterEveryRule(t){}exitEveryRule(t){}}class pe{visit(t){return Array.isArray(t)?t.map((function(t){return t.accept(this)}),this):t.accept(this)}visitChildren(t){return t.children?this.visit(t.children):null}visitTerminal(t){}visitErrorNode(t){}}class ge{walk(t,e){if(e instanceof D||void 0!==e.isErrorNode&&e.isErrorNode())t.visitErrorNode(e);else if(e instanceof P)t.visitTerminal(e);else{this.enterRule(t,e);for(let n=0;n<e.getChildCount();n++){const s=e.getChild(n);this.walk(t,s)}this.exitRule(t,e)}}enterRule(t,e){const n=e.ruleContext;t.enterEveryRule(n),n.enterRule(t)}exitRule(t,e){const n=e.ruleContext;n.exitRule(t),t.exitEveryRule(n)}}ge.DEFAULT=new ge;const fe={Trees:F,RuleNode:w,ErrorNode:D,TerminalNode:P,ParseTreeListener:de,ParseTreeVisitor:pe,ParseTreeWalker:ge};class xe extends Ft{constructor(t){super({message:\"\",recognizer:t,input:t.getInputStream(),ctx:t._ctx}),this.offendingToken=t.getCurrentToken()}}class Te extends Ft{constructor(t,e,n){super({message:Se(e,n||null),recognizer:t,input:t.getInputStream(),ctx:t._ctx});const s=t._interp.atn.states[t.state].transitions[0];s instanceof gt?(this.ruleIndex=s.ruleIndex,this.predicateIndex=s.predIndex):(this.ruleIndex=0,this.predicateIndex=0),this.predicate=e,this.offendingToken=t.getCurrentToken()}}function Se(t,e){return null!==e?e:\"failed predicate: {\"+t+\"}?\"}class me extends Ot{constructor(t){super(),t=t||!0,this.exactOnly=t}reportAmbiguity(t,e,n,s,i,r,o){if(this.exactOnly&&!i)return;const a=\"reportAmbiguity d=\"+this.getDecisionDescription(t,e)+\": ambigAlts=\"+this.getConflictingAlts(r,o)+\", input='\"+t.getTokenStream().getText(new m(n,s))+\"'\";t.notifyErrorListeners(a)}reportAttemptingFullContext(t,e,n,s,i,r){const o=\"reportAttemptingFullContext d=\"+this.getDecisionDescription(t,e)+\", input='\"+t.getTokenStream().getText(new m(n,s))+\"'\";t.notifyErrorListeners(o)}reportContextSensitivity(t,e,n,s,i,r){const o=\"reportContextSensitivity d=\"+this.getDecisionDescription(t,e)+\", input='\"+t.getTokenStream().getText(new m(n,s))+\"'\";t.notifyErrorListeners(o)}getDecisionDescription(t,e){const n=e.decision,s=e.atnStartState.ruleIndex,i=t.ruleNames;if(s<0||s>=i.length)return\"\"+n;const r=i[s]||null;return null===r||0===r.length?\"\"+n:`${n} (${r})`}getConflictingAlts(t,e){if(null!==t)return t;const n=new W;for(let t=0;t<e.items.length;t++)n.add(e.items[t].alt);return`{${n.values().join(\", \")}}`}}class Ee extends Error{constructor(){super(),Error.captureStackTrace(this,Ee)}}class _e{reset(t){}recoverInline(t){}recover(t,e){}sync(t){}inErrorRecoveryMode(t){}reportError(t){}}class Ae extends _e{constructor(){super(),this.errorRecoveryMode=!1,this.lastErrorIndex=-1,this.lastErrorStates=null,this.nextTokensContext=null,this.nextTokenState=0}reset(t){this.endErrorCondition(t)}beginErrorCondition(t){this.errorRecoveryMode=!0}inErrorRecoveryMode(t){return this.errorRecoveryMode}endErrorCondition(t){this.errorRecoveryMode=!1,this.lastErrorStates=null,this.lastErrorIndex=-1}reportMatch(t){this.endErrorCondition(t)}reportError(t,e){this.inErrorRecoveryMode(t)||(this.beginErrorCondition(t),e instanceof ee?this.reportNoViableAlternative(t,e):e instanceof xe?this.reportInputMismatch(t,e):e instanceof Te?this.reportFailedPredicate(t,e):(console.log(\"unknown recognition error type: \"+e.constructor.name),console.log(e.stack),t.notifyErrorListeners(e.getOffendingToken(),e.getMessage(),e)))}recover(t,e){this.lastErrorIndex===t.getInputStream().index&&null!==this.lastErrorStates&&this.lastErrorStates.indexOf(t.state)>=0&&t.consume(),this.lastErrorIndex=t._input.index,null===this.lastErrorStates&&(this.lastErrorStates=[]),this.lastErrorStates.push(t.state);const n=this.getErrorRecoverySet(t);this.consumeUntil(t,n)}sync(e){if(this.inErrorRecoveryMode(e))return;const n=e._interp.atn.states[e.state],s=e.getTokenStream().LA(1),i=e.atn.nextTokens(n);if(i.contains(s))return this.nextTokensContext=null,void(this.nextTokenState=_.INVALID_STATE_NUMBER);if(i.contains(t.EPSILON))null===this.nextTokensContext&&(this.nextTokensContext=e._ctx,this.nextTokensState=e._stateNumber);else switch(n.stateType){case _.BLOCK_START:case _.STAR_BLOCK_START:case _.PLUS_BLOCK_START:case _.STAR_LOOP_ENTRY:if(null!==this.singleTokenDeletion(e))return;throw new xe(e);case _.PLUS_LOOP_BACK:case _.STAR_LOOP_BACK:{this.reportUnwantedToken(e);const t=new E;t.addSet(e.getExpectedTokens());const n=t.addSet(this.getErrorRecoverySet(e));this.consumeUntil(e,n)}}}reportNoViableAlternative(e,n){const s=e.getTokenStream();let i;i=null!==s?n.startToken.type===t.EOF?\"<EOF>\":s.getText(new m(n.startToken.tokenIndex,n.offendingToken.tokenIndex)):\"<unknown input>\";const r=\"no viable alternative at input \"+this.escapeWSAndQuote(i);e.notifyErrorListeners(r,n.offendingToken,n)}reportInputMismatch(t,e){const n=\"mismatched input \"+this.getTokenErrorDisplay(e.offendingToken)+\" expecting \"+e.getExpectedTokens().toString(t.literalNames,t.symbolicNames);t.notifyErrorListeners(n,e.offendingToken,e)}reportFailedPredicate(t,e){const n=\"rule \"+t.ruleNames[t._ctx.ruleIndex]+\" \"+e.message;t.notifyErrorListeners(n,e.offendingToken,e)}reportUnwantedToken(t){if(this.inErrorRecoveryMode(t))return;this.beginErrorCondition(t);const e=t.getCurrentToken(),n=\"extraneous input \"+this.getTokenErrorDisplay(e)+\" expecting \"+this.getExpectedTokens(t).toString(t.literalNames,t.symbolicNames);t.notifyErrorListeners(n,e,null)}reportMissingToken(t){if(this.inErrorRecoveryMode(t))return;this.beginErrorCondition(t);const e=t.getCurrentToken(),n=\"missing \"+this.getExpectedTokens(t).toString(t.literalNames,t.symbolicNames)+\" at \"+this.getTokenErrorDisplay(e);t.notifyErrorListeners(n,e,null)}recoverInline(t){const e=this.singleTokenDeletion(t);if(null!==e)return t.consume(),e;if(this.singleTokenInsertion(t))return this.getMissingSymbol(t);throw new xe(t)}singleTokenInsertion(t){const e=t.getTokenStream().LA(1),n=t._interp.atn,s=n.states[t.state].transitions[0].target;return!!n.nextTokens(s,t._ctx).contains(e)&&(this.reportMissingToken(t),!0)}singleTokenDeletion(t){const e=t.getTokenStream().LA(2);if(this.getExpectedTokens(t).contains(e)){this.reportUnwantedToken(t),t.consume();const e=t.getCurrentToken();return this.reportMatch(t),e}return null}getMissingSymbol(e){const n=e.getCurrentToken(),s=this.getExpectedTokens(e).first();let i;i=s===t.EOF?\"<missing EOF>\":\"<missing \"+e.literalNames[s]+\">\";let r=n;const o=e.getTokenStream().LT(-1);return r.type===t.EOF&&null!==o&&(r=o),e.getTokenFactory().create(r.source,s,i,t.DEFAULT_CHANNEL,-1,-1,r.line,r.column)}getExpectedTokens(t){return t.getExpectedTokens()}getTokenErrorDisplay(e){if(null===e)return\"<no token>\";let n=e.text;return null===n&&(n=e.type===t.EOF?\"<EOF>\":\"<\"+e.type+\">\"),this.escapeWSAndQuote(n)}escapeWSAndQuote(t){return\"'\"+(t=(t=(t=t.replace(/\\n/g,\"\\\\n\")).replace(/\\r/g,\"\\\\r\")).replace(/\\t/g,\"\\\\t\"))+\"'\"}getErrorRecoverySet(e){const n=e._interp.atn;let s=e._ctx;const i=new E;for(;null!==s&&s.invokingState>=0;){const t=n.states[s.invokingState].transitions[0],e=n.nextTokens(t.followState);i.addSet(e),s=s.parentCtx}return i.removeOne(t.EPSILON),i}consumeUntil(e,n){let s=e.getTokenStream().LA(1);for(;s!==t.EOF&&!n.contains(s);)e.consume(),s=e.getTokenStream().LA(1)}}class Ce extends Ae{constructor(){super()}recover(t,e){let n=t._ctx;for(;null!==n;)n.exception=e,n=n.parentCtx;throw new Ee(e)}recoverInline(t){this.recover(t,new xe(t))}sync(t){}}const Ne={RecognitionException:Ft,NoViableAltException:ee,LexerNoViableAltException:Mt,InputMismatchException:xe,FailedPredicateException:Te,DiagnosticErrorListener:me,BailErrorStrategy:Ce,DefaultErrorStrategy:Ae,ErrorListener:Ot};class Ie{constructor(t,e){if(this.name=\"<empty>\",this.strdata=t,this.decodeToUnicodeCodePoints=e||!1,this._index=0,this.data=[],this.decodeToUnicodeCodePoints)for(let t=0;t<this.strdata.length;){const e=this.strdata.codePointAt(t);this.data.push(e),t+=e<=65535?1:2}else{this.data=new Array(this.strdata.length);for(let t=0;t<this.strdata.length;t++)this.data[t]=this.strdata.charCodeAt(t)}this._size=this.data.length}reset(){this._index=0}consume(){if(this._index>=this._size)throw\"cannot consume EOF\";this._index+=1}LA(e){if(0===e)return 0;e<0&&(e+=1);const n=this._index+e-1;return n<0||n>=this._size?t.EOF:this.data[n]}LT(t){return this.LA(t)}mark(){return-1}release(t){}seek(t){t<=this._index?this._index=t:this._index=Math.min(t,this._size)}getText(t,e){if(e>=this._size&&(e=this._size-1),t>=this._size)return\"\";if(this.decodeToUnicodeCodePoints){let n=\"\";for(let s=t;s<=e;s++)n+=String.fromCodePoint(this.data[s]);return n}return this.strdata.slice(t,e+1)}toString(){return this.strdata}get index(){return this._index}get size(){return this._size}}class ye extends Ie{constructor(t,e){super(t,e)}}var ke=n(92);const Le=\"undefined\"!=typeof process&&null!=process.versions&&null!=process.versions.node;class Oe extends ye{static fromPath(t,e,n){if(!Le)throw new Error(\"FileStream is only available when running in Node!\");ke.readFile(t,e,(function(t,e){let s=null;null!==e&&(s=new Ie(e,!0)),n(t,s)}))}constructor(t,e,n){if(!Le)throw new Error(\"FileStream is only available when running in Node!\");super(ke.readFileSync(t,e||\"utf-8\"),n),this.fileName=t}}const Re={fromString:function(t){return new Ie(t,!0)},fromBlob:function(t,e,n,s){const i=new window.FileReader;i.onload=function(t){const e=new Ie(t.target.result,!0);n(e)},i.onerror=s,i.readAsText(t,e)},fromBuffer:function(t,e){return new Ie(t.toString(e),!0)},fromPath:function(t,e,n){Oe.fromPath(t,e,n)},fromPathSync:function(t,e){return new Oe(t,e)}},ve={arrayToString:c,stringToCharArray:function(t){let e=new Uint16Array(t.length);for(let n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}};class we{}class Pe extends we{constructor(t){super(),this.tokenSource=t,this.tokens=[],this.index=-1,this.fetchedEOF=!1}mark(){return 0}release(t){}reset(){this.seek(0)}seek(t){this.lazyInit(),this.index=this.adjustSeekIndex(t)}get size(){return this.tokens.length}get(t){return this.lazyInit(),this.tokens[t]}consume(){let e=!1;if(e=this.index>=0&&(this.fetchedEOF?this.index<this.tokens.length-1:this.index<this.tokens.length),!e&&this.LA(1)===t.EOF)throw\"cannot consume EOF\";this.sync(this.index+1)&&(this.index=this.adjustSeekIndex(this.index+1))}sync(t){const e=t-this.tokens.length+1;return!(e>0)||this.fetch(e)>=e}fetch(e){if(this.fetchedEOF)return 0;for(let n=0;n<e;n++){const e=this.tokenSource.nextToken();if(e.tokenIndex=this.tokens.length,this.tokens.push(e),e.type===t.EOF)return this.fetchedEOF=!0,n+1}return e}getTokens(e,n,s){if(void 0===s&&(s=null),e<0||n<0)return null;this.lazyInit();const i=[];n>=this.tokens.length&&(n=this.tokens.length-1);for(let r=e;r<n;r++){const e=this.tokens[r];if(e.type===t.EOF)break;(null===s||s.contains(e.type))&&i.push(e)}return i}LA(t){return this.LT(t).type}LB(t){return this.index-t<0?null:this.tokens[this.index-t]}LT(t){if(this.lazyInit(),0===t)return null;if(t<0)return this.LB(-t);const e=this.index+t-1;return this.sync(e),e>=this.tokens.length?this.tokens[this.tokens.length-1]:this.tokens[e]}adjustSeekIndex(t){return t}lazyInit(){-1===this.index&&this.setup()}setup(){this.sync(0),this.index=this.adjustSeekIndex(0)}setTokenSource(t){this.tokenSource=t,this.tokens=[],this.index=-1,this.fetchedEOF=!1}nextTokenOnChannel(e,n){if(this.sync(e),e>=this.tokens.length)return-1;let s=this.tokens[e];for(;s.channel!==this.channel;){if(s.type===t.EOF)return-1;e+=1,this.sync(e),s=this.tokens[e]}return e}previousTokenOnChannel(t,e){for(;t>=0&&this.tokens[t].channel!==e;)t-=1;return t}getHiddenTokensToRight(t,e){if(void 0===e&&(e=-1),this.lazyInit(),t<0||t>=this.tokens.length)throw t+\" not in 0..\"+this.tokens.length-1;const n=this.nextTokenOnChannel(t+1,Ut.DEFAULT_TOKEN_CHANNEL),s=t+1,i=-1===n?this.tokens.length-1:n;return this.filterForChannel(s,i,e)}getHiddenTokensToLeft(t,e){if(void 0===e&&(e=-1),this.lazyInit(),t<0||t>=this.tokens.length)throw t+\" not in 0..\"+this.tokens.length-1;const n=this.previousTokenOnChannel(t-1,Ut.DEFAULT_TOKEN_CHANNEL);if(n===t-1)return null;const s=n+1,i=t-1;return this.filterForChannel(s,i,e)}filterForChannel(t,e,n){const s=[];for(let i=t;i<e+1;i++){const t=this.tokens[i];-1===n?t.channel!==Ut.DEFAULT_TOKEN_CHANNEL&&s.push(t):t.channel===n&&s.push(t)}return 0===s.length?null:s}getSourceName(){return this.tokenSource.getSourceName()}getText(e){this.lazyInit(),this.fill(),e||(e=new m(0,this.tokens.length-1));let n=e.start;n instanceof t&&(n=n.tokenIndex);let s=e.stop;if(s instanceof t&&(s=s.tokenIndex),null===n||null===s||n<0||s<0)return\"\";s>=this.tokens.length&&(s=this.tokens.length-1);let i=\"\";for(let e=n;e<s+1;e++){const n=this.tokens[e];if(n.type===t.EOF)break;i+=n.text}return i}fill(){for(this.lazyInit();1e3===this.fetch(1e3););}}Object.defineProperty(Pe,\"size\",{get:function(){return this.tokens.length}});class De extends Pe{constructor(e,n){super(e),this.channel=void 0===n?t.DEFAULT_CHANNEL:n}adjustSeekIndex(t){return this.nextTokenOnChannel(t,this.channel)}LB(t){if(0===t||this.index-t<0)return null;let e=this.index,n=1;for(;n<=t;)e=this.previousTokenOnChannel(e-1,this.channel),n+=1;return e<0?null:this.tokens[e]}LT(t){if(this.lazyInit(),0===t)return null;if(t<0)return this.LB(-t);let e=this.index,n=1;for(;n<t;)this.sync(e+1)&&(e=this.nextTokenOnChannel(e+1,this.channel)),n+=1;return this.tokens[e]}getNumberOfOnChannelTokens(){let e=0;this.fill();for(let n=0;n<this.tokens.length;n++){const s=this.tokens[n];if(s.channel===this.channel&&(e+=1),s.type===t.EOF)break}return e}}class be extends de{constructor(t){super(),this.parser=t}enterEveryRule(t){console.log(\"enter   \"+this.parser.ruleNames[t.ruleIndex]+\", LT(1)=\"+this.parser._input.LT(1).text)}visitTerminal(t){console.log(\"consume \"+t.symbol+\" rule \"+this.parser.ruleNames[this.parser._ctx.ruleIndex])}exitEveryRule(t){console.log(\"exit    \"+this.parser.ruleNames[t.ruleIndex]+\", LT(1)=\"+this.parser._input.LT(1).text)}}class Fe extends wt{constructor(t){super(),this._input=null,this._errHandler=new Ae,this._precedenceStack=[],this._precedenceStack.push(0),this._ctx=null,this.buildParseTrees=!0,this._tracer=null,this._parseListeners=null,this._syntaxErrors=0,this.setInputStream(t)}reset(){null!==this._input&&this._input.seek(0),this._errHandler.reset(this),this._ctx=null,this._syntaxErrors=0,this.setTrace(!1),this._precedenceStack=[],this._precedenceStack.push(0),null!==this._interp&&this._interp.reset()}match(t){let e=this.getCurrentToken();return e.type===t?(this._errHandler.reportMatch(this),this.consume()):(e=this._errHandler.recoverInline(this),this.buildParseTrees&&-1===e.tokenIndex&&this._ctx.addErrorNode(e)),e}matchWildcard(){let t=this.getCurrentToken();return t.type>0?(this._errHandler.reportMatch(this),this.consume()):(t=this._errHandler.recoverInline(this),this.buildParseTrees&&-1===t.tokenIndex&&this._ctx.addErrorNode(t)),t}getParseListeners(){return this._parseListeners||[]}addParseListener(t){if(null===t)throw\"listener\";null===this._parseListeners&&(this._parseListeners=[]),this._parseListeners.push(t)}removeParseListener(t){if(null!==this._parseListeners){const e=this._parseListeners.indexOf(t);e>=0&&this._parseListeners.splice(e,1),0===this._parseListeners.length&&(this._parseListeners=null)}}removeParseListeners(){this._parseListeners=null}triggerEnterRuleEvent(){if(null!==this._parseListeners){const t=this._ctx;this._parseListeners.forEach((function(e){e.enterEveryRule(t),t.enterRule(e)}))}}triggerExitRuleEvent(){if(null!==this._parseListeners){const t=this._ctx;this._parseListeners.slice(0).reverse().forEach((function(e){t.exitRule(e),e.exitEveryRule(t)}))}}getTokenFactory(){return this._input.tokenSource._factory}setTokenFactory(t){this._input.tokenSource._factory=t}getATNWithBypassAlts(){const t=this.getSerializedATN();if(null===t)throw\"The current parser does not support an ATN with bypass alternatives.\";let e=this.bypassAltsAtnCache[t];if(null===e){const n=new Tt;n.generateRuleBypassTransitions=!0,e=new Lt(n).deserialize(t),this.bypassAltsAtnCache[t]=e}return e}getInputStream(){return this.getTokenStream()}setInputStream(t){this.setTokenStream(t)}getTokenStream(){return this._input}setTokenStream(t){this._input=null,this.reset(),this._input=t}get syntaxErrorsCount(){return this._syntaxErrors}getCurrentToken(){return this._input.LT(1)}notifyErrorListeners(t,e,n){n=n||null,null===(e=e||null)&&(e=this.getCurrentToken()),this._syntaxErrors+=1;const s=e.line,i=e.column;this.getErrorListenerDispatch().syntaxError(this,e,s,i,t,n)}consume(){const e=this.getCurrentToken();e.type!==t.EOF&&this.getInputStream().consume();const n=null!==this._parseListeners&&this._parseListeners.length>0;if(this.buildParseTrees||n){let t;t=this._errHandler.inErrorRecoveryMode(this)?this._ctx.addErrorNode(e):this._ctx.addTokenNode(e),t.invokingState=this.state,n&&this._parseListeners.forEach((function(e){t instanceof D||void 0!==t.isErrorNode&&t.isErrorNode()?e.visitErrorNode(t):t instanceof P&&e.visitTerminal(t)}))}return e}addContextToParseTree(){null!==this._ctx.parentCtx&&this._ctx.parentCtx.addChild(this._ctx)}enterRule(t,e,n){this.state=e,this._ctx=t,this._ctx.start=this._input.LT(1),this.buildParseTrees&&this.addContextToParseTree(),this.triggerEnterRuleEvent()}exitRule(){this._ctx.stop=this._input.LT(-1),this.triggerExitRuleEvent(),this.state=this._ctx.invokingState,this._ctx=this._ctx.parentCtx}enterOuterAlt(t,e){t.setAltNumber(e),this.buildParseTrees&&this._ctx!==t&&null!==this._ctx.parentCtx&&(this._ctx.parentCtx.removeLastChild(),this._ctx.parentCtx.addChild(t)),this._ctx=t}getPrecedence(){return 0===this._precedenceStack.length?-1:this._precedenceStack[this._precedenceStack.length-1]}enterRecursionRule(t,e,n,s){this.state=e,this._precedenceStack.push(s),this._ctx=t,this._ctx.start=this._input.LT(1),this.triggerEnterRuleEvent()}pushNewRecursionContext(t,e,n){const s=this._ctx;s.parentCtx=t,s.invokingState=e,s.stop=this._input.LT(-1),this._ctx=t,this._ctx.start=s.start,this.buildParseTrees&&this._ctx.addChild(s),this.triggerEnterRuleEvent()}unrollRecursionContexts(t){this._precedenceStack.pop(),this._ctx.stop=this._input.LT(-1);const e=this._ctx,n=this.getParseListeners();if(null!==n&&n.length>0)for(;this._ctx!==t;)this.triggerExitRuleEvent(),this._ctx=this._ctx.parentCtx;else this._ctx=t;e.parentCtx=t,this.buildParseTrees&&null!==t&&t.addChild(e)}getInvokingContext(t){let e=this._ctx;for(;null!==e;){if(e.ruleIndex===t)return e;e=e.parentCtx}return null}precpred(t,e){return e>=this._precedenceStack[this._precedenceStack.length-1]}inContext(t){return!1}isExpectedToken(e){const n=this._interp.atn;let s=this._ctx;const i=n.states[this.state];let r=n.nextTokens(i);if(r.contains(e))return!0;if(!r.contains(t.EPSILON))return!1;for(;null!==s&&s.invokingState>=0&&r.contains(t.EPSILON);){const t=n.states[s.invokingState].transitions[0];if(r=n.nextTokens(t.followState),r.contains(e))return!0;s=s.parentCtx}return!(!r.contains(t.EPSILON)||e!==t.EOF)}getExpectedTokens(){return this._interp.atn.getExpectedTokens(this.state,this._ctx)}getExpectedTokensWithinCurrentRule(){const t=this._interp.atn,e=t.states[this.state];return t.nextTokens(e)}getRuleIndex(t){const e=this.getRuleIndexMap()[t];return null!==e?e:-1}getRuleInvocationStack(t){null===(t=t||null)&&(t=this._ctx);const e=[];for(;null!==t;){const n=t.ruleIndex;n<0?e.push(\"n/a\"):e.push(this.ruleNames[n]),t=t.parentCtx}return e}getDFAStrings(){return this._interp.decisionToDFA.toString()}dumpDFA(){let t=!1;for(let e=0;e<this._interp.decisionToDFA.length;e++){const n=this._interp.decisionToDFA[e];n.states.length>0&&(t&&console.log(),this.printer.println(\"Decision \"+n.decision+\":\"),this.printer.print(n.toString(this.literalNames,this.symbolicNames)),t=!0)}}getSourceName(){return this._input.sourceName}setTrace(t){t?(null!==this._tracer&&this.removeParseListener(this._tracer),this._tracer=new be(this),this.addParseListener(this._tracer)):(this.removeParseListener(this._tracer),this._tracer=null)}}Fe.bypassAltsAtnCache={};class Me extends P{constructor(t){super(),this.parentCtx=null,this.symbol=t}getChild(t){return null}getSymbol(){return this.symbol}getParent(){return this.parentCtx}getPayload(){return this.symbol}getSourceInterval(){if(null===this.symbol)return m.INVALID_INTERVAL;const t=this.symbol.tokenIndex;return new m(t,t)}getChildCount(){return 0}accept(t){return t.visitTerminal(this)}getText(){return this.symbol.text}toString(){return this.symbol.type===t.EOF?\"<EOF>\":this.symbol.text}}class Ue extends Me{constructor(t){super(t)}isErrorNode(){return!0}accept(t){return t.visitErrorNode(this)}}class Be extends M{constructor(t,e){super(t,e),this.children=null,this.start=null,this.stop=null,this.exception=null}copyFrom(t){this.parentCtx=t.parentCtx,this.invokingState=t.invokingState,this.children=null,this.start=t.start,this.stop=t.stop,t.children&&(this.children=[],t.children.map((function(t){t instanceof Ue&&(this.children.push(t),t.parentCtx=this)}),this))}enterRule(t){}exitRule(t){}addChild(t){return null===this.children&&(this.children=[]),this.children.push(t),t}removeLastChild(){null!==this.children&&this.children.pop()}addTokenNode(t){const e=new Me(t);return this.addChild(e),e.parentCtx=this,e}addErrorNode(t){const e=new Ue(t);return this.addChild(e),e.parentCtx=this,e}getChild(t,e){if(e=e||null,null===this.children||t<0||t>=this.children.length)return null;if(null===e)return this.children[t];for(let n=0;n<this.children.length;n++){const s=this.children[n];if(s instanceof e){if(0===t)return s;t-=1}}return null}getToken(t,e){if(null===this.children||e<0||e>=this.children.length)return null;for(let n=0;n<this.children.length;n++){const s=this.children[n];if(s instanceof P&&s.symbol.type===t){if(0===e)return s;e-=1}}return null}getTokens(t){if(null===this.children)return[];{const e=[];for(let n=0;n<this.children.length;n++){const s=this.children[n];s instanceof P&&s.symbol.type===t&&e.push(s)}return e}}getTypedRuleContext(t,e){return this.getChild(e,t)}getTypedRuleContexts(t){if(null===this.children)return[];{const e=[];for(let n=0;n<this.children.length;n++){const s=this.children[n];s instanceof t&&e.push(s)}return e}}getChildCount(){return null===this.children?0:this.children.length}getSourceInterval(){return null===this.start||null===this.stop?m.INVALID_INTERVAL:new m(this.start.tokenIndex,this.stop.tokenIndex)}}M.EMPTY=new Be;class Ve{static DEFAULT_PROGRAM_NAME=\"default\";constructor(t){this.tokens=t,this.programs=new Map}getTokenStream(){return this.tokens}insertAfter(t,e){let n,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ve.DEFAULT_PROGRAM_NAME;n=\"number\"==typeof t?t:t.tokenIndex;let i=this.getProgram(s),r=new He(this.tokens,n,i.length,e);i.push(r)}insertBefore(t,e){let n,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ve.DEFAULT_PROGRAM_NAME;n=\"number\"==typeof t?t:t.tokenIndex;const i=this.getProgram(s),r=new qe(this.tokens,n,i.length,e);i.push(r)}replaceSingle(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ve.DEFAULT_PROGRAM_NAME;this.replace(t,t,e,n)}replace(t,e,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Ve.DEFAULT_PROGRAM_NAME;if(\"number\"!=typeof t&&(t=t.tokenIndex),\"number\"!=typeof e&&(e=e.tokenIndex),t>e||t<0||e<0||e>=this.tokens.size)throw new RangeError(`replace: range invalid: ${t}..${e}(size=${this.tokens.size})`);let i=this.getProgram(s),r=new Ke(this.tokens,t,e,i.length,n);i.push(r)}delete(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ve.DEFAULT_PROGRAM_NAME;void 0===e&&(e=t),this.replace(t,e,null,n)}getProgram(t){let e=this.programs.get(t);return null==e&&(e=this.initializeProgram(t)),e}initializeProgram(t){const e=[];return this.programs.set(t,e),e}getText(e){let n,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ve.DEFAULT_PROGRAM_NAME;n=e instanceof m?e:new m(0,this.tokens.size-1),\"string\"==typeof e&&(s=e);const i=this.programs.get(s);let r=n.start,o=n.stop;if(o>this.tokens.size-1&&(o=this.tokens.size-1),r<0&&(r=0),null==i||0===i.length)return this.tokens.getText(new m(r,o));let a=[],l=this.reduceToSingleOperationPerIndex(i),h=r;for(;h<=o&&h<this.tokens.size;){let e=l.get(h);l.delete(h);let n=this.tokens.get(h);null==e?(n.type!==t.EOF&&a.push(String(n.text)),h++):h=e.execute(a)}if(o===this.tokens.size-1)for(const t of l.values())t.index>=this.tokens.size-1&&a.push(t.text.toString());return a.join(\"\")}reduceToSingleOperationPerIndex(t){for(let e=0;e<t.length;e++){let n=t[e];if(null==n)continue;if(!(n instanceof Ke))continue;let s=n,i=this.getKindOfOps(t,qe,e);for(let e of i)e.index===s.index?(t[e.instructionIndex]=void 0,s.text=e.text.toString()+(null!=s.text?s.text.toString():\"\")):e.index>s.index&&e.index<=s.lastIndex&&(t[e.instructionIndex]=void 0);let r=this.getKindOfOps(t,Ke,e);for(let e of r){if(e.index>=s.index&&e.lastIndex<=s.lastIndex){t[e.instructionIndex]=void 0;continue}let n=e.lastIndex<s.index||e.index>s.lastIndex;if(null!=e.text||null!=s.text||n){if(!n)throw new Error(`replace op boundaries of ${s} overlap with previous ${e}`)}else t[e.instructionIndex]=void 0,s.index=Math.min(e.index,s.index),s.lastIndex=Math.max(e.lastIndex,s.lastIndex)}}for(let e=0;e<t.length;e++){let n=t[e];if(null==n)continue;if(!(n instanceof qe))continue;let s=n,i=this.getKindOfOps(t,qe,e);for(let e of i)e.index===s.index&&(e instanceof He?(s.text=this.catOpText(e.text,s.text),t[e.instructionIndex]=void 0):e instanceof qe&&(s.text=this.catOpText(s.text,e.text),t[e.instructionIndex]=void 0));let r=this.getKindOfOps(t,Ke,e);for(let n of r)if(s.index!==n.index){if(s.index>=n.index&&s.index<=n.lastIndex)throw new Error(`insert op ${s} within boundaries of previous ${n}`)}else n.text=this.catOpText(s.text,n.text),t[e]=void 0}let e=new Map;for(let n of t)if(null!=n){if(null!=e.get(n.index))throw new Error(\"should only be one op per index\");e.set(n.index,n)}return e}catOpText(t,e){let n=\"\",s=\"\";return null!=t&&(n=t.toString()),null!=e&&(s=e.toString()),n+s}getKindOfOps(t,e,n){return t.slice(0,n).filter((t=>t&&t instanceof e))}}class ze{constructor(t,e,n,s){this.tokens=t,this.instructionIndex=n,this.index=e,this.text=void 0===s?\"\":s}toString(){let t=this.constructor.name;const e=t.indexOf(\"$\");return t=t.substring(e+1,t.length),\"<\"+t+\"@\"+this.tokens.get(this.index)+':\"'+this.text+'\">'}}class qe extends ze{constructor(t,e,n,s){super(t,e,n,s)}execute(e){return this.text&&e.push(this.text.toString()),this.tokens.get(this.index).type!==t.EOF&&e.push(String(this.tokens.get(this.index).text)),this.index+1}}class He extends qe{constructor(t,e,n,s){super(t,e+1,n,s)}}class Ke extends ze{constructor(t,e,n,s,i){super(t,e,s,i),this.lastIndex=n}execute(t){return this.text&&t.push(this.text.toString()),this.lastIndex+1}toString(){return null==this.text?\"<DeleteOp@\"+this.tokens.get(this.index)+\"..\"+this.tokens.get(this.lastIndex)+\">\":\"<ReplaceOp@\"+this.tokens.get(this.index)+\"..\"+this.tokens.get(this.lastIndex)+':\"'+this.text+'\">'}}const Ye={atn:re,dfa:he,context:ce,misc:ue,tree:fe,error:Ne,Token:t,CommonToken:Pt,CharStreams:Re,CharStream:ye,InputStream:ye,CommonTokenStream:De,Lexer:Ut,Parser:Fe,ParserRuleContext:Be,Interval:m,IntervalSet:E,LL1Analyzer:j,Utils:ve,TokenStreamRewriter:Ve}})();var i=s.dx,r=s.q2,o=s.FO,a=s.xf,l=s.Gy,h=s.s4,c=s.c7,u=s._7,d=s.gp,p=s.cK,g=s.zs,f=s.AV,x=s.Xp,T=s.VS,S=s.ul,m=s.hW,E=s.x1,_=s.z5,A=s.oN,C=s.TB,N=s.u1,I=s._b,y=s.$F,k=s._T,L=s.db,O=s.Zx,R=s._x,v=s.r8,w=s.JI,P=s.TP,D=s.WU,b=s.Nj,F=s.ZP;\n//# sourceMappingURL=antlr4.web.mjs.map\n\n//# sourceURL=webpack://ForkJS/./node_modules/antlr4/dist/antlr4.web.mjs?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	ForkJS = __webpack_exports__;
/******/ 	
/******/ })()
;